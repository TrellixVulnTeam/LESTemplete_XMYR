{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\Permission\\Module.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\Permission\\Module.vue","mtime":1612255113521},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"D:\\\\\\u6570\\u701B\\u4FE1\\u606F\\u79D1\\u6280\\\\\\u516C\\u53F8\\u9879\\u76EE\\\\\\u5E7F\\u5DDE\\u897F\\u95E8\\u5B50\\u539F\\u6750\\u6599\\u7ACB\\u4F53\\u5E93\\\\\\u4F4E\\u538B\\u7EBF\\u5708\\\\src\\\\LES.Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _Object$assign from \"D:\\\\\\u6570\\u701B\\u4FE1\\u606F\\u79D1\\u6280\\\\\\u516C\\u53F8\\u9879\\u76EE\\\\\\u5E7F\\u5DDE\\u897F\\u95E8\\u5B50\\u539F\\u6750\\u6599\\u7ACB\\u4F53\\u5E93\\\\\\u4F4E\\u538B\\u7EBF\\u5708\\\\src\\\\LES.Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.search\";\n\nvar _methods;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from '../../../util/date';\nimport { getModuleListPage, removeModule, editModule, addModule } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/ToolbarButton\";\nimport SearchForm from \"../../components/SearchForm\";\nimport ToolbarExport from \"../../components/ToolbarExport\";\nimport { formatDate } from '../../../util/tools';\nexport default {\n  components: {\n    Toolbar: Toolbar,\n    SearchForm: SearchForm,\n    ToolbarExport: ToolbarExport\n  },\n  //注册子组件 \n  data: function data() {\n    return {\n      //导出组件相关 \n      exportFileName: '角色管理信息',\n      //要导出的文件名 \n      currentPageData: [],\n      //当前页面的列表数据 \n      tHeader: ['接口地址', '描述'],\n      //当前页面列表的表头汉字数组，导出用 \n      filterVal: ['LinkUrl', 'Name'],\n      //当前页面列表的表头属性数组，导出用 \n      //搜索框相关 \n      ChildSearchForm: {},\n      commonSearchOptionSet: \"模糊\",\n      //通用查询的默认配置,\"模糊\"或\"精准\"\n      controlStyle: {\n        //设置搜索控件的长度等样式 \n        width: '200px'\n      },\n      labelWidth: \"90px\",\n      //显示Label的宽度 \n      drawerSize: \"450px\",\n      //drawner宽度设置 \n      searchFormInputPlaceholder: '请输入接口地址/描述',\n      //要给子搜索组件传递的值\n      searchFormInputAttrs: ['LinkUrl', 'Name'],\n      //要给子搜索组件传递的属性名\n      formOptions: [{\n        label: '接口地址',\n        prop: 'LinkUrl',\n        element: 'el-input'\n      }, {\n        label: '描述',\n        prop: 'Name',\n        element: 'el-input'\n      }, {\n        label: '创建时间',\n        prop: 'CreateTime',\n        type: 'datetimerange',\n        element: 'el-date-picker'\n      }],\n      tableHeight: window.innerHeight - 180,\n      // 控制表格的高度\n      buttonList: [],\n      currentRow: null,\n      filters: {\n        LinkUrl: ''\n      },\n      users: [],\n      statusList: [{\n        LinkUrl: '激活',\n        value: true\n      }, {\n        LinkUrl: '禁用',\n        value: false\n      }],\n      total: 0,\n      page: 1,\n      pageSize: 10,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      addDialogFormVisible: false,\n      editFormVisible: false,\n      //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        LinkUrl: [{\n          required: true,\n          message: '请输入接口地址',\n          trigger: 'blur'\n        }]\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: false\n      },\n      addFormVisible: false,\n      //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        LinkUrl: [{\n          required: true,\n          message: '请输入接口地址',\n          trigger: 'blur'\n        }]\n      },\n      //新增界面数据\n      addForm: {\n        CreateBy: '',\n        CreateId: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: ''\n      }\n    };\n  },\n  methods: (_methods = {\n    // 设置索引 \n    indexMethod: function indexMethod(index) {\n      return (this.page - 1) * this.pageSize + 1 + index;\n    },\n    selectCurrentRow: function selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    callFunction: function callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getModules();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.getModules();\n    },\n\n    /** \n     * 获取请求参数 \n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据 \n     */\n    getPostParam: function getPostParam(flag) {\n      var para = _Object$assign({}, this.$refs.ChildSearchForm.getFormData());\n\n      para.page = this.page;\n      para.pageSize = this.pageSize;\n\n      if (flag === '2') {\n        // 全部导出 \n        para.page = 1;\n        para.pageSize = 10000;\n      }\n\n      return para;\n    },\n    //性别显示转换\n    formatEnabled: function formatEnabled(row, column) {\n      return row.Enabled ? '正常' : '未知';\n    },\n    formatCreateTime: function formatCreateTime(row, column) {\n      return !row.CreateTime || row.CreateTime == '' ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\n    }\n  }, _defineProperty(_methods, \"handleCurrentChange\", function handleCurrentChange(val) {\n    this.page = val;\n    this.getModules();\n  }), _defineProperty(_methods, \"getModules\", function getModules() {\n    var _this2 = this;\n\n    var para = this.getPostParam('1');\n    this.listLoading = true; //NProgress.start();\n\n    getModuleListPage(para).then(function (res) {\n      _this2.total = res.data.response.dataCount;\n      _this2.users = res.data.response.data;\n      _this2.listLoading = false; //NProgress.done();\n    });\n  }), _defineProperty(_methods, \"exportAllData\", function exportAllData() {\n    var _this3 = this;\n\n    var para = this.getPostParam('2');\n    this.listLoading = true;\n    getModuleListPage(para).then(function (res) {\n      var allData = res.data.response.data;\n\n      _this3.$refs.cmToolbarExport.export2Excel(allData);\n\n      _this3.listLoading = false;\n    });\n  }), _defineProperty(_methods, \"handleDel\", function handleDel() {\n    var _this4 = this;\n\n    var row = this.currentRow;\n\n    if (!row) {\n      this.$message({\n        message: \"请选择要删除的一行数据！\",\n        type: \"error\"\n      });\n      return;\n    }\n\n    this.$confirm('确认删除该记录吗?', '提示', {\n      type: 'warning'\n    }).then(function () {\n      _this4.listLoading = true; //NProgress.start();\n\n      var para = {\n        id: row.Id\n      };\n      removeModule(para).then(function (res) {\n        if (util.isEmt.format(res)) {\n          _this4.listLoading = false;\n          return;\n        }\n\n        _this4.listLoading = false; //NProgress.done();\n\n        if (res.data.success) {\n          _this4.$message({\n            message: '删除成功',\n            type: 'success'\n          });\n        } else {\n          _this4.$message({\n            message: res.data.msg,\n            type: 'error'\n          });\n        }\n\n        _this4.getModules();\n      });\n    }).catch(function () {});\n  }), _defineProperty(_methods, \"handleEdit\", function handleEdit() {\n    var row = this.currentRow;\n\n    if (!row) {\n      this.$message({\n        message: \"请选择要编辑的一行数据！\",\n        type: \"error\"\n      });\n      return;\n    }\n\n    this.editFormVisible = true;\n    this.editForm = _Object$assign({}, row);\n  }), _defineProperty(_methods, \"handleAdd\", function handleAdd() {\n    this.addFormVisible = true;\n    this.addForm = {\n      CreateBy: '',\n      LinkUrl: '',\n      Name: '',\n      Enabled: 'true'\n    };\n  }), _defineProperty(_methods, \"editSubmit\", function editSubmit() {\n    var _this5 = this;\n\n    this.$refs.editForm.validate(function (valid) {\n      if (valid) {\n        _this5.$confirm('确认提交吗？', '提示', {}).then(function () {\n          _this5.editLoading = true; //NProgress.start();\n\n          var para = _Object$assign({}, _this5.editForm);\n\n          para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n          editModule(para).then(function (res) {\n            if (util.isEmt.format(res)) {\n              _this5.editLoading = false;\n              return;\n            }\n\n            if (res.data.success) {\n              _this5.editLoading = false; //NProgress.done();\n\n              _this5.$message({\n                message: res.data.msg,\n                type: 'success'\n              });\n\n              _this5.$refs['editForm'].resetFields();\n\n              _this5.editFormVisible = false;\n\n              _this5.getModules();\n            } else {\n              _this5.$message({\n                message: res.data.msg,\n                type: 'error'\n              });\n            }\n          });\n        });\n      }\n    });\n  }), _defineProperty(_methods, \"addSubmit\", function addSubmit() {\n    var _this6 = this;\n\n    var _this = this;\n\n    this.$refs.addForm.validate(function (valid) {\n      if (valid) {\n        _this6.$confirm('确认提交吗？', '提示', {}).then(function () {\n          _this6.addLoading = true; //NProgress.start();\n\n          var para = _Object$assign({}, _this6.addForm);\n\n          para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n          para.ModifyTime = para.CreateTime;\n          para.IsDeleted = false;\n          var user = JSON.parse(window.localStorage.user);\n\n          if (user && user.uID > 0) {\n            para.CreateId = user.uID;\n            para.CreateBy = user.uRealName;\n          } else {\n            _this6.$message({\n              message: '用户信息为空，先登录',\n              type: 'error'\n            });\n\n            _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n          }\n\n          addModule(para).then(function (res) {\n            if (util.isEmt.format(res)) {\n              _this6.addLoading = false;\n              return;\n            }\n\n            if (res.data.success) {\n              _this6.addLoading = false; //NProgress.done();\n\n              _this6.$message({\n                message: res.data.msg,\n                type: 'success'\n              });\n\n              _this6.$refs['addForm'].resetFields();\n\n              _this6.addFormVisible = false;\n\n              _this6.getModules();\n            } else {\n              _this6.$message({\n                message: res.data.msg,\n                type: 'error'\n              });\n            }\n          });\n        });\n      }\n    });\n  }), _defineProperty(_methods, \"selsChange\", function selsChange(sels) {\n    this.sels = sels;\n  }), _methods),\n  mounted: function mounted() {\n    this.getModules();\n    var routers = window.localStorage.router ? JSON.parse(window.localStorage.router) : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n};",{"version":3,"sources":["Module.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section>\n    <!--工具条-->\n    <el-col :span=\"24\"\n            class=\"toolbar\"\n            style=\"padding-bottom: 0px;\">\n      <el-form :inline=\"true\"\n               @submit.native.prevent>\n        <toolbar :buttonList=\"buttonList\"\n                 @callFunction=\"callFunction\">\n        </toolbar>\n        <!-- 搜索 -->\n        <SearchForm :formOptions=\"formOptions\"\n                    :commonSearchOptionSet=\"commonSearchOptionSet\"\n                    :drawerSize=\"drawerSize\"\n                    :labelWidth=\"labelWidth\"\n                    :controlStyle=\"controlStyle\"\n                    :searchFormInputPlaceholder=\"searchFormInputPlaceholder\"\n                    :searchFormInputAttrs=\"searchFormInputAttrs\"\n                    ref=\"ChildSearchForm\"\n                    @onSearch=\"getModules\" />\n      </el-form>\n    </el-col>\n\n    <!--列表-->\n    <el-table :data=\"users\"\n              size=\"small\"\n              :height=\"tableHeight\"\n              highlight-current-row\n              @current-change=\"selectCurrentRow\"\n              v-loading=\"listLoading\"\n              @selection-change=\"selsChange\"\n              style=\"width: 100%;\">\n      <el-table-column type=\"index\"\n                       :index=\"indexMethod\"\n                       label=\"#\"\n                       align=\"center\"\n                       width=\"50\">\n      </el-table-column>\n      <el-table-column prop=\"LinkUrl\"\n                       label=\"接口地址\"\n                       width=\"\"\n                       sortable>\n      </el-table-column>\n      <el-table-column prop=\"Name\"\n                       label=\"描述\"\n                       width=\"300\"\n                       sortable>\n      </el-table-column>\n      <el-table-column prop=\"CreateTime\"\n                       label=\"创建时间\"\n                       :formatter=\"formatCreateTime\"\n                       width=\"\"\n                       sortable>\n      </el-table-column>\n      <el-table-column prop=\"CreateBy\"\n                       label=\"创建者\"\n                       width=\"\"\n                       sortable>\n      </el-table-column>\n      <el-table-column prop=\"Enabled\"\n                       label=\"状态\"\n                       width=\"\"\n                       sortable>\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.Enabled  ? 'success' : 'danger'\"\n                  disable-transitions>{{scope.row.Enabled ? \"正常\":\"禁用\"}}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <!-- <el-table-column label=\"操作\" width=\"150\">\n                <template scope=\"scope\">\n                    <el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n                </template>\n            </el-table-column> -->\n    </el-table>\n\n    <!--工具条-->\n    <el-col :span=\"24\"\n            style=\"margin:10px 10px 10px 0px;\"\n            class=\"toolbar\">\n      <el-pagination @size-change=\"handleSizeChange\"\n                     @current-change=\"handleCurrentChange\"\n                     :current-page=\"page\"\n                     background\n                     :page-sizes=\"[5,10,50,100, 200, 300, 400]\"\n                     :page-size=\"pageSize\"\n                     layout=\"total, sizes, prev, pager, next, jumper\"\n                     :total=\"total\">\n      </el-pagination>\n    </el-col>\n\n    <!--编辑界面-->\n    <el-dialog title=\"编辑\"\n               size=\"small\"\n               :visible.sync=\"editFormVisible\"\n               v-model=\"editFormVisible\"\n               :close-on-click-modal=\"false\">\n      <el-form :model=\"editForm\"\n               label-width=\"80px\"\n               :rules=\"editFormRules\"\n               ref=\"editForm\">\n        <el-form-item label=\"接口地址\"\n                      prop=\"LinkUrl\">\n          <el-input v-model=\"editForm.LinkUrl\"\n                    auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"接口描述\"\n                      prop=\"Name\">\n          <el-input v-model=\"editForm.Name\"\n                    auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\"\n                      prop=\"Enabled\">\n          <el-select v-model=\"editForm.Enabled\"\n                     placeholder=\"请选择状态\">\n            <el-option v-for=\"item in statusList\"\n                       :key=\"item.value\"\n                       :label=\"item.LinkUrl\"\n                       :value=\"item.value\"></el-option>\n\n          </el-select>\n        </el-form-item>\n\n      </el-form>\n      <div slot=\"footer\"\n           class=\"dialog-footer\">\n        <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\"\n                   @click.native=\"editSubmit\"\n                   :loading=\"editLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!--新增界面-->\n    <el-dialog title=\"新增\"\n               size=\"small\"\n               :visible.sync=\"addFormVisible\"\n               v-model=\"addFormVisible\"\n               :close-on-click-modal=\"false\">\n      <el-form :model=\"addForm\"\n               label-width=\"80px\"\n               :rules=\"addFormRules\"\n               ref=\"addForm\">\n        <el-form-item label=\"接口地址\"\n                      prop=\"LinkUrl\">\n          <el-input v-model=\"addForm.LinkUrl\"\n                    auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"接口描述\"\n                      prop=\"Name\">\n          <el-input v-model=\"addForm.Name\"\n                    auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\"\n                      prop=\"Enabled\">\n          <el-select v-model=\"addForm.Enabled\"\n                     placeholder=\"请选择状态\">\n            <el-option label=\"激活\"\n                       value=\"true\"></el-option>\n            <el-option label=\"禁用\"\n                       value=\"false\"></el-option>\n          </el-select>\n        </el-form-item>\n\n      </el-form>\n      <div slot=\"footer\"\n           class=\"dialog-footer\">\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\"\n                   @click.native=\"addSubmit\"\n                   :loading=\"addLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n  </section>\n</template>\n\n<script>\nimport util from '../../../util/date'\nimport { getModuleListPage, removeModule, editModule, addModule } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/ToolbarButton\";\nimport SearchForm from \"../../components/SearchForm\";\nimport ToolbarExport from \"../../components/ToolbarExport\";\nimport { formatDate } from '../../../util/tools'\n\nexport default {\n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件 \n  data () {\n    return {\n\n      //导出组件相关 \n      exportFileName: '角色管理信息',//要导出的文件名 \n      currentPageData: [],//当前页面的列表数据 \n      tHeader: ['接口地址', '描述'],//当前页面列表的表头汉字数组，导出用 \n      filterVal: ['LinkUrl', 'Name'],//当前页面列表的表头属性数组，导出用 \n\n      //搜索框相关 \n      ChildSearchForm: {},\n      commonSearchOptionSet: \"模糊\",//通用查询的默认配置,\"模糊\"或\"精准\"\n      controlStyle: {//设置搜索控件的长度等样式 \n        width: '200px',\n      },\n      labelWidth: \"90px\",//显示Label的宽度 \n      drawerSize: \"450px\",//drawner宽度设置 \n      searchFormInputPlaceholder: '请输入接口地址/描述',//要给子搜索组件传递的值\n      searchFormInputAttrs: ['LinkUrl', 'Name'],//要给子搜索组件传递的属性名\n      formOptions: [\n        {\n          label: '接口地址',\n          prop: 'LinkUrl',\n          element: 'el-input',\n        },\n        {\n          label: '描述',\n          prop: 'Name',\n          element: 'el-input',\n        },\n        {\n          label: '创建时间',\n          prop: 'CreateTime',\n          type: 'datetimerange',\n          element: 'el-date-picker',\n        }\n      ],\n\n\n      tableHeight: window.innerHeight - 180, // 控制表格的高度\n\n      buttonList: [],\n      currentRow: null,\n      filters: {\n        LinkUrl: ''\n      },\n      users: [],\n      statusList: [{ LinkUrl: '激活', value: true }, { LinkUrl: '禁用', value: false }],\n      total: 0,\n      page: 1,\n      pageSize: 10,\n      listLoading: false,\n      sels: [],//列表选中列\n\n      addDialogFormVisible: false,\n      editFormVisible: false,//编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n\n        LinkUrl: [\n          { required: true, message: '请输入接口地址', trigger: 'blur' }\n        ],\n\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: false,\n      },\n\n      addFormVisible: false,//新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n\n        LinkUrl: [\n          { required: true, message: '请输入接口地址', trigger: 'blur' }\n        ],\n\n      },\n      //新增界面数据\n      addForm: {\n        CreateBy: '',\n        CreateId: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: '',\n      }\n\n    }\n  },\n  methods: {\n    // 设置索引 \n    indexMethod (index) {\n      return (this.page - 1) * this.pageSize + 1 + index\n    },\n    selectCurrentRow (val) {\n      this.currentRow = val;\n    },\n    callFunction (item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    handleCurrentChange (val) {\n      this.page = val;\n      this.getModules();\n    },\n    handleSizeChange (val) {\n      this.pageSize = val;\n      this.getModules();\n    },\n    /** \n     * 获取请求参数 \n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据 \n     */\n    getPostParam (flag) {\n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData());\n      para.page = this.page\n      para.pageSize = this.pageSize\n      if (flag === '2') { // 全部导出 \n        para.page = 1\n        para.pageSize = 10000\n      }\n      return para\n    },\n    //性别显示转换\n    formatEnabled: function (row, column) {\n      return row.Enabled ? '正常' : '未知';\n    },\n    formatCreateTime: function (row, column) {\n      return (!row.CreateTime || row.CreateTime == '') ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\n    },\n    handleCurrentChange (val) {\n      this.page = val;\n      this.getModules();\n    },\n    //获取用户列表\n    getModules () {\n      let para = this.getPostParam('1');\n      this.listLoading = true;\n\n      //NProgress.start();\n      getModuleListPage(para).then((res) => {\n        this.total = res.data.response.dataCount;\n        this.users = res.data.response.data;\n        this.listLoading = false;\n        //NProgress.done();\n      });\n    },\n    //获取全部列表 \n    exportAllData () {\n      let para = this.getPostParam('2');\n      this.listLoading = true;\n      getModuleListPage(para).then((res) => {\n        var allData = res.data.response.data;\n        this.$refs.cmToolbarExport.export2Excel(allData);\n        this.listLoading = false;\n      });\n    },\n    //删除\n    handleDel () {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true;\n        //NProgress.start();\n        let para = { id: row.Id };\n        removeModule(para).then((res) => {\n\n          if (util.isEmt.format(res)) {\n            this.listLoading = false;\n            return;\n          }\n          this.listLoading = false;\n          //NProgress.done();\n          if (res.data.success) {\n            this.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n\n          } else {\n            this.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          this.getModules();\n        });\n      }).catch(() => {\n\n      });\n    },\n    //显示编辑界面\n    handleEdit () {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.editFormVisible = true;\n      this.editForm = Object.assign({}, row);\n    },\n    //显示新增界面\n    handleAdd () {\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: 'true',\n      };\n    },\n    //编辑\n    editSubmit: function () {\n      this.$refs.editForm.validate((valid) => {\n        if (valid) {\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\n            this.editLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.editForm);\n\n            para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n\n            editModule(para).then((res) => {\n\n              if (util.isEmt.format(res)) {\n                this.editLoading = false;\n                return;\n              }\n              if (res.data.success) {\n                this.editLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n                this.$refs['editForm'].resetFields();\n                this.editFormVisible = false;\n                this.getModules();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function () {\n      let _this = this;\n      this.$refs.addForm.validate((valid) => {\n        if (valid) {\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\n            this.addLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.addForm);\n\n            para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n            para.ModifyTime = para.CreateTime;\n            para.IsDeleted = false;\n\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              this.$message({\n                message: '用户信息为空，先登录',\n                type: 'error'\n              });\n              _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n            }\n\n\n            addModule(para).then((res) => {\n\n              if (util.isEmt.format(res)) {\n                this.addLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                this.addLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n                this.$refs['addForm'].resetFields();\n                this.addFormVisible = false;\n                this.getModules();\n              }\n              else {\n                this.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n\n              }\n\n            });\n\n          });\n        }\n      });\n    },\n    selsChange: function (sels) {\n      this.sels = sels;\n    }\n  },\n  mounted () {\n    this.getModules();\n\n    let routers = window.localStorage.router\n      ? JSON.parse(window.localStorage.router)\n      : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n}\n\n</script>\n\n<style scoped>\n</style>\n"],"sourceRoot":"src\\views\\Permission"}]}