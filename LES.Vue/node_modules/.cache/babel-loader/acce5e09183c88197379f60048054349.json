{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\CodeItems.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\CodeItems.vue","mtime":1612254918062},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"D:\\\\\\u6570\\u701B\\u4FE1\\u606F\\u79D1\\u6280\\\\\\u516C\\u53F8\\u9879\\u76EE\\\\\\u5E7F\\u5DDE\\u897F\\u95E8\\u5B50\\u539F\\u6750\\u6599\\u7ACB\\u4F53\\u5E93\\\\\\u4F4E\\u538B\\u7EBF\\u5708\\\\src\\\\LES.Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from '../../../util/date';\nimport { getCodeItemListPage, removeCodeItem, editCodeItem, addCodeItem, getAllCodeSets } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/ToolbarButton\";\nimport SearchForm from \"../../components/SearchForm\";\nimport ToolbarExport from \"../../components/ToolbarExport\";\nimport { formatDate, setformOptionsNewValue } from '../../../util/tools';\nimport { isShowOperatorButtonCommon, isNeedShowOperatorColumn } from '../../../util/common';\nexport default {\n  components: {\n    Toolbar: Toolbar,\n    SearchForm: SearchForm,\n    ToolbarExport: ToolbarExport\n  },\n  //注册子组件\n  data: function data() {\n    return {\n      allCodeSets: [],\n      //导出组件相关\n      exportFileName: '码表集信息',\n      //要导出的文件名\n      currentPageData: [],\n      //当前页面的列表数据\n      tHeader: ['代码编码', '代码名称', '说明'],\n      //当前页面列表的表头汉字数组，导出用\n      filterVal: ['code', 'name', 'note'],\n      //当前页面列表的表头属性数组，导出用\n      //搜索框相关\n      commonSearchOptionSet: \"精准\",\n      //通用查询的默认配置,\"模糊\"或\"精准\"\n      controlStyle: {\n        //设置搜索控件的长度等样式\n        width: '300px'\n      },\n      labelWidth: \"90px\",\n      //显示Label的宽度\n      drawerSize: \"550px\",\n      //drawner宽度设置\n      searchFormInputPlaceholder: '请输入代码编码/名称',\n      //要给子搜索组件传递的值\n      searchFormInputAttrs: ['code', 'name'],\n      //要给子搜索组件传递的属性名\n      formOptions: [{\n        label: '代码集编码',\n        prop: 'setCode',\n        element: 'el-select',\n        options: [] //先默认为空，再通过请求获取数据\n\n      }, {\n        label: '代码编码',\n        prop: 'code',\n        element: 'el-input'\n      }, {\n        label: '代码名称',\n        prop: 'name',\n        element: 'el-input'\n      }, {\n        label: '说明',\n        prop: 'note',\n        element: 'el-input'\n      }],\n      isShowOperatorColumn: true,\n      // 是否显示【操作】列,true显示 false不显示\n      tableHeight: window.innerHeight - 180,\n      // 控制表格的高度\n      isAdd: false,\n      // 是否是新增\n      dialogTitle: '',\n      filters: {\n        name: ''\n      },\n      CodeItems: [],\n      roles: [],\n      total: 0,\n      buttonList: [],\n      currentRow: null,\n      page: 1,\n      pageSize: 10,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      addFormVisible: false,\n      //新增界面是否显示\n      addLoading: false,\n      //新增界面数据\n      addForm: {\n        id: 0,\n        name: '',\n        code: '',\n        note: '',\n        delFlag: false\n      }\n    };\n  },\n  methods: {\n    //是否显示某个操作按钮\n    isShowOperatorButton: function isShowOperatorButton(flag) {\n      return isShowOperatorButtonCommon(this.isShowOperatorColumn, flag, this.buttonList);\n    },\n    // 获取所有代码集\n    getAllCodeSet: function getAllCodeSet() {\n      var _this = this;\n\n      getAllCodeSets().then(function (res) {\n        if (res.data.success) {\n          _this.allCodeSets = res.data.response; //给搜索框中的select控件赋值\n\n          var propValue = \"setCode\";\n          _this.formOptions = setformOptionsNewValue(_this.formOptions, propValue, _this.allCodeSets);\n\n          _this.$refs.ChildSearchForm.setNewFormOptions(_this.formOptions);\n        } else {\n          _this.$notify.error({\n            title: '错误',\n            message: res.msg\n          });\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    // 设置索引\n    indexMethod: function indexMethod(index) {\n      return (this.page - 1) * this.pageSize + 1 + index;\n    },\n    // 时间格式化\n    formatterDateTime: function formatterDateTime(row, column, cellValue, index) {\n      if (cellValue === null || cellValue === '') {\n        return '';\n      }\n\n      var NewDtime = new Date(Date.parse(cellValue));\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss');\n    },\n    selectCurrentRow: function selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    callFunction: function callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getCodeItems();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.getCodeItems();\n    },\n\n    /**\r\n     * 获取请求参数\r\n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据\r\n     */\n    getPostParam: function getPostParam(flag) {\n      var para = _Object$assign({}, this.$refs.ChildSearchForm.getFormData());\n\n      para.page = this.page;\n      para.pageSize = this.pageSize;\n\n      if (flag === '2') {\n        // 全部导出\n        para.page = 1;\n        para.pageSize = 10000;\n      }\n\n      return para;\n    },\n    //获取列表\n    getCodeItems: function getCodeItems(formValue) {\n      var _this2 = this;\n\n      //this.total = 0\n      //this.CodeItems = null\n      var para = this.getPostParam('1');\n      this.listLoading = true;\n      getCodeItemListPage(para).then(function (res) {\n        if (res.data.success) {\n          _this2.total = res.data.response.dataCount;\n          _this2.CodeItems = res.data.response.data;\n        } else {\n          _this2.$message({\n            message: res.data.msg,\n            type: 'error'\n          });\n        }\n\n        _this2.listLoading = false;\n      });\n    },\n    //获取全部列表\n    exportAllData: function exportAllData() {\n      var _this3 = this;\n\n      var para = this.getPostParam('2');\n      this.listLoading = true;\n      getCodeItemListPage(para).then(function (res) {\n        var allData = res.data.response.data;\n\n        _this3.$refs.cmToolbarExport.export2Excel(allData);\n\n        _this3.listLoading = false;\n      });\n    },\n    //删除 \n    handleDel: function handleDel(selRow) {\n      var _this4 = this;\n\n      var row = {};\n\n      if (selRow && selRow != undefined) {\n        this.currentRow = selRow;\n      }\n\n      row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this4.listLoading = true; //NProgress.start();\n\n        var para = {\n          id: row.Id\n        };\n        debugger;\n        removeCodeItem(para).then(function (res) {\n          if (util.isEmt.format(res)) {\n            _this4.listLoading = false;\n            return;\n          }\n\n          _this4.listLoading = false; //NProgress.done();\n\n          if (res.data.success) {\n            _this4.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n          } else {\n            _this4.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          _this4.getCodeItems();\n        });\n      }).catch(function () {});\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit(selRow) {\n      var row = {};\n\n      if (selRow && selRow != undefined) {\n        this.currentRow = selRow;\n      }\n\n      row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.isAdd = false;\n      this.dialogTitle = '编辑';\n      this.addFormVisible = true;\n      this.addForm = {};\n      debugger;\n      this.addForm = _Object$assign({}, row);\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.isAdd = true;\n      this.dialogTitle = '新增';\n      this.addFormVisible = true;\n      this.addForm = {};\n    },\n    // 更新数据\n    SaveData: function SaveData(formName) {\n      var _this5 = this;\n\n      this.submitDisabled = true;\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this5.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this5.addLoading = true;\n\n            var para = _Object$assign({}, _this5.addForm);\n\n            if (_this5.isAdd) {\n              //新增\n              addCodeItem(para).then(function (res) {\n                if (util.isEmt.format(res)) {\n                  _this5.addLoading = false;\n                  return;\n                }\n\n                if (res.data.success) {\n                  _this5.addLoading = false; //NProgress.done();\n\n                  _this5.$message({\n                    message: res.data.msg,\n                    type: 'success'\n                  });\n\n                  _this5.$refs['addForm'].resetFields();\n\n                  _this5.addFormVisible = false;\n\n                  _this5.getCodeItems();\n                } else {\n                  _this5.addLoading = false;\n\n                  _this5.$message({\n                    message: res.data.msg,\n                    type: 'error'\n                  });\n                }\n              });\n            } else {\n              //编辑\n              editCodeItem(para).then(function (res) {\n                if (util.isEmt.format(res)) {\n                  _this5.addLoading = false;\n                  return;\n                }\n\n                if (res.data.success) {\n                  _this5.addLoading = false; //NProgress.done();\n\n                  _this5.$message({\n                    message: res.data.msg,\n                    type: 'success'\n                  });\n\n                  _this5.$refs['addForm'].resetFields();\n\n                  _this5.addFormVisible = false;\n\n                  _this5.getCodeItems();\n                } else {\n                  _this5.addLoading = false;\n\n                  _this5.$message({\n                    message: res.data.msg,\n                    type: 'error'\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //导出\n    handleExport: function handleExport() {\n      this.currentPageData = this.CodeItems;\n      this.$refs.cmToolbarExport.showPrintPage();\n    }\n  },\n  mounted: function mounted() {\n    this.getAllCodeSet();\n    this.getCodeItems();\n    var routers = window.localStorage.router ? JSON.parse(window.localStorage.router) : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n    var isShow = isNeedShowOperatorColumn(this.buttonList); //控制是否要显示【操作】列\n\n    this.isShowOperatorColumn = isShow;\n  }\n};",{"version":3,"sources":["CodeItems.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <section>\r\n    <!--工具条-->\r\n    <el-col :span=\"24\"\r\n            class=\"toolbar\"\r\n            style=\"padding-bottom: 0px;\">\r\n      <el-form :inline=\"true\"\r\n               @submit.native.prevent>\r\n        <toolbar :buttonList=\"buttonList\"\r\n                 @callFunction=\"callFunction\">\r\n        </toolbar>\r\n        <!-- 搜索 -->\r\n        <SearchForm :formOptions=\"formOptions\"\r\n                    :commonSearchOptionSet=\"commonSearchOptionSet\"\r\n                    :drawerSize=\"drawerSize\"\r\n                    :labelWidth=\"labelWidth\"\r\n                    :controlStyle=\"controlStyle\"\r\n                    :searchFormInputPlaceholder=\"searchFormInputPlaceholder\"\r\n                    :searchFormInputAttrs=\"searchFormInputAttrs\"\r\n                    ref=\"ChildSearchForm\"\r\n                    @onSearch=\"getCodeItems\" />\r\n      </el-form>\r\n    </el-col>\r\n\r\n    <!--列表-->\r\n    <el-table :data=\"CodeItems\"\r\n              highlight-current-row\r\n              size=\"small\"\r\n              :height=\"tableHeight\"\r\n              @current-change=\"selectCurrentRow\"\r\n              v-loading=\"listLoading\"\r\n              @selection-change=\"selsChange\">\r\n      <el-table-column type=\"index\"\r\n                       :index=\"indexMethod\"\r\n                       label=\"#\"\r\n                       align=\"center\"\r\n                       width=\"50\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"setCode\"\r\n                       label=\"代码集编码\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"setCodeName\"\r\n                       label=\"代码集名称\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"code\"\r\n                       label=\"代码编码\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"name\"\r\n                       label=\"代码名称\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"note\"\r\n                       label=\"说明\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"delFlag\"\r\n                       label=\"状态\"\r\n                       align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag :type=\"scope.row.delFlag  ? 'danger' : 'success'\"\r\n                  disable-transitions>{{scope.row.delFlag ? \"禁用\":\"启用\"}}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"creator\"\r\n                       label=\"创建人\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"createTime\"\r\n                       label=\"创建时间\"\r\n                       width=\"160\"\r\n                       align=\"center\"\r\n                       :formatter=\"formatterDateTime\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"lastModifier\"\r\n                       label=\"修改人\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"lastModifyTime\"\r\n                       label=\"修改时间\"\r\n                       width=\"160\"\r\n                       align=\"center\"\r\n                       :formatter=\"formatterDateTime\">\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\"\r\n                       width=\"180\"\r\n                       v-if=\"isShowOperatorColumn\">\r\n        <template scope=\"scope\">\r\n          <el-button size=\"small\"\r\n                     icon=\"el-icon-edit\"\r\n                     type=\"primary\"\r\n                     v-if=\"isShowOperatorButton('edit')\"\r\n                     @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n          <el-button type=\"danger\"\r\n                     size=\"small\"\r\n                     icon=\"el-icon-delete\"\r\n                     v-if=\"isShowOperatorButton('del')\"\r\n                     @click=\"handleDel(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!--工具条-->\r\n    <el-col :span=\"24\"\r\n            style=\"margin:10px 10px 10px 0px;\"\r\n            class=\"toolbar\">\r\n      <el-pagination @size-change=\"handleSizeChange\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     :current-page=\"page\"\r\n                     background\r\n                     :page-sizes=\"[5,10,50,100, 200, 300, 400]\"\r\n                     :page-size=\"pageSize\"\r\n                     layout=\"total, sizes, prev, pager, next, jumper\"\r\n                     :total=\"total\">\r\n      </el-pagination>\r\n    </el-col>\r\n    <!--新增/编辑界面-->\r\n    <el-dialog :title=\"dialogTitle\"\r\n               :visible.sync=\"addFormVisible\"\r\n               v-model=\"addFormVisible\"\r\n               :close-on-click-modal=\"false\">\r\n      <el-form :model=\"addForm\"\r\n               size=\"small\"\r\n               label-width=\"100px\"\r\n               ref=\"addForm\">\r\n        <el-form-item label=\"代码集编码\"\r\n                      prop=\"setCode\"\r\n                      :rules=\"[{ required: true, message: '代码集编码不能为空'}]\">\r\n          <el-select v-model=\"addForm.setCode\"\r\n                     placeholder=\"请选择代码编码\">\r\n            <el-option v-for=\"item in allCodeSets\"\r\n                       :key=\"item.value\"\r\n                       :label=\"item.label\"\r\n                       :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"代码项编码\"\r\n                      :rules=\"[{ required: true, message: '代码项编码不能为空'}]\"\r\n                      prop=\"code\">\r\n          <el-input v-model=\"addForm.code\"\r\n                    auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"代码项名称\"\r\n                      :rules=\"[{ required: true, message: '代码项名称不能为空'}]\"\r\n                      prop=\"name\">\r\n          <el-input v-model=\"addForm.name\"\r\n                    auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"是否禁用\"\r\n                      prop=\"delFlag\">\r\n          <el-switch v-model=\"addForm.delFlag\"></el-switch>\r\n        </el-form-item>\r\n        <el-form-item label=\"说明\"\r\n                      :rules=\"[{ required: true, message: '说明不能为空'}]\"\r\n                      prop=\"note\">\r\n          <el-input v-model=\"addForm.note\"\r\n                    auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\"\r\n           class=\"dialog-footer\">\r\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\"\r\n                   @click.native=\"SaveData\"\r\n                   :loading=\"addLoading\">提交</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!-- 导出组件 -->\r\n    <ToolbarExport ref=\"cmToolbarExport\"\r\n                   :exportFileName=\"exportFileName\"\r\n                   :filterVal=\"filterVal\"\r\n                   :currentPageData=\"currentPageData\"\r\n                   :tHeader=\"tHeader\" />\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport util from '../../../util/date'\r\nimport { getCodeItemListPage, removeCodeItem, editCodeItem, addCodeItem, getAllCodeSets } from '../../api/api';\r\nimport { getButtonList } from \"../../promissionRouter\";\r\nimport Toolbar from \"../../components/ToolbarButton\";\r\nimport SearchForm from \"../../components/SearchForm\";\r\nimport ToolbarExport from \"../../components/ToolbarExport\";\r\nimport { formatDate, setformOptionsNewValue } from '../../../util/tools'\r\nimport { isShowOperatorButtonCommon, isNeedShowOperatorColumn } from '../../../util/common'\r\n\r\nexport default {\r\n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件\r\n  data () {\r\n    return {\r\n      allCodeSets: [],\r\n\r\n      //导出组件相关\r\n      exportFileName: '码表集信息',//要导出的文件名\r\n      currentPageData: [],//当前页面的列表数据\r\n      tHeader: ['代码编码', '代码名称', '说明'],//当前页面列表的表头汉字数组，导出用\r\n      filterVal: ['code', 'name', 'note'],//当前页面列表的表头属性数组，导出用\r\n\r\n      //搜索框相关\r\n      commonSearchOptionSet: \"精准\",//通用查询的默认配置,\"模糊\"或\"精准\"\r\n      controlStyle: {//设置搜索控件的长度等样式\r\n        width: '300px',\r\n      },\r\n      labelWidth: \"90px\",//显示Label的宽度\r\n      drawerSize: \"550px\",//drawner宽度设置\r\n      searchFormInputPlaceholder: '请输入代码编码/名称',//要给子搜索组件传递的值\r\n      searchFormInputAttrs: ['code', 'name'],//要给子搜索组件传递的属性名\r\n      formOptions: [\r\n        {\r\n          label: '代码集编码',\r\n          prop: 'setCode',\r\n          element: 'el-select',\r\n          options: [] //先默认为空，再通过请求获取数据\r\n        },\r\n        {\r\n          label: '代码编码',\r\n          prop: 'code',\r\n          element: 'el-input'\r\n        },\r\n        {\r\n          label: '代码名称',\r\n          prop: 'name',\r\n          element: 'el-input'\r\n        },\r\n        {\r\n          label: '说明',\r\n          prop: 'note',\r\n          element: 'el-input'\r\n        }\r\n      ],\r\n\r\n      isShowOperatorColumn: true,// 是否显示【操作】列,true显示 false不显示\r\n      tableHeight: window.innerHeight - 180, // 控制表格的高度\r\n\r\n      isAdd: false, // 是否是新增\r\n      dialogTitle: '',\r\n\r\n      filters: {\r\n        name: ''\r\n      },\r\n      CodeItems: [],\r\n      roles: [],\r\n      total: 0,\r\n      buttonList: [],\r\n      currentRow: null,\r\n      page: 1,\r\n      pageSize: 10,\r\n      listLoading: false,\r\n      sels: [],//列表选中列\r\n\r\n\r\n      addFormVisible: false,//新增界面是否显示\r\n      addLoading: false,\r\n      //新增界面数据\r\n      addForm: {\r\n        id: 0,\r\n        name: '',\r\n        code: '',\r\n        note: '',\r\n        delFlag: false\r\n      }\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    //是否显示某个操作按钮\r\n    isShowOperatorButton (flag) {\r\n      return isShowOperatorButtonCommon(this.isShowOperatorColumn, flag, this.buttonList)\r\n    },\r\n    // 获取所有代码集\r\n    getAllCodeSet: function () {\r\n      getAllCodeSets().then(res => {\r\n        if (res.data.success) {\r\n          this.allCodeSets = res.data.response\r\n\r\n          //给搜索框中的select控件赋值\r\n          let propValue = \"setCode\";\r\n          this.formOptions = setformOptionsNewValue(this.formOptions, propValue, this.allCodeSets);\r\n          this.$refs.ChildSearchForm.setNewFormOptions(this.formOptions)\r\n        }\r\n        else {\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: res.msg\r\n          })\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n    // 设置索引\r\n    indexMethod (index) {\r\n      return (this.page - 1) * this.pageSize + 1 + index\r\n    },\r\n    // 时间格式化\r\n    formatterDateTime (row, column, cellValue, index) {\r\n      if (cellValue === null || cellValue === '') {\r\n        return ''\r\n      }\r\n      var NewDtime = new Date(Date.parse(cellValue))\r\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss')\r\n    },\r\n    selectCurrentRow (val) {\r\n      this.currentRow = val;\r\n    },\r\n    callFunction (item) {\r\n      this.filters = {\r\n        name: item.search\r\n      };\r\n      this[item.Func].apply(this, item);\r\n    },\r\n    handleCurrentChange (val) {\r\n      this.page = val;\r\n      this.getCodeItems();\r\n    },\r\n    handleSizeChange (val) {\r\n      this.pageSize = val;\r\n      this.getCodeItems();\r\n    },\r\n    /**\r\n     * 获取请求参数\r\n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据\r\n     */\r\n    getPostParam (flag) {\r\n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData());\r\n      para.page = this.page\r\n      para.pageSize = this.pageSize\r\n      if (flag === '2') { // 全部导出\r\n        para.page = 1\r\n        para.pageSize = 10000\r\n      }\r\n      return para\r\n    },\r\n    //获取列表\r\n    getCodeItems (formValue) {\r\n      //this.total = 0\r\n      //this.CodeItems = null\r\n      let para = this.getPostParam('1');\r\n      this.listLoading = true;\r\n      getCodeItemListPage(para).then((res) => {\r\n        if (res.data.success) {\r\n          this.total = res.data.response.dataCount;\r\n          this.CodeItems = res.data.response.data;\r\n        } else {\r\n          this.$message({\r\n            message: res.data.msg,\r\n            type: 'error'\r\n          });\r\n        }\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //获取全部列表\r\n    exportAllData () {\r\n      let para = this.getPostParam('2');\r\n      this.listLoading = true;\r\n      getCodeItemListPage(para).then((res) => {\r\n        var allData = res.data.response.data;\r\n        this.$refs.cmToolbarExport.export2Excel(allData);\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //删除 \r\n    handleDel (selRow) {\r\n      let row = {};\r\n      if (selRow && selRow != undefined) {\r\n        this.currentRow = selRow;\r\n      }\r\n      row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要删除的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.$confirm('确认删除该记录吗?', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.listLoading = true;\r\n        //NProgress.start();\r\n        let para = { id: row.Id };\r\n        debugger\r\n        removeCodeItem(para).then((res) => {\r\n\r\n          if (util.isEmt.format(res)) {\r\n            this.listLoading = false;\r\n            return;\r\n          }\r\n          this.listLoading = false;\r\n          //NProgress.done();\r\n          if (res.data.success) {\r\n            this.$message({\r\n              message: '删除成功',\r\n              type: 'success'\r\n            });\r\n\r\n          } else {\r\n            this.$message({\r\n              message: res.data.msg,\r\n              type: 'error'\r\n            });\r\n          }\r\n\r\n          this.getCodeItems();\r\n        });\r\n      }).catch(() => {\r\n\r\n      });\r\n    },\r\n    //显示编辑界面\r\n    handleEdit (selRow) {\r\n      let row = {};\r\n      if (selRow && selRow != undefined) {\r\n        this.currentRow = selRow;\r\n      }\r\n      row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要编辑的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.isAdd = false\r\n      this.dialogTitle = '编辑'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n      debugger\r\n      this.addForm = Object.assign({}, row);\r\n    },\r\n    //显示新增界面\r\n    handleAdd () {\r\n      this.isAdd = true\r\n      this.dialogTitle = '新增'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n    },\r\n    // 更新数据\r\n    SaveData (formName) {\r\n      this.submitDisabled = true\r\n\r\n      this.$refs.addForm.validate((valid) => {\r\n        if (valid) {\r\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n            this.addLoading = true;\r\n            let para = Object.assign({}, this.addForm);\r\n            if (this.isAdd) {//新增\r\n              addCodeItem(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done();\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getCodeItems();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n\r\n              });\r\n            } else {//编辑\r\n              editCodeItem(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done();\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getCodeItems();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    selsChange: function (sels) {\r\n      this.sels = sels;\r\n    },\r\n    //导出\r\n    handleExport () {\r\n      this.currentPageData = this.CodeItems\r\n      this.$refs.cmToolbarExport.showPrintPage()\r\n    },\r\n  },\r\n  mounted () {\r\n    this.getAllCodeSet()\r\n    this.getCodeItems()\r\n\r\n    let routers = window.localStorage.router\r\n      ? JSON.parse(window.localStorage.router)\r\n      : [];\r\n    this.buttonList = getButtonList(this.$route.path, routers);\r\n    let isShow = isNeedShowOperatorColumn(this.buttonList);//控制是否要显示【操作】列\r\n    this.isShowOperatorColumn = isShow;\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"],"sourceRoot":"src\\views\\BasicData"}]}