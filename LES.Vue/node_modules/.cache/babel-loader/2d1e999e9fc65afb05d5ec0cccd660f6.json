{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\util\\tools.js","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\util\\tools.js","mtime":1611713264775},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _parseInt from \"D:\\\\\\u6570\\u701B\\u4FE1\\u606F\\u79D1\\u6280\\\\\\u516C\\u53F8\\u9879\\u76EE\\\\\\u5E7F\\u5DDE\\u897F\\u95E8\\u5B50\\u539F\\u6750\\u6599\\u7ACB\\u4F53\\u5E93\\\\\\u4F4E\\u538B\\u7EBF\\u5708\\\\src\\\\LES.Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\n\n/**\r\n * 创建唯一的字符串\r\n * @return {string} ojgdvbvaua40\r\n */\nexport function createUUID() {\n  var timestamp = +new Date() + '';\n  var randomNum = _parseInt((1 + Math.random()) * 65536) + '';\n  return (+(randomNum + timestamp)).toString(32);\n}\n/**\r\n * 格式化字符串\r\n * @param {*} date \r\n * @param {*} fmt \r\n */\n\nexport function formatDate(date, fmt) {\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n\n  var o = {\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'h+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds()\n  };\n\n  for (var k in o) {\n    if (new RegExp(\"(\".concat(k, \")\")).test(fmt)) {\n      var str = o[k] + '';\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\n    }\n  }\n\n  return fmt;\n}\n\nfunction padLeftZero(str) {\n  return ('00' + str).substr(str.length);\n} // elementui日期时间范围 快捷选项\n\n\nexport var pickerOptionsRange = {\n  shortcuts: [{\n    text: '今天',\n    onClick: function onClick(picker) {\n      var end = new Date();\n      var start = new Date(new Date().toDateString());\n      start.setTime(start.getTime());\n      picker.$emit('pick', [start, end]);\n    }\n  }, {\n    text: '最近一周',\n    onClick: function onClick(picker) {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(end.getTime() - 3600 * 1000 * 24 * 7);\n      picker.$emit('pick', [start, end]);\n    }\n  }, {\n    text: '最近一个月',\n    onClick: function onClick(picker) {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n      picker.$emit('pick', [start, end]);\n    }\n  }, {\n    text: '最近三个月',\n    onClick: function onClick(picker) {\n      var end = new Date();\n      var start = new Date();\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n      picker.$emit('pick', [start, end]);\n    }\n  }] // elementui月份范围 快捷选项\n\n};\nexport var pickerOptionsRangeMonth = {\n  shortcuts: [{\n    text: '今年至今',\n    onClick: function onClick(picker) {\n      var end = new Date();\n      var start = new Date(new Date().getFullYear(), 0);\n      picker.$emit('pick', [start, end]);\n    }\n  }, {\n    text: '最近半年',\n    onClick: function onClick(picker) {\n      var end = new Date();\n      var start = new Date();\n      start.setMonth(start.getMonth() - 6);\n      picker.$emit('pick', [start, end]);\n    }\n  }, {\n    text: '最近一年',\n    onClick: function onClick(picker) {\n      var end = new Date();\n      var start = new Date();\n      start.setMonth(start.getMonth() - 12);\n      picker.$emit('pick', [start, end]);\n    }\n  }] // 导出文件使用的日期格式\n\n};\nexport function getNowFormatDateForExport() {\n  var date = new Date();\n  var seperator1 = '-';\n  var seperator2 = ':';\n  var month = date.getMonth() + 1;\n  var strDate = date.getDate();\n\n  if (month >= 1 && month <= 9) {\n    month = '0' + month;\n  }\n\n  if (strDate >= 0 && strDate <= 9) {\n    strDate = '0' + strDate;\n  }\n\n  var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate + ' ' + date.getHours() + seperator2 + date.getMinutes() + seperator2 + date.getSeconds();\n  return currentdate;\n}\n/**\r\n * 给formOptions赋值新值，用于子组件的select框下拉绑定\r\n * @param {*} formOptions \r\n * @param {*} propValue \r\n * @param {*} newValue \r\n */\n\nexport function setformOptionsNewValue(formOptions, propValue, newValue) {\n  var target = formOptions.filter(function (item, index) {\n    return propValue === item.prop;\n  })[0];\n\n  if (target) {\n    target['options'] = newValue;\n  }\n\n  return formOptions;\n}",{"version":3,"sources":["D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\util\\tools.js"],"names":["createUUID","timestamp","Date","randomNum","Math","random","toString","formatDate","date","fmt","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","pickerOptionsRange","shortcuts","text","onClick","picker","end","start","toDateString","setTime","getTime","$emit","pickerOptionsRangeMonth","setMonth","getNowFormatDateForExport","seperator1","seperator2","month","strDate","currentdate","setformOptionsNewValue","formOptions","propValue","newValue","target","filter","item","index","prop"],"mappings":"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","sourcesContent":["/**\r\n * 创建唯一的字符串\r\n * @return {string} ojgdvbvaua40\r\n */\r\nexport function createUUID () {\r\n  const timestamp = +new Date() + ''\r\n  const randomNum = parseInt((1 + Math.random()) * 65536) + ''\r\n  return (+(randomNum + timestamp)).toString(32)\r\n}\r\n/**\r\n * 格式化字符串\r\n * @param {*} date \r\n * @param {*} fmt \r\n */\r\nexport function formatDate (date, fmt) {\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(\r\n      RegExp.$1,\r\n      (date.getFullYear() + '').substr(4 - RegExp.$1.length)\r\n    )\r\n  }\r\n  let o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds()\r\n  }\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      let str = o[k] + ''\r\n      fmt = fmt.replace(\r\n        RegExp.$1,\r\n        RegExp.$1.length === 1 ? str : padLeftZero(str)\r\n      )\r\n    }\r\n  }\r\n  return fmt\r\n}\r\nfunction padLeftZero (str) {\r\n  return ('00' + str).substr(str.length)\r\n}\r\n\r\n// elementui日期时间范围 快捷选项\r\nexport const pickerOptionsRange = {\r\n  shortcuts: [\r\n    {\r\n      text: '今天',\r\n      onClick (picker) {\r\n        const end = new Date()\r\n        const start = new Date(new Date().toDateString())\r\n        start.setTime(start.getTime())\r\n        picker.$emit('pick', [start, end])\r\n      }\r\n    }, {\r\n      text: '最近一周',\r\n      onClick (picker) {\r\n        const end = new Date()\r\n        const start = new Date()\r\n        start.setTime(end.getTime() - 3600 * 1000 * 24 * 7)\r\n        picker.$emit('pick', [start, end])\r\n      }\r\n    }, {\r\n      text: '最近一个月',\r\n      onClick (picker) {\r\n        const end = new Date()\r\n        const start = new Date()\r\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n        picker.$emit('pick', [start, end])\r\n      }\r\n    }, {\r\n      text: '最近三个月',\r\n      onClick (picker) {\r\n        const end = new Date()\r\n        const start = new Date()\r\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n        picker.$emit('pick', [start, end])\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\n// elementui月份范围 快捷选项\r\nexport const pickerOptionsRangeMonth = {\r\n  shortcuts: [\r\n    {\r\n      text: '今年至今',\r\n      onClick (picker) {\r\n        const end = new Date()\r\n        const start = new Date(new Date().getFullYear(), 0)\r\n        picker.$emit('pick', [start, end])\r\n      }\r\n    },\r\n    {\r\n      text: '最近半年',\r\n      onClick (picker) {\r\n        const end = new Date()\r\n        const start = new Date()\r\n        start.setMonth(start.getMonth() - 6)\r\n        picker.$emit('pick', [start, end])\r\n      }\r\n    },\r\n    {\r\n      text: '最近一年',\r\n      onClick (picker) {\r\n        const end = new Date()\r\n        const start = new Date()\r\n        start.setMonth(start.getMonth() - 12)\r\n        picker.$emit('pick', [start, end])\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\n// 导出文件使用的日期格式\r\nexport function getNowFormatDateForExport () {\r\n  var date = new Date()\r\n  var seperator1 = '-'\r\n  var seperator2 = ':'\r\n  var month = date.getMonth() + 1\r\n  var strDate = date.getDate()\r\n  if (month >= 1 && month <= 9) {\r\n    month = '0' + month\r\n  }\r\n  if (strDate >= 0 && strDate <= 9) {\r\n    strDate = '0' + strDate\r\n  }\r\n  var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate +\r\n    ' ' + date.getHours() + seperator2 + date.getMinutes() +\r\n    seperator2 + date.getSeconds()\r\n  return currentdate\r\n}\r\n\r\n/**\r\n * 给formOptions赋值新值，用于子组件的select框下拉绑定\r\n * @param {*} formOptions \r\n * @param {*} propValue \r\n * @param {*} newValue \r\n */\r\nexport function setformOptionsNewValue (formOptions, propValue, newValue) {\r\n  const target = formOptions.filter((item, index) => propValue === item.prop)[0];\r\n  if (target) {\r\n    target['options'] = newValue;\r\n  }\r\n  return formOptions\r\n}"]}]}