{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BufferMgr\\History.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BufferMgr\\History.vue","mtime":1610782832510},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _Object$assign from \"D:\\\\\\u6570\\u701B\\u4FE1\\u606F\\u79D1\\u6280\\\\\\u516C\\u53F8\\u9879\\u76EE\\\\\\u5E7F\\u5DDE\\u897F\\u95E8\\u5B50\\u539F\\u6750\\u6599\\u7ACB\\u4F53\\u5E93\\\\\\u4F4E\\u538B\\u7EBF\\u5708\\\\src\\\\LES.Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from '../../../util/date';\nimport { getWipHistoryPage } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\nexport default {\n  components: {\n    Toolbar: Toolbar\n  },\n  data: function data() {\n    return {\n      buttonList: [],\n      currentRow: null,\n      filters: {\n        name: ''\n      },\n      users: [],\n      statusList: [{\n        LinkUrl: '激活',\n        value: true\n      }, {\n        LinkUrl: '禁用',\n        value: false\n      }],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      addDialogFormVisible: false,\n      editFormVisible: false,\n      //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        LinkUrl: [{\n          required: true,\n          message: '请输入接口地址',\n          trigger: 'blur'\n        }]\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: false\n      },\n      addFormVisible: false,\n      //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        LinkUrl: [{\n          required: true,\n          message: '请输入接口地址',\n          trigger: 'blur'\n        }]\n      },\n      //新增界面数据\n      addForm: {\n        CreateBy: '',\n        CreateId: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: ''\n      }\n    };\n  },\n  methods: {\n    selectCurrentRow: function selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    callFunction: function callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    //性别显示转换\n    formatEnabled: function formatEnabled(row, column) {\n      return row.Enabled ? '正常' : '未知';\n    },\n    formatCreateTime: function formatCreateTime(row, column) {\n      return !row.CreateTime || row.CreateTime == '' ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getWipHistory();\n    },\n    //获取列表\n    getWipHistory: function getWipHistory() {\n      var _this2 = this;\n\n      debugger;\n      var para = {\n        page: this.page,\n        key: this.filters.name\n      };\n      this.listLoading = true; //NProgress.start();\n\n      getWipHistoryPage(para).then(function (res) {\n        _this2.total = res.data.response.dataCount;\n        _this2.users = res.data.response.data;\n        _this2.listLoading = false; //NProgress.done();\n      });\n    },\n    //删除\n    handleDel: function handleDel() {\n      var _this3 = this;\n\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this3.listLoading = true; //NProgress.start();\n\n        var para = {\n          id: row.Id\n        };\n        removeModule(para).then(function (res) {\n          if (util.isEmt.format(res)) {\n            _this3.listLoading = false;\n            return;\n          }\n\n          _this3.listLoading = false; //NProgress.done();\n\n          if (res.data.success) {\n            _this3.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n          } else {\n            _this3.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          _this3.getWipHistory();\n        });\n      }).catch(function () {});\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit() {\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.editFormVisible = true;\n      this.editForm = _Object$assign({}, row);\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: 'true'\n      };\n    },\n    //编辑\n    editSubmit: function editSubmit() {\n      var _this4 = this;\n\n      this.$refs.editForm.validate(function (valid) {\n        if (valid) {\n          _this4.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this4.editLoading = true; //NProgress.start();\n\n            var para = _Object$assign({}, _this4.editForm);\n\n            para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n            editModule(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this4.editLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                _this4.editLoading = false; //NProgress.done();\n\n                _this4.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n\n                _this4.$refs['editForm'].resetFields();\n\n                _this4.editFormVisible = false;\n\n                _this4.getWipHistory();\n              } else {\n                _this4.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function addSubmit() {\n      var _this5 = this;\n\n      var _this = this;\n\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this5.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this5.addLoading = true; //NProgress.start();\n\n            var para = _Object$assign({}, _this5.addForm);\n\n            para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n            para.ModifyTime = para.CreateTime;\n            para.IsDeleted = false;\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              _this5.$message({\n                message: '用户信息为空，先登录',\n                type: 'error'\n              });\n\n              _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n            }\n\n            addModule(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this5.addLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                _this5.addLoading = false; //NProgress.done();\n\n                _this5.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n\n                _this5.$refs['addForm'].resetFields();\n\n                _this5.addFormVisible = false;\n\n                _this5.getWipHistory();\n              } else {\n                _this5.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      this.$message({\n        message: '该功能未开放',\n        type: 'warning'\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getWipHistory();\n    var routers = window.localStorage.router ? JSON.parse(window.localStorage.router) : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n    debugger;\n  }\n};",{"version":3,"sources":["History.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <section>\r\n        <!--工具条-->\r\n        <toolbar :buttonList=\"buttonList\" @callFunction=\"callFunction\"></toolbar>\r\n\r\n        <!--列表-->\r\n        <el-table :data=\"users\" highlight-current-row \r\n        @current-change=\"selectCurrentRow\"\r\n        v-loading=\"listLoading\" @selection-change=\"selsChange\"\r\n                  style=\"width: 100%;\">\r\n            <el-table-column type=\"selection\" width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column type=\"index\" width=\"80\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"MaterialName\" label=\"物料名称\" width=\"\" sortable>\r\n            </el-table-column>\r\n            <el-table-column prop=\"InTime\" label=\"进炉时间\" :formatter=\"formatCreateTime\"  width=\"\" sortable>\r\n            </el-table-column>\r\n            <el-table-column prop=\"OutTime\" label=\"出炉时间\" :formatter=\"formatCreateTime\" width=\"\" sortable>\r\n            </el-table-column>\r\n            <el-table-column prop=\"Num\" label=\"数量\" width=\"\" sortable>\r\n            </el-table-column>\r\n            <el-table-column prop=\"Enabled\" label=\"状态\" width=\"\" sortable>\r\n                <template slot-scope=\"scope\">\r\n                    <el-tag\r\n                            :type=\"scope.row.Enabled  ? 'success' : 'danger'\"\r\n                            disable-transitions>{{scope.row.Enabled ? \"已出炉\":\"已出炉\"}}\r\n                    </el-tag>\r\n                </template>\r\n            </el-table-column>\r\n            <!-- <el-table-column label=\"操作\" width=\"150\">\r\n                <template scope=\"scope\">\r\n                    <el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\r\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\r\n                </template>\r\n            </el-table-column> -->\r\n        </el-table>\r\n\r\n      \r\n\r\n        <!--编辑界面-->\r\n        <el-dialog title=\"编辑\" :visible.sync=\"editFormVisible\" v-model=\"editFormVisible\" :close-on-click-modal=\"false\">\r\n            <el-form :model=\"editForm\" label-width=\"80px\" :rules=\"editFormRules\" ref=\"editForm\">\r\n                <el-form-item label=\"接口地址\" prop=\"LinkUrl\">\r\n                    <el-input v-model=\"editForm.LinkUrl\" auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"接口描述\" prop=\"Name\">\r\n                    <el-input v-model=\"editForm.Name\" auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"状态\" prop=\"Enabled\">\r\n                    <el-select v-model=\"editForm.Enabled\" placeholder=\"请选择状态\">\r\n                        <el-option v-for=\"item in statusList\" :key=\"item.value\" :label=\"item.LinkUrl\"\r\n                                   :value=\"item.value\"></el-option>\r\n\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click.native=\"editFormVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <!--新增界面-->\r\n        <el-dialog title=\"新增\" :visible.sync=\"addFormVisible\" v-model=\"addFormVisible\" :close-on-click-modal=\"false\">\r\n            <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\r\n                <el-form-item label=\"接口地址\" prop=\"LinkUrl\">\r\n                    <el-input v-model=\"addForm.LinkUrl\" auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"接口描述\" prop=\"Name\">\r\n                    <el-input v-model=\"addForm.Name\" auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"状态\" prop=\"Enabled\">\r\n                    <el-select v-model=\"addForm.Enabled\" placeholder=\"请选择状态\">\r\n                        <el-option label=\"激活\" value=\"true\"></el-option>\r\n                        <el-option label=\"禁用\" value=\"false\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click.native=\"addFormVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    import util from '../../../util/date'\r\n    import {getWipHistoryPage} from '../../api/api';\r\n    import { getButtonList } from \"../../promissionRouter\";\r\n    import Toolbar from \"../../components/Toolbar\";\r\n\r\n    export default {\r\n        components: { Toolbar },\r\n        data() {\r\n            return {\r\n                buttonList: [],\r\n                currentRow: null,\r\n                filters: {\r\n                    name: ''\r\n                },\r\n                users: [],\r\n                statusList: [{LinkUrl: '激活', value: true}, {LinkUrl: '禁用', value: false}],\r\n                total: 0,\r\n                page: 1,\r\n                listLoading: false,\r\n                sels: [],//列表选中列\r\n\r\n                addDialogFormVisible: false,\r\n                editFormVisible: false,//编辑界面是否显示\r\n                editLoading: false,\r\n                editFormRules: {\r\n\r\n                    LinkUrl: [\r\n                        {required: true, message: '请输入接口地址', trigger: 'blur'}\r\n                    ],\r\n\r\n                },\r\n                //编辑界面数据\r\n                editForm: {\r\n                    Id: 0,\r\n                    CreateBy: '',\r\n                    LinkUrl: '',\r\n                    Name: '',\r\n                    Enabled: false,\r\n                },\r\n\r\n                addFormVisible: false,//新增界面是否显示\r\n                addLoading: false,\r\n                addFormRules: {\r\n\r\n                    LinkUrl: [\r\n                        {required: true, message: '请输入接口地址', trigger: 'blur'}\r\n                    ],\r\n\r\n                },\r\n                //新增界面数据\r\n                addForm: {\r\n                    CreateBy: '',\r\n                    CreateId: '',\r\n                    LinkUrl: '',\r\n                    Name: '',\r\n                    Enabled: '',\r\n                }\r\n\r\n            }\r\n        },\r\n        methods: {\r\n            selectCurrentRow(val) {\r\n            this.currentRow = val;\r\n            },\r\n            callFunction(item) {\r\n            this.filters = {\r\n                name: item.search\r\n            };\r\n            this[item.Func].apply(this, item);\r\n            },\r\n            //性别显示转换\r\n            formatEnabled: function (row, column) {\r\n                return row.Enabled ? '正常' : '未知';\r\n            },\r\n            formatCreateTime: function (row, column) {\r\n                return (!row.CreateTime || row.CreateTime == '') ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\r\n            },\r\n            handleCurrentChange(val) {\r\n                this.page = val;\r\n                this.getWipHistory();\r\n            },\r\n            //获取列表\r\n            getWipHistory() {\r\n                debugger\r\n                let para = {\r\n                    page: this.page,\r\n                    key: this.filters.name\r\n                };\r\n                this.listLoading = true;\r\n\r\n                //NProgress.start();\r\n                getWipHistoryPage(para).then((res) => {\r\n                    this.total = res.data.response.dataCount;\r\n                    this.users = res.data.response.data;\r\n                    this.listLoading = false;\r\n                    //NProgress.done();\r\n                });\r\n            },\r\n            //删除\r\n            handleDel() {\r\n                let row = this.currentRow;\r\n                if (!row) {\r\n                    this.$message({\r\n                    message: \"请选择要删除的一行数据！\",\r\n                    type: \"error\"\r\n                    });\r\n\r\n                    return;\r\n                }\r\n                this.$confirm('确认删除该记录吗?', '提示', {\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.listLoading = true;\r\n                    //NProgress.start();\r\n                    let para = {id: row.Id};\r\n                    removeModule(para).then((res) => {\r\n\r\n                        if (util.isEmt.format(res)) {\r\n                            this.listLoading = false;\r\n                            return;\r\n                        }\r\n                        this.listLoading = false;\r\n                        //NProgress.done();\r\n                        if (res.data.success) {\r\n                            this.$message({\r\n                                message: '删除成功',\r\n                                type: 'success'\r\n                            });\r\n\r\n                        } else {\r\n                            this.$message({\r\n                                message: res.data.msg,\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n\r\n                        this.getWipHistory();\r\n                    });\r\n                }).catch(() => {\r\n\r\n                });\r\n            },\r\n            //显示编辑界面\r\n            handleEdit() {\r\n                let row = this.currentRow;\r\n                if (!row) {\r\n                    this.$message({\r\n                    message: \"请选择要编辑的一行数据！\",\r\n                    type: \"error\"\r\n                    });\r\n\r\n                    return;\r\n                }\r\n                this.editFormVisible = true;\r\n                this.editForm = Object.assign({}, row);\r\n            },\r\n            //显示新增界面\r\n            handleAdd() {\r\n                this.addFormVisible = true;\r\n                this.addForm = {\r\n                    CreateBy: '',\r\n                    LinkUrl: '',\r\n                    Name: '',\r\n                    Enabled: 'true',\r\n                };\r\n            },\r\n            //编辑\r\n            editSubmit: function () {\r\n                this.$refs.editForm.validate((valid) => {\r\n                    if (valid) {\r\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n                            this.editLoading = true;\r\n                            //NProgress.start();\r\n                            let para = Object.assign({}, this.editForm);\r\n\r\n                            para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\r\n\r\n                            editModule(para).then((res) => {\r\n\r\n                                if (util.isEmt.format(res)) {\r\n                                    this.editLoading = false;\r\n                                    return;\r\n                                }\r\n                                if (res.data.success) {\r\n                                    this.editLoading = false;\r\n                                    //NProgress.done();\r\n                                    this.$message({\r\n                                        message: res.data.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    this.$refs['editForm'].resetFields();\r\n                                    this.editFormVisible = false;\r\n                                    this.getWipHistory();\r\n                                } else {\r\n                                    this.$message({\r\n                                        message: res.data.msg,\r\n                                        type: 'error'\r\n                                    });\r\n\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n            //新增\r\n            addSubmit: function () {\r\n                let _this = this;\r\n                this.$refs.addForm.validate((valid) => {\r\n                    if (valid) {\r\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n                            this.addLoading = true;\r\n                            //NProgress.start();\r\n                            let para = Object.assign({}, this.addForm);\r\n\r\n                            para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\r\n                            para.ModifyTime = para.CreateTime;\r\n                            para.IsDeleted = false;\r\n\r\n                            var user = JSON.parse(window.localStorage.user);\r\n\r\n                            if (user && user.uID > 0) {\r\n                                para.CreateId = user.uID;\r\n                                para.CreateBy = user.uRealName;\r\n                            } else {\r\n                                this.$message({\r\n                                    message: '用户信息为空，先登录',\r\n                                    type: 'error'\r\n                                });\r\n                                _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\r\n                            }\r\n\r\n\r\n                            addModule(para).then((res) => {\r\n\r\n                                if (util.isEmt.format(res)) {\r\n                                    this.addLoading = false;\r\n                                    return;\r\n                                }\r\n\r\n                                if (res.data.success) {\r\n                                    this.addLoading = false;\r\n                                    //NProgress.done();\r\n                                    this.$message({\r\n                                        message: res.data.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    this.$refs['addForm'].resetFields();\r\n                                    this.addFormVisible = false;\r\n                                    this.getWipHistory();\r\n                                }\r\n                                else {\r\n                                    this.$message({\r\n                                        message: res.data.msg,\r\n                                        type: 'error'\r\n                                    });\r\n\r\n                                }\r\n\r\n                            });\r\n\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n            selsChange: function (sels) {\r\n                this.sels = sels;\r\n            },\r\n            //批量删除\r\n            batchRemove: function () {\r\n                this.$message({\r\n                    message: '该功能未开放',\r\n                    type: 'warning'\r\n                });\r\n            }\r\n        },\r\n        mounted() {\r\n            \r\n            this.getWipHistory();\r\n\r\n            let routers = window.localStorage.router\r\n            ? JSON.parse(window.localStorage.router)\r\n            : [];\r\n            this.buttonList = getButtonList(this.$route.path, routers);\r\n            debugger\r\n           \r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src\\views\\BufferMgr"}]}