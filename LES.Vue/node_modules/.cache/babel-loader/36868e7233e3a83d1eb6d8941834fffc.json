{"remainingRequest":"C:\\框架\\Blog.Admin-master\\node_modules\\thread-loader\\dist\\cjs.js!C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js!C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\框架\\Blog.Admin-master\\src\\views\\User\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\框架\\Blog.Admin-master\\src\\views\\User\\Users.vue","mtime":1610782299013},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport _Object$assign from \"C:\\\\\\u6846\\u67B6\\\\Blog.Admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from '../../../util/date';\nimport { testapi, getUserListPage, getRoleListPage, removeUser, batchRemoveUser, editUser, addUser } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\nexport default {\n  components: {\n    Toolbar: Toolbar\n  },\n  data: function data() {\n    return {\n      filters: {\n        name: ''\n      },\n      users: [],\n      roles: [],\n      total: 0,\n      buttonList: [],\n      currentRow: null,\n      page: 1,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      addDialogFormVisible: false,\n      editFormVisible: false,\n      //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        uLoginName: [{\n          required: true,\n          message: '请输入登录名',\n          trigger: 'blur'\n        }],\n        uRealName: [{\n          required: true,\n          message: '请输入昵称',\n          trigger: 'blur'\n        }],\n        birth: [{\n          required: true,\n          message: '请填写生日',\n          trigger: 'blur'\n        }]\n      },\n      //编辑界面数据\n      editForm: {\n        id: 0,\n        uID: 0,\n        RIDs: 0,\n        uLoginName: '',\n        uRealName: '',\n        name: '',\n        sex: -1,\n        age: 0,\n        birth: '',\n        addr: ''\n      },\n      addFormVisible: false,\n      //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        uLoginName: [{\n          required: true,\n          message: '请输入登录名',\n          trigger: 'blur'\n        }],\n        uRealName: [{\n          required: true,\n          message: '请输入昵称',\n          trigger: 'blur'\n        }],\n        uLoginPWD: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        birth: [{\n          required: true,\n          message: '请填写生日',\n          trigger: 'blur'\n        }]\n      },\n      //新增界面数据\n      addForm: {\n        name: '',\n        uLoginName: '',\n        uRealName: '',\n        uLoginPWD: '',\n        sex: -1,\n        age: 0,\n        birth: '',\n        addr: ''\n      }\n    };\n  },\n  methods: {\n    selectCurrentRow: function selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    callFunction: function callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    //性别显示转换\n    formatSex: function formatSex(row, column) {\n      return row.sex == 1 ? '男' : row.sex == 0 ? '女' : '未知';\n    },\n    formatBirth: function formatBirth(row, column) {\n      return !row.birth || row.birth == '' ? '' : util.formatDate.format(new Date(row.birth), 'yyyy-MM-dd');\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getUsers();\n    },\n    //获取用户列表\n    getUsers: function getUsers() {\n      var _this = this;\n\n      var para = {\n        page: this.page,\n        key: this.filters.name\n      };\n      this.listLoading = true;\n      testapi(); //NProgress.start();\n\n      getUserListPage(para).then(function (res) {\n        _this.total = res.data.response.dataCount;\n        _this.users = res.data.response.data;\n        _this.listLoading = false; //NProgress.done();\n      });\n    },\n    //删除\n    handleDel: function handleDel() {\n      var _this2 = this;\n\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this2.listLoading = true; //NProgress.start();\n\n        var para = {\n          id: row.uID\n        };\n        removeUser(para).then(function (res) {\n          if (util.isEmt.format(res)) {\n            _this2.listLoading = false;\n            return;\n          }\n\n          _this2.listLoading = false; //NProgress.done();\n\n          if (res.data.success) {\n            _this2.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n          } else {\n            _this2.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          _this2.getUsers();\n        });\n      }).catch(function () {});\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit() {\n      var _this3 = this;\n\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.editFormVisible = true;\n      this.editForm = _Object$assign({}, row);\n      getRoleListPage().then(function (res) {\n        _this3.roles = res.data.response.data;\n      });\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.addFormVisible = true;\n      this.addForm = {\n        uLoginName: '',\n        uRealName: '',\n        uLoginPWD: '',\n        name: '',\n        sex: -1,\n        age: 0,\n        birth: '',\n        addr: ''\n      };\n    },\n    //编辑\n    editSubmit: function editSubmit() {\n      var _this4 = this;\n\n      this.$refs.editForm.validate(function (valid) {\n        if (valid) {\n          _this4.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this4.editLoading = true; //NProgress.start();\n\n            var para = _Object$assign({}, _this4.editForm);\n\n            para.birth = !para.birth || para.birth == '' ? util.formatDate.format(new Date(), 'yyyy-MM-dd') : util.formatDate.format(new Date(para.birth), 'yyyy-MM-dd');\n            editUser(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this4.editLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                _this4.editLoading = false; //NProgress.done();\n\n                _this4.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n\n                _this4.$refs['editForm'].resetFields();\n\n                _this4.editFormVisible = false;\n\n                _this4.getUsers();\n              } else {\n                _this4.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function addSubmit() {\n      var _this5 = this;\n\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this5.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this5.addLoading = true; //NProgress.start();\n\n            var para = _Object$assign({}, _this5.addForm);\n\n            para.birth = !para.birth || para.birth == '' ? util.formatDate.format(new Date(), 'yyyy-MM-dd') : util.formatDate.format(new Date(para.birth), 'yyyy-MM-dd');\n            addUser(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this5.addLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                _this5.addLoading = false; //NProgress.done();\n\n                _this5.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n\n                _this5.$refs['addForm'].resetFields();\n\n                _this5.addFormVisible = false;\n\n                _this5.getUsers();\n              } else {\n                _this5.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      var _this6 = this;\n\n      // return;\n      var ids = this.sels.map(function (item) {\n        return item.uID;\n      }).toString();\n      this.$confirm('确认删除选中记录吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this6.listLoading = true; //NProgress.start();\n\n        var para = {\n          ids: ids\n        };\n        batchRemoveUser(para).then(function (res) {\n          _this6.listLoading = false; //NProgress.done();\n\n          _this6.$message({\n            message: '该功能未开放',\n            type: 'warning'\n          });\n\n          console.log(res);\n        });\n      }).catch(function () {});\n    }\n  },\n  mounted: function mounted() {\n    this.getUsers();\n    var routers = window.localStorage.router ? JSON.parse(window.localStorage.router) : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n    debugger;\n  }\n};",{"version":3,"sources":["Users.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section>\n        <!--工具条-->\n     <toolbar :buttonList=\"buttonList\" @callFunction=\"callFunction\"></toolbar>\n     \n\n        <!--列表-->\n        <el-table :data=\"users\" highlight-current-row \n        @current-change=\"selectCurrentRow\"\n        v-loading=\"listLoading\" @selection-change=\"selsChange\"\n                  style=\"width: 100%;\">\n            <el-table-column type=\"selection\" width=\"50\">\n            </el-table-column>\n            <el-table-column type=\"index\" width=\"80\">\n            </el-table-column>\n            <el-table-column prop=\"uRealName\" label=\"昵称\" width=\"\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"uLoginName\" label=\"登录名\" width=\"\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"RoleNames\" label=\"角色\" width=\"\" sortable>\n                 <template slot-scope=\"scope\">\n                    <el-tag v-for=\"item in scope.row.RoleNames\" :key=\"item.Id\" >{{item}}</el-tag>\n                </template>\n            </el-table-column>\n            <!--<el-table-column prop=\"name\" label=\"姓名\" width=\"\" sortable>-->\n            <!--</el-table-column>-->\n            <el-table-column prop=\"sex\" label=\"性别\" width=\"\" :formatter=\"formatSex\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"birth\" label=\"生日\" :formatter=\"formatBirth\" width=\"\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"uStatus\" label=\"状态\" width=\"\" sortable>\n                <template slot-scope=\"scope\">\n                    <el-tag\n                            :type=\"scope.row.uStatus == 0  ? 'success' : 'danger'\"\n                            disable-transitions>{{scope.row.uStatus == 0 ? \"正常\":\"禁用\"}}\n                    </el-tag>\n                </template>\n            </el-table-column>\n            <!-- <el-table-column label=\"操作\" width=\"150\">\n                <template scope=\"scope\">\n                    <el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n                </template>\n            </el-table-column> -->\n        </el-table>\n\n        <!--工具条-->\n        <el-col :span=\"24\" class=\"toolbar\">\n            <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n            <el-pagination layout=\"prev, pager, next\" @current-change=\"handleCurrentChange\" :page-size=\"50\"\n                           :total=\"total\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n\n        <!--编辑界面-->\n        <el-dialog title=\"编辑\" :visible.sync=\"editFormVisible\" v-model=\"editFormVisible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"editForm\" label-width=\"80px\" :rules=\"editFormRules\" ref=\"editForm\">\n                <el-form-item label=\"昵称\" prop=\"uRealName\">\n                    <el-input v-model=\"editForm.uRealName\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"登录名\" prop=\"uLoginName\">\n                    <el-input v-model=\"editForm.uLoginName\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <!--<el-form-item label=\"密码\" prop=\"uLoginPWD\">-->\n                    <!--<el-input v-model=\"editForm.uLoginPWD\" show-password  auto-complete=\"off\"></el-input>-->\n                <!--</el-form-item>-->\n\n                <el-form-item label=\"角色\" prop=\"RIDs\">\n                    <el-select multiple v-model=\"editForm.RIDs\" placeholder=\"请选择角色\">\n                        <el-option  :key=\"0\" :label=\"'未选择角色'\" :value=\"0\"></el-option>\n                        <el-option v-for=\"item in roles\" :key=\"item.Id\" :label=\"item.Name\" :value=\"item.Id\"></el-option>\n                    </el-select>\n                </el-form-item>\n\n                <el-form-item label=\"性别\">\n                    <el-radio-group v-model=\"editForm.sex\">\n                        <el-radio class=\"radio\" :label=\"1\">男</el-radio>\n                        <el-radio class=\"radio\" :label=\"0\">女</el-radio>\n                    </el-radio-group>\n                </el-form-item>\n                <el-form-item label=\"年龄\">\n                    <el-input-number v-model=\"editForm.age\" :min=\"0\" :max=\"200\"></el-input-number>\n                </el-form-item>\n                <el-form-item label=\"生日\">\n                    <el-date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"editForm.birth\"></el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"地址\">\n                    <el-input type=\"textarea\" v-model=\"editForm.addr\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n\n        <!--新增界面-->\n        <el-dialog title=\"新增\" :visible.sync=\"addFormVisible\" v-model=\"addFormVisible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\n                <el-form-item label=\"昵称\" prop=\"uRealName\">\n                    <el-input v-model=\"addForm.uRealName\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"登录名\" prop=\"uLoginName\">\n                    <el-input v-model=\"addForm.uLoginName\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\" prop=\"uLoginPWD\">\n                    <el-input v-model=\"addForm.uLoginPWD\" show-password  auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <!--<el-form-item label=\"姓名\" prop=\"name\">-->\n                    <!--<el-input v-model=\"addForm.name\" auto-complete=\"off\"></el-input>-->\n                <!--</el-form-item>-->\n                <el-form-item label=\"性别\">\n                    <el-radio-group v-model=\"addForm.sex\">\n                        <el-radio class=\"radio\" :label=\"1\">男</el-radio>\n                        <el-radio class=\"radio\" :label=\"0\">女</el-radio>\n                    </el-radio-group>\n                </el-form-item>\n                <el-form-item label=\"年龄\">\n                    <el-input-number v-model=\"addForm.age\" :min=\"0\" :max=\"200\"></el-input-number>\n                </el-form-item>\n                <el-form-item label=\"生日\">\n                    <el-date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"addForm.birth\"></el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"地址\">\n                    <el-input type=\"textarea\" v-model=\"addForm.addr\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n    </section>\n</template>\n\n<script>\n    import util from '../../../util/date'\n    import {testapi, getUserListPage,getRoleListPage , removeUser, batchRemoveUser, editUser, addUser} from '../../api/api';\n    import { getButtonList } from \"../../promissionRouter\";\n    import Toolbar from \"../../components/Toolbar\";\n\n    export default {\n        components: { Toolbar },\n        data() {\n            return {\n                filters: {\n                    name: ''\n                },\n                users: [],\n                roles: [],\n                total: 0,\n                buttonList: [],\n                currentRow: null,\n                page: 1,\n                listLoading: false,\n                sels: [],//列表选中列\n\n                addDialogFormVisible: false,\n                editFormVisible: false,//编辑界面是否显示\n                editLoading: false,\n                editFormRules: {\n                    uLoginName: [\n                        {required: true, message: '请输入登录名', trigger: 'blur'}\n                    ],\n                    uRealName: [\n                        {required: true, message: '请输入昵称', trigger: 'blur'}\n                    ],\n                    birth: [\n                        {required: true, message: '请填写生日', trigger: 'blur'}\n                    ]\n                },\n                //编辑界面数据\n                editForm: {\n                    id: 0,\n                    uID: 0,\n                    RIDs: 0,\n                    uLoginName: '',\n                    uRealName: '',\n                    name: '',\n                    sex: -1,\n                    age: 0,\n                    birth: '',\n                    addr: ''\n                },\n\n                addFormVisible: false,//新增界面是否显示\n                addLoading: false,\n                addFormRules: {\n                    uLoginName: [\n                        {required: true, message: '请输入登录名', trigger: 'blur'}\n                    ],\n                    uRealName: [\n                        {required: true, message: '请输入昵称', trigger: 'blur'}\n                    ],\n                    uLoginPWD: [\n                        {required: true, message: '请输入密码', trigger: 'blur'}\n                    ],\n                    birth: [\n                        {required: true, message: '请填写生日', trigger: 'blur'}\n                    ]\n                },\n                //新增界面数据\n                addForm: {\n                    name: '',\n                    uLoginName: '',\n                    uRealName: '',\n                    uLoginPWD: '',\n                    sex: -1,\n                    age: 0,\n                    birth: '',\n                    addr: ''\n                }\n\n            }\n        },\n        methods: {\n            selectCurrentRow(val) {\n            this.currentRow = val;\n            },\n            callFunction(item) {\n            this.filters = {\n                name: item.search\n            };\n            this[item.Func].apply(this, item);\n            },\n            //性别显示转换\n            formatSex: function (row, column) {\n                return row.sex == 1 ? '男' : row.sex == 0 ? '女' : '未知';\n            },\n            formatBirth: function (row, column) {\n                return (!row.birth || row.birth == '') ? '' : util.formatDate.format(new Date(row.birth), 'yyyy-MM-dd');\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getUsers();\n            },\n            //获取用户列表\n            getUsers() {\n                let para = {\n                    page: this.page,\n                    key: this.filters.name\n                };\n                this.listLoading = true;\n\n                testapi();\n                //NProgress.start();\n                getUserListPage(para).then((res) => {\n\n                    this.total = res.data.response.dataCount;\n                    this.users = res.data.response.data;\n                    this.listLoading = false;\n                    //NProgress.done();\n                });\n            },\n            //删除\n            handleDel() {\n                let row = this.currentRow;\n                if (!row) {\n                    this.$message({\n                    message: \"请选择要删除的一行数据！\",\n                    type: \"error\"\n                    });\n\n                    return;\n                }\n                this.$confirm('确认删除该记录吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let para = {id: row.uID};\n                    removeUser(para).then((res) => {\n\n                        if (util.isEmt.format(res)) {\n                            this.listLoading = false;\n                            return;\n                        }\n                        this.listLoading = false;\n                        //NProgress.done();\n                        if (res.data.success) {\n                            this.$message({\n                                message: '删除成功',\n                                type: 'success'\n                            });\n\n                        } else {\n                            this.$message({\n                                message: res.data.msg,\n                                type: 'error'\n                            });\n                        }\n\n                        this.getUsers();\n                    });\n                }).catch(() => {\n\n                });\n            },\n            //显示编辑界面\n            handleEdit() {\n                let row = this.currentRow;\n                if (!row) {\n                    this.$message({\n                    message: \"请选择要编辑的一行数据！\",\n                    type: \"error\"\n                    });\n\n                    return;\n                }\n                this.editFormVisible = true;\n                this.editForm = Object.assign({}, row);\n\n                getRoleListPage().then((res) => {\n                    this.roles = res.data.response.data;\n                });\n\n            },\n            //显示新增界面\n            handleAdd() {\n                this.addFormVisible = true;\n                this.addForm = {\n                    uLoginName: '',\n                    uRealName: '',\n                    uLoginPWD: '',\n                    name: '',\n                    sex: -1,\n                    age: 0,\n                    birth: '',\n                    addr: ''\n                };\n            },\n            //编辑\n            editSubmit: function () {\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            this.editLoading = true;\n                            //NProgress.start();\n                            let para = Object.assign({}, this.editForm);\n\n                            para.birth = (!para.birth || para.birth == '') ? util.formatDate.format(new Date(), 'yyyy-MM-dd') : util.formatDate.format(new Date(para.birth), 'yyyy-MM-dd');\n\n                            editUser(para).then((res) => {\n\n                                if (util.isEmt.format(res)) {\n                                    this.editLoading = false;\n                                    return;\n                                }\n                                if (res.data.success) {\n                                    this.editLoading = false;\n                                    //NProgress.done();\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'success'\n                                    });\n                                    this.$refs['editForm'].resetFields();\n                                    this.editFormVisible = false;\n                                    this.getUsers();\n                                } else {\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'error'\n                                    });\n\n                                }\n                            });\n                        });\n                    }\n                });\n            },\n            //新增\n            addSubmit: function () {\n                this.$refs.addForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            this.addLoading = true;\n                            //NProgress.start();\n                            let para = Object.assign({}, this.addForm);\n                            para.birth = (!para.birth || para.birth == '') ? util.formatDate.format(new Date(), 'yyyy-MM-dd') : util.formatDate.format(new Date(para.birth), 'yyyy-MM-dd');\n                            addUser(para).then((res) => {\n\n                                if (util.isEmt.format(res)) {\n                                    this.addLoading = false;\n                                    return;\n                                }\n\n                                if (res.data.success) {\n                                    this.addLoading = false;\n                                    //NProgress.done();\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'success'\n                                    });\n                                    this.$refs['addForm'].resetFields();\n                                    this.addFormVisible = false;\n                                    this.getUsers();\n                                }\n                                else {\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'error'\n                                    });\n\n                                }\n\n                            });\n\n                        });\n                    }\n                });\n            },\n            selsChange: function (sels) {\n                this.sels = sels;\n            },\n            //批量删除\n            batchRemove: function () {\n\n                // return;\n\n                var ids = this.sels.map(item => item.uID).toString();\n                this.$confirm('确认删除选中记录吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let para = {ids: ids};\n\n                    batchRemoveUser(para).then((res) => {\n                        this.listLoading = false;\n                        //NProgress.done();\n                        this.$message({\n                            message: '该功能未开放',\n                            type: 'warning'\n                        });\n                        console.log(res)\n                    });\n                }).catch(() => {\n\n                });\n            }\n        },\n        mounted() {\n            this.getUsers();\n\n            let routers = window.localStorage.router\n            ? JSON.parse(window.localStorage.router)\n            : [];\n            this.buttonList = getButtonList(this.$route.path, routers);\n            debugger\n        }\n    }\n\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src\\views\\User"}]}