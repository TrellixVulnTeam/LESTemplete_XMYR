{"remainingRequest":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js!C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\框架\\Blog.Admin-master\\src\\views\\Blog\\Blogs.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\框架\\Blog.Admin-master\\src\\views\\Blog\\Blogs.vue","mtime":1610332596000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"C:\\\\\\u6846\\u67B6\\\\Blog.Admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from '../../../util/date';\nimport { getBlogListPage, removeBlog } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\nexport default {\n  components: {\n    Toolbar: Toolbar\n  },\n  data: function data() {\n    return {\n      buttonList: [],\n      currentRow: null,\n      filters: {\n        LinkUrl: ''\n      },\n      users: [],\n      statusList: [{\n        LinkUrl: '激活',\n        value: true\n      }, {\n        LinkUrl: '禁用',\n        value: false\n      }],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      addDialogFormVisible: false,\n      editFormVisible: false,\n      //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        LinkUrl: [{\n          required: true,\n          message: '请输入接口地址',\n          trigger: 'blur'\n        }]\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: false\n      },\n      addFormVisible: false,\n      //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        LinkUrl: [{\n          required: true,\n          message: '请输入接口地址',\n          trigger: 'blur'\n        }]\n      },\n      //新增界面数据\n      addForm: {\n        CreateBy: '',\n        CreateId: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: ''\n      }\n    };\n  },\n  methods: {\n    selectCurrentRow: function selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    callFunction: function callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    //性别显示转换\n    formatbcontent: function formatbcontent(row, column) {\n      return row.bcontent ? row.bcontent.substring(20) : 'N/A';\n    },\n    formatCreateTime: function formatCreateTime(row, column) {\n      return !row.bCreateTime || row.bCreateTime == '' ? '' : util.formatDate.format(new Date(row.bCreateTime), 'yyyy-MM-dd');\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getBlogs();\n    },\n    //获取用户列表\n    getBlogs: function getBlogs() {\n      var _this2 = this;\n\n      var para = {\n        page: this.page,\n        key: this.filters.LinkUrl\n      };\n      this.listLoading = true; //NProgress.start();\n\n      getBlogListPage(para).then(function (res) {\n        _this2.total = res.data.response.dataCount;\n        _this2.users = res.data.response.data;\n        _this2.listLoading = false; //NProgress.done();\n      });\n    },\n    //删除\n    handleDel: function handleDel() {\n      var _this3 = this;\n\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this3.listLoading = true; //NProgress.start();\n\n        var para = {\n          id: row.bID\n        };\n        removeBlog(para).then(function (res) {\n          if (util.isEmt.format(res)) {\n            _this3.listLoading = false;\n            return;\n          }\n\n          _this3.listLoading = false; //NProgress.done();\n\n          if (res.data.success) {\n            _this3.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n          } else {\n            _this3.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          _this3.getBlogs();\n        });\n      }).catch(function () {});\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit() {\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      } // this.editFormVisible = true;\n      // this.editForm = Object.assign({}, row);\n\n\n      console.log(row.bID);\n      this.$router.replace(\"/Blog/Detail/\".concat(row.bID)); // this.$message({\n      //     message: \"功能正在陆续开发中...\",\n      //     type: 'error'\n      // });\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: 'true'\n      };\n    },\n    //编辑\n    editSubmit: function editSubmit() {\n      var _this4 = this;\n\n      this.$refs.editForm.validate(function (valid) {\n        if (valid) {\n          _this4.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this4.editLoading = true; //NProgress.start();\n\n            var para = _Object$assign({}, _this4.editForm);\n\n            para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n            editModule(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this4.editLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                _this4.editLoading = false; //NProgress.done();\n\n                _this4.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n\n                _this4.$refs['editForm'].resetFields();\n\n                _this4.editFormVisible = false;\n\n                _this4.getBlogs();\n              } else {\n                _this4.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function addSubmit() {\n      var _this5 = this;\n\n      var _this = this;\n\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this5.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this5.addLoading = true; //NProgress.start();\n\n            var para = _Object$assign({}, _this5.addForm);\n\n            para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n            para.ModifyTime = para.CreateTime;\n            para.IsDeleted = false;\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              _this5.$message({\n                message: '用户信息为空，先登录',\n                type: 'error'\n              });\n\n              _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n            }\n\n            addModule(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this5.addLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                _this5.addLoading = false; //NProgress.done();\n\n                _this5.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n\n                _this5.$refs['addForm'].resetFields();\n\n                _this5.addFormVisible = false;\n\n                _this5.getBlogs();\n              } else {\n                _this5.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      this.$message({\n        message: '该功能未开放',\n        type: 'warning'\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getBlogs();\n    var routers = window.localStorage.router ? JSON.parse(window.localStorage.router) : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n};",{"version":3,"sources":["Blogs.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section>\n        <!--工具条-->\n        <toolbar :buttonList=\"buttonList\" @callFunction=\"callFunction\"></toolbar>\n\n        <!--列表-->\n        <el-table :data=\"users\" highlight-current-row\n        @current-change=\"selectCurrentRow\" \n        v-loading=\"listLoading\" @selection-change=\"selsChange\"\n                  style=\"width: 100%;\">\n            <el-table-column type=\"selection\" width=\"50\">\n            </el-table-column>\n            <el-table-column type=\"index\" width=\"80\">\n            </el-table-column>\n            <el-table-column prop=\"bID\" label=\"ID\" width=\"100\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"btitle\" label=\"标题\" width=\"\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"bcontent\" label=\"内容\"   width=\"400\" sortable>\n                <template slot-scope=\"scope\">\n\n<span v-html=\"scope.row.bcontent.substring(0,100)\"></span>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"bCreateTime\" label=\"创建时间\" :formatter=\"formatCreateTime\" width=\"250\" sortable>\n            </el-table-column>\n\n            <!-- <el-table-column label=\"操作\" width=\"150\">\n                <template scope=\"scope\">\n                    <el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n                </template>\n            </el-table-column> -->\n        </el-table>\n\n        <!--工具条-->\n        <el-col :span=\"24\" class=\"toolbar\">\n            <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n            <el-pagination layout=\"prev, pager, next\" @current-change=\"handleCurrentChange\" :page-size=\"6\"\n                           :total=\"total\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n\n        <!--编辑界面-->\n        <el-dialog title=\"编辑\" :visible.sync=\"editFormVisible\" v-model=\"editFormVisible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"editForm\" label-width=\"80px\" :rules=\"editFormRules\" ref=\"editForm\">\n                <el-form-item label=\"接口地址\" prop=\"LinkUrl\">\n                    <el-input v-model=\"editForm.LinkUrl\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"接口描述\" prop=\"Name\">\n                    <el-input v-model=\"editForm.Name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"Enabled\">\n                    <el-select v-model=\"editForm.Enabled\" placeholder=\"请选择状态\">\n                        <el-option v-for=\"item in statusList\" :key=\"item.value\" :label=\"item.LinkUrl\"\n                                   :value=\"item.value\"></el-option>\n\n                    </el-select>\n                </el-form-item>\n\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n\n        <!--新增界面-->\n        <el-dialog title=\"新增\" :visible.sync=\"addFormVisible\" v-model=\"addFormVisible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\n                <el-form-item label=\"接口地址\" prop=\"LinkUrl\">\n                    <el-input v-model=\"addForm.LinkUrl\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"接口描述\" prop=\"Name\">\n                    <el-input v-model=\"addForm.Name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"Enabled\">\n                    <el-select v-model=\"addForm.Enabled\" placeholder=\"请选择状态\">\n                        <el-option label=\"激活\" value=\"true\"></el-option>\n                        <el-option label=\"禁用\" value=\"false\"></el-option>\n                    </el-select>\n                </el-form-item>\n\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n    </section>\n</template>\n\n<script>\n    import util from '../../../util/date'\n    import {getBlogListPage,removeBlog} from '../../api/api';\n    import { getButtonList } from \"../../promissionRouter\";\n    import Toolbar from \"../../components/Toolbar\";\n\n    export default {\n        components: { Toolbar },\n        data() {\n            return {\n                buttonList: [],\n                currentRow: null,\n                filters: {\n                    LinkUrl: ''\n                },\n                users: [],\n                statusList: [{LinkUrl: '激活', value: true}, {LinkUrl: '禁用', value: false}],\n                total: 0,\n                page: 1,\n                listLoading: false,\n                sels: [],//列表选中列\n\n                addDialogFormVisible: false,\n                editFormVisible: false,//编辑界面是否显示\n                editLoading: false,\n                editFormRules: {\n\n                    LinkUrl: [\n                        {required: true, message: '请输入接口地址', trigger: 'blur'}\n                    ],\n\n                },\n                //编辑界面数据\n                editForm: {\n                    Id: 0,\n                    CreateBy: '',\n                    LinkUrl: '',\n                    Name: '',\n                    Enabled: false,\n                },\n\n                addFormVisible: false,//新增界面是否显示\n                addLoading: false,\n                addFormRules: {\n\n                    LinkUrl: [\n                        {required: true, message: '请输入接口地址', trigger: 'blur'}\n                    ],\n\n                },\n                //新增界面数据\n                addForm: {\n                    CreateBy: '',\n                    CreateId: '',\n                    LinkUrl: '',\n                    Name: '',\n                    Enabled: '',\n                }\n\n            }\n        },\n        methods: {\n            selectCurrentRow(val) {\n            this.currentRow = val;\n            },\n            callFunction(item) {\n            this.filters = {\n                name: item.search\n            };\n            this[item.Func].apply(this, item);\n            },\n            //性别显示转换\n            formatbcontent: function (row, column) {\n                return row.bcontent ? row.bcontent.substring(20) : 'N/A';\n            },\n            formatCreateTime: function (row, column) {\n                return (!row.bCreateTime || row.bCreateTime == '') ? '' : util.formatDate.format(new Date(row.bCreateTime), 'yyyy-MM-dd');\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getBlogs();\n            },\n            //获取用户列表\n            getBlogs() {\n                let para = {\n                    page: this.page,\n                    key: this.filters.LinkUrl\n                };\n                this.listLoading = true;\n\n                //NProgress.start();\n                getBlogListPage(para).then((res) => {\n                    this.total = res.data.response.dataCount;\n                    this.users = res.data.response.data;\n                    this.listLoading = false;\n                    //NProgress.done();\n                });\n            },\n            //删除\n            handleDel() {\n                let row = this.currentRow;\n                if (!row) {\n                    this.$message({\n                    message: \"请选择要删除的一行数据！\",\n                    type: \"error\"\n                    });\n\n                    return;\n                }\n                this.$confirm('确认删除该记录吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let para = {id: row.bID};\n                    removeBlog(para).then((res) => {\n                        if (util.isEmt.format(res)) {\n                            this.listLoading = false;\n                            return;\n                        }\n                        this.listLoading = false;\n                        //NProgress.done();\n                        if (res.data.success) {\n                            this.$message({\n                                message: '删除成功',\n                                type: 'success'\n                            });\n\n                        } else {\n                            this.$message({\n                                message: res.data.msg,\n                                type: 'error'\n                            });\n                        }\n\n                        this.getBlogs();\n                    });\n                }).catch(() => {\n\n                });\n            },\n            //显示编辑界面\n            handleEdit() {\n                let row = this.currentRow;\n                if (!row) {\n                    this.$message({\n                    message: \"请选择要编辑的一行数据！\",\n                    type: \"error\"\n                    });\n\n                    return;\n                }\n                // this.editFormVisible = true;\n                // this.editForm = Object.assign({}, row);\n                console.log(row.bID)\n                this.$router.replace(`/Blog/Detail/${row.bID}`);\n\n\n                // this.$message({\n                //     message: \"功能正在陆续开发中...\",\n                //     type: 'error'\n                // });\n\n            },\n            //显示新增界面\n            handleAdd() {\n                this.addFormVisible = true;\n                this.addForm = {\n                    CreateBy: '',\n                    LinkUrl: '',\n                    Name: '',\n                    Enabled: 'true',\n                };\n            },\n            //编辑\n            editSubmit: function () {\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            this.editLoading = true;\n                            //NProgress.start();\n                            let para = Object.assign({}, this.editForm);\n\n                            para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n\n                            editModule(para).then((res) => {\n                                if (util.isEmt.format(res)) {\n                                    this.editLoading = false;\n                                    return;\n                                }\n                                if (res.data.success) {\n                                    this.editLoading = false;\n                                    //NProgress.done();\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'success'\n                                    });\n                                    this.$refs['editForm'].resetFields();\n                                    this.editFormVisible = false;\n                                    this.getBlogs();\n                                } else {\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'error'\n                                    });\n\n                                }\n                            });\n                        });\n                    }\n                });\n            },\n            //新增\n            addSubmit: function () {\n                let _this = this;\n                this.$refs.addForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            this.addLoading = true;\n                            //NProgress.start();\n                            let para = Object.assign({}, this.addForm);\n\n                            para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n                            para.ModifyTime = para.CreateTime;\n                            para.IsDeleted = false;\n\n                            var user = JSON.parse(window.localStorage.user);\n\n                            if (user && user.uID > 0) {\n                                para.CreateId = user.uID;\n                                para.CreateBy = user.uRealName;\n                            } else {\n                                this.$message({\n                                    message: '用户信息为空，先登录',\n                                    type: 'error'\n                                });\n                                _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n                            }\n\n\n                            addModule(para).then((res) => {\n\n                                if (util.isEmt.format(res)) {\n                                    this.addLoading = false;\n                                    return;\n                                }\n                                if (res.data.success) {\n                                    this.addLoading = false;\n                                    //NProgress.done();\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'success'\n                                    });\n                                    this.$refs['addForm'].resetFields();\n                                    this.addFormVisible = false;\n                                    this.getBlogs();\n                                }\n                                else {\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'error'\n                                    });\n\n                                }\n\n                            });\n\n                        });\n                    }\n                });\n            },\n            selsChange: function (sels) {\n                this.sels = sels;\n            },\n            //批量删除\n            batchRemove: function () {\n                this.$message({\n                    message: '该功能未开放',\n                    type: 'warning'\n                });\n            }\n        },\n        mounted() {\n            this.getBlogs();\n\n            let routers = window.localStorage.router\n            ? JSON.parse(window.localStorage.router)\n            : [];\n            this.buttonList = getButtonList(this.$route.path, routers);\n        }\n    }\n\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src\\views\\Blog"}]}