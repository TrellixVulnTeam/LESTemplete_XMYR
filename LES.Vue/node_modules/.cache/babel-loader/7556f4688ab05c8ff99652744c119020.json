{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\Base_Station.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\Base_Station.vue","mtime":1611632066228},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"D:\\\\\\u6570\\u701B\\u4FE1\\u606F\\u79D1\\u6280\\\\\\u516C\\u53F8\\u9879\\u76EE\\\\\\u5E7F\\u5DDE\\u897F\\u95E8\\u5B50\\u539F\\u6750\\u6599\\u7ACB\\u4F53\\u5E93\\\\\\u4F4E\\u538B\\u7EBF\\u5708\\\\src\\\\LES.Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _parseInt from \"D:\\\\\\u6570\\u701B\\u4FE1\\u606F\\u79D1\\u6280\\\\\\u516C\\u53F8\\u9879\\u76EE\\\\\\u5E7F\\u5DDE\\u897F\\u95E8\\u5B50\\u539F\\u6750\\u6599\\u7ACB\\u4F53\\u5E93\\\\\\u4F4E\\u538B\\u7EBF\\u5708\\\\src\\\\LES.Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from '../../../util/date';\nimport { getStationListPage, removeStation, editStation, addStation } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/ToolbarButton\";\nimport SearchForm from \"../../components/SearchForm\";\nimport ToolbarExport from \"../../components/ToolbarExport\";\nimport { formatDate } from '../../../util/tools';\nexport default {\n  components: {\n    Toolbar: Toolbar,\n    SearchForm: SearchForm,\n    ToolbarExport: ToolbarExport\n  },\n  //注册子组件 \n  data: function data() {\n    return {\n      //导出组件相关 \n      exportFileName: '$ChinaComment$信息',\n      //要导出的文件名 \n      currentPageData: [],\n      //当前页面的列表数据 \n      tHeader: ['站点编号', '站点名称', '所属产线', '所属产线', '创建者ID', '创建者', '修改ID', '修改者', '修改时间'],\n      //当前页面列表的表头汉字数组，导出用 \n      filterVal: ['StationCode', 'StationName', 'AllowLine', 'Remark', 'CreateId', 'CreateBy', 'ModifyId', 'ModifyBy', 'ModifyTime'],\n      //当前页面列表的表头属性数组，导出用 \n      //搜索框相关 \n      drawerSize: \"450px\",\n      //drawner宽度设置 \n      searchFormInputPlaceholder: '请输入站点编号/站点名称/所属产线/所属产线/创建者ID/创建者/修改ID/修改者/修改时间',\n      //要给子搜索组件传递的值 \n      formOptions: [{\n        label: '站点编号',\n        prop: 'StationCode',\n        element: 'el-input'\n      }, {\n        label: '站点名称',\n        prop: 'StationName',\n        element: 'el-input'\n      }, {\n        label: '所属产线',\n        prop: 'AllowLine',\n        element: 'el-input'\n      }, {\n        label: '所属产线',\n        prop: 'Remark',\n        element: 'el-input'\n      }, {\n        label: '创建者ID',\n        prop: 'CreateId',\n        element: 'el-input'\n      }, {\n        label: '创建者',\n        prop: 'CreateBy',\n        element: 'el-input'\n      }, {\n        label: '修改ID',\n        prop: 'ModifyId',\n        element: 'el-input'\n      }, {\n        label: '修改者',\n        prop: 'ModifyBy',\n        element: 'el-input'\n      }, {\n        label: '修改时间',\n        prop: 'ModifyTime',\n        element: 'el-date-picker'\n      }],\n      tableHeight: window.innerHeight - 230,\n      // 500, // 这个值不能设置小了，设置小了，界面就不对了 \n      isAdd: false,\n      // 是否是新增 \n      dialogTitle: '',\n      filters: {\n        name: ''\n      },\n      Stations: [],\n      roles: [],\n      total: 0,\n      buttonList: [],\n      currentRow: null,\n      page: 1,\n      pageSize: 10,\n      listLoading: false,\n      sels: [],\n      //列表选中列 \n      addFormVisible: false,\n      //新增界面是否显示 \n      addLoading: false,\n      //新增界面数据 \n      addForm: {}\n    };\n  },\n  methods: {\n    // 设置索引 \n    indexMethod: function indexMethod(index) {\n      return (this.page - 1) * this.pageSize + 1 + index;\n    },\n    // 时间格式化 \n    formatterDateTime: function formatterDateTime(row, column, cellValue, index) {\n      if (cellValue === null || cellValue === '') {\n        return '';\n      }\n\n      var t = cellValue.slice(6, 19); // 截取字符串 \n\n      var NewDtime = new Date(_parseInt(t));\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss');\n    },\n    selectCurrentRow: function selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    callFunction: function callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getStations();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.getStations();\n    },\n\n    /** \n     * 获取请求参数 \n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据 \n     */\n    getPostParam: function getPostParam(flag) {\n      var para = _Object$assign({}, this.$refs.ChildSearchForm.getFormData());\n\n      para.page = this.page;\n      para.pageSize = this.pageSize;\n\n      if (flag === '2') {\n        // 全部导出 \n        para.page = 1;\n        para.pageSize = 10000;\n      }\n\n      return para;\n    },\n    //获取码表集列表 \n    getStations: function getStations(formValue) {\n      var _this = this;\n\n      //this.total = 0 \n      //this.Stations = null \n      var para = this.getPostParam('1');\n      this.listLoading = true;\n      getStationListPage(para).then(function (res) {\n        _this.total = res.data.response.dataCount;\n        _this.Stations = res.data.response.data;\n        _this.listLoading = false;\n      });\n    },\n    //获取全部列表 \n    exportAllData: function exportAllData() {\n      var _this2 = this;\n\n      var para = this.getPostParam('2');\n      this.listLoading = true;\n      getStationListPage(para).then(function (res) {\n        var allData = res.data.response.data;\n\n        _this2.$refs.cmToolbarExport.export2Excel(allData);\n\n        _this2.listLoading = false;\n      });\n    },\n    //删除 \n    handleDel: function handleDel() {\n      var _this3 = this;\n\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this3.listLoading = true;\n        var para = {\n          id: row.Id\n        };\n        removeStation(para).then(function (res) {\n          if (util.isEmt.format(res)) {\n            _this3.listLoading = false;\n            return;\n          }\n\n          _this3.listLoading = false; //NProgress.done(); \n\n          if (res.data.success) {\n            _this3.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n          } else {\n            _this3.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          _this3.getStations();\n        });\n      }).catch(function () {});\n    },\n    //显示编辑界面 \n    handleEdit: function handleEdit() {\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.isAdd = false;\n      this.dialogTitle = '编辑';\n      this.addFormVisible = true;\n      this.addForm = {};\n      debugger;\n      this.addForm = _Object$assign({}, row);\n    },\n    //显示新增界面 \n    handleAdd: function handleAdd() {\n      this.isAdd = true;\n      this.dialogTitle = '新增';\n      this.addFormVisible = true;\n      this.addForm = {};\n    },\n    // 更新数据 \n    SaveData: function SaveData(formName) {\n      var _this4 = this;\n\n      this.submitDisabled = true;\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this4.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this4.addLoading = true;\n\n            var para = _Object$assign({}, _this4.addForm);\n\n            if (_this4.isAdd) {\n              //新增 \n              addStation(para).then(function (res) {\n                if (util.isEmt.format(res)) {\n                  _this4.addLoading = false;\n                  return;\n                }\n\n                if (res.data.success) {\n                  _this4.addLoading = false; //NProgress.done(); \n\n                  _this4.$message({\n                    message: res.data.msg,\n                    type: 'success'\n                  });\n\n                  _this4.$refs['addForm'].resetFields();\n\n                  _this4.addFormVisible = false;\n\n                  _this4.getStations();\n                } else {\n                  _this4.addLoading = false;\n\n                  _this4.$message({\n                    message: res.data.msg,\n                    type: 'error'\n                  });\n                }\n              });\n            } else {\n              //编辑 \n              editStation(para).then(function (res) {\n                if (util.isEmt.format(res)) {\n                  _this4.addLoading = false;\n                  return;\n                }\n\n                if (res.data.success) {\n                  _this4.addLoading = false; //NProgress.done(); \n\n                  _this4.$message({\n                    message: res.data.msg,\n                    type: 'success'\n                  });\n\n                  _this4.$refs['addForm'].resetFields();\n\n                  _this4.addFormVisible = false;\n\n                  _this4.getStations();\n                } else {\n                  _this4.addLoading = false;\n\n                  _this4.$message({\n                    message: res.data.msg,\n                    type: 'error'\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //导出 \n    handleExport: function handleExport() {\n      this.currentPageData = this.Stations;\n      this.$refs.cmToolbarExport.showPrintPage();\n    }\n  },\n  mounted: function mounted() {\n    this.getStations();\n    var routers = window.localStorage.router ? JSON.parse(window.localStorage.router) : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n};",{"version":3,"sources":["Base_Station.vue"],"names":[],"mappings":"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","sourcesContent":["<template> \n  <section> \n    <!--工具条--> \n    <el-col :span=\"24\" \n            class=\"toolbar\" \n            style=\"padding-bottom: 0px;\"> \n      <el-form :inline=\"true\" \n               @submit.native.prevent> \n        <toolbar :buttonList=\"buttonList\" \n                 @callFunction=\"callFunction\"> \n        </toolbar> \n        <!-- 搜索 --> \n        <SearchForm :formOptions=\"formOptions\" \n                    :drawerSize=\"drawerSize\" \n                    :searchFormInputPlaceholder=\"searchFormInputPlaceholder\" \n                    ref=\"ChildSearchForm\" \n                    @onSearch=\"getStations\" /> \n      </el-form> \n    </el-col> \n \n    <!--列表--> \n    <el-table :data=\"Stations\" \n              :height=\"tableHeight\" \n              highlight-current-row \n              size=\"small\" \n              @current-change=\"selectCurrentRow\" \n              v-loading=\"listLoading\" \n              @selection-change=\"selsChange\" \n              style=\"width: 99%;\"> \n      <el-table-column type=\"index\" \n                       :index=\"indexMethod\" \n                       label=\"#\" \n                       align=\"center\" \n                       width=\"50\"> \n      </el-table-column> \n                <el-table-column prop=\"StationCode\" label=\"站点编号\" align=\"center\" > \n          </el-table-column> \n          <el-table-column prop=\"StationName\" label=\"站点名称\" align=\"center\" > \n          </el-table-column> \n          <el-table-column prop=\"AllowLine\" label=\"所属产线\" align=\"center\" > \n          </el-table-column> \n          <el-table-column prop=\"Remark\" label=\"所属产线\" align=\"center\" > \n          </el-table-column> \n          <el-table-column prop=\"CreateId\" label=\"创建者ID\" align=\"center\" > \n          </el-table-column> \n          <el-table-column prop=\"CreateBy\" label=\"创建者\" align=\"center\" > \n          </el-table-column> \n          <el-table-column prop=\"CreateTime\" label=\"创建时间\" width=\"150\" align=\"center\" :formatter=\"formatterDateTime\" > \n          </el-table-column> \n          <el-table-column prop=\"ModifyId\" label=\"修改ID\" align=\"center\" > \n          </el-table-column> \n          <el-table-column prop=\"ModifyBy\" label=\"修改者\" align=\"center\" > \n          </el-table-column> \n          <el-table-column prop=\"ModifyTime\" label=\"修改时间\" width=\"150\" align=\"center\" :formatter=\"formatterDateTime\" > \n          </el-table-column> \n \n    </el-table> \n \n    <!--工具条--> \n    <el-col :span=\"24\" \n            style=\"margin:10px 10px 10px 0px;\" \n            class=\"toolbar\"> \n      <el-pagination @size-change=\"handleSizeChange\" \n                     @current-change=\"handleCurrentChange\" \n                     :current-page=\"page\" \n                     background \n                     :page-sizes=\"[5,10,50,100, 200, 300, 400]\" \n                     :page-size=\"pageSize\" \n                     layout=\"total, sizes, prev, pager, next, jumper\" \n                     :total=\"total\"> \n      </el-pagination> \n    </el-col> \n    <!--新增/编辑界面--> \n    <el-dialog :title=\"dialogTitle\" \n               :visible.sync=\"addFormVisible\" \n               v-model=\"addFormVisible\" \n               :close-on-click-modal=\"false\"> \n      <el-form :model=\"addForm\" \n               size=\"small\" \n               label-width=\"80px\" \n               ref=\"addForm\"> \n                        <el-form-item label=\"站点编号\" prop=\"StationCode\" :rules=\"[{ required: true, message: '站点编号不能为空'}]\"> \n                  <el-input v-model=\"addForm.StationCode\"></el-input> \n                </el-form-item> \n                <el-form-item label=\"站点名称\" prop=\"StationName\" :rules=\"[{ required: true, message: '站点名称不能为空'}]\"> \n                  <el-input v-model=\"addForm.StationName\"></el-input> \n                </el-form-item> \n                <el-form-item label=\"所属产线\" prop=\"AllowLine\" :rules=\"[{ required: true, message: '所属产线不能为空'}]\"> \n                  <el-input v-model=\"addForm.AllowLine\"></el-input> \n                </el-form-item> \n                <el-form-item label=\"所属产线\" prop=\"Remark \"> \n                  <el-input v-model=\"addForm.Remark\"></el-input> \n                </el-form-item> \n                <el-form-item label=\"创建者ID\" prop=\"CreateId \"> \n                  <el-input v-model=\"addForm.CreateId\"></el-input> \n                </el-form-item> \n                <el-form-item label=\"创建者\" prop=\"CreateBy \"> \n                  <el-input v-model=\"addForm.CreateBy\"></el-input> \n                </el-form-item> \n                <el-form-item label=\"修改ID\" prop=\"ModifyId \"> \n                  <el-input v-model=\"addForm.ModifyId\"></el-input> \n                </el-form-item> \n                <el-form-item label=\"修改者\" prop=\"ModifyBy \"> \n                  <el-input v-model=\"addForm.ModifyBy\"></el-input> \n                </el-form-item> \n                <el-form-item label=\"修改时间\" prop=\"ModifyTime \"> \n                  <el-input v-model=\"addForm.ModifyTime\"></el-input> \n                </el-form-item> \n \n      </el-form> \n      <div slot=\"footer\" \n           class=\"dialog-footer\"> \n        <el-button @click.native=\"addFormVisible = false\">取消</el-button> \n        <el-button type=\"primary\" \n                   @click.native=\"SaveData\" \n                   :loading=\"addLoading\">提交</el-button> \n      </div> \n    </el-dialog> \n    <!-- 导出组件 --> \n    <ToolbarExport ref=\"cmToolbarExport\" \n                   :exportFileName=\"exportFileName\" \n                   :filterVal=\"filterVal\" \n                   :currentPageData=\"currentPageData\" \n                   :tHeader=\"tHeader\" /> \n  </section> \n</template> \n \n<script> \nimport util from '../../../util/date' \nimport { getStationListPage, removeStation, editStation, addStation } from '../../api/api'; \nimport { getButtonList } from \"../../promissionRouter\"; \nimport Toolbar from \"../../components/ToolbarButton\"; \nimport SearchForm from \"../../components/SearchForm\"; \nimport ToolbarExport from \"../../components/ToolbarExport\"; \nimport { formatDate } from '../../../util/tools' \n \n \nexport default { \n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件 \n  data () { \n    return { \n      //导出组件相关 \n      exportFileName: '$ChinaComment$信息',//要导出的文件名 \n      currentPageData: [],//当前页面的列表数据 \n      tHeader: ['站点编号','站点名称','所属产线','所属产线','创建者ID','创建者','修改ID','修改者','修改时间'],//当前页面列表的表头汉字数组，导出用 \n      filterVal: ['StationCode','StationName','AllowLine','Remark','CreateId','CreateBy','ModifyId','ModifyBy','ModifyTime'],//当前页面列表的表头属性数组，导出用 \n \n      //搜索框相关 \n      drawerSize: \"450px\",//drawner宽度设置 \n      searchFormInputPlaceholder: '请输入站点编号/站点名称/所属产线/所属产线/创建者ID/创建者/修改ID/修改者/修改时间',//要给子搜索组件传递的值 \n      formOptions: [ \n                        { \n                   label: '站点编号', \n                   prop: 'StationCode', \n                   element: 'el-input', \n                }, \n                { \n                   label: '站点名称', \n                   prop: 'StationName', \n                   element: 'el-input', \n                }, \n                { \n                   label: '所属产线', \n                   prop: 'AllowLine', \n                   element: 'el-input', \n                }, \n                { \n                   label: '所属产线', \n                   prop: 'Remark', \n                   element: 'el-input', \n                }, \n                { \n                   label: '创建者ID', \n                   prop: 'CreateId', \n                   element: 'el-input', \n                }, \n                { \n                   label: '创建者', \n                   prop: 'CreateBy', \n                   element: 'el-input', \n                }, \n                { \n                   label: '修改ID', \n                   prop: 'ModifyId', \n                   element: 'el-input', \n                }, \n                { \n                   label: '修改者', \n                   prop: 'ModifyBy', \n                   element: 'el-input', \n                }, \n                { \n                   label: '修改时间', \n                   prop: 'ModifyTime', \n                   element: 'el-date-picker', \n                },  \n      ], \n \n \n      tableHeight: window.innerHeight - 230, // 500, // 这个值不能设置小了，设置小了，界面就不对了 \n \n      isAdd: false, // 是否是新增 \n      dialogTitle: '', \n \n      filters: { \n        name: '' \n      }, \n      Stations: [], \n      roles: [], \n      total: 0, \n      buttonList: [], \n      currentRow: null, \n      page: 1, \n      pageSize: 10, \n      listLoading: false, \n      sels: [],//列表选中列 \n \n      addFormVisible: false,//新增界面是否显示 \n      addLoading: false, \n      //新增界面数据 \n      addForm: { \n      \n      } \n \n    } \n  }, \n  methods: { \n    // 设置索引 \n    indexMethod (index) { \n      return (this.page - 1) * this.pageSize + 1 + index \n    }, \n    // 时间格式化 \n    formatterDateTime (row, column, cellValue, index) { \n      if (cellValue === null || cellValue === '') { \n        return '' \n      } \n      var t = cellValue.slice(6, 19) // 截取字符串 \n      var NewDtime = new Date(parseInt(t)) \n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss') \n    }, \n    selectCurrentRow (val) { \n      this.currentRow = val; \n    }, \n    callFunction (item) { \n      this.filters = { \n        name: item.search \n      }; \n      this[item.Func].apply(this, item); \n    }, \n    handleCurrentChange (val) { \n      this.page = val; \n      this.getStations(); \n    }, \n    handleSizeChange (val) { \n      this.pageSize = val; \n      this.getStations(); \n    }, \n    /** \n     * 获取请求参数 \n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据 \n     */ \n    getPostParam (flag) { \n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData()); \n      para.page = this.page \n      para.pageSize = this.pageSize \n      if (flag === '2') { // 全部导出 \n        para.page = 1 \n        para.pageSize = 10000 \n      } \n      return para \n    }, \n    //获取码表集列表 \n    getStations (formValue) { \n      //this.total = 0 \n      //this.Stations = null \n      let para = this.getPostParam('1'); \n      this.listLoading = true; \n      getStationListPage(para).then((res) => { \n        this.total = res.data.response.dataCount; \n        this.Stations = res.data.response.data; \n        this.listLoading = false; \n      }); \n    }, \n    //获取全部列表 \n    exportAllData () { \n      let para = this.getPostParam('2'); \n      this.listLoading = true; \n      getStationListPage(para).then((res) => { \n        var allData = res.data.response.data; \n        this.$refs.cmToolbarExport.export2Excel(allData); \n        this.listLoading = false; \n      }); \n    }, \n    //删除 \n    handleDel () { \n      let row = this.currentRow; \n      if (!row) { \n        this.$message({ \n          message: \"请选择要删除的一行数据！\", \n          type: \"error\" \n        }); \n        return; \n      } \n      this.$confirm('确认删除该记录吗?', '提示', { \n        type: 'warning' \n      }).then(() => { \n        this.listLoading = true; \n        let para = { id: row.Id }; \n        removeStation(para).then((res) => { \n \n          if (util.isEmt.format(res)) { \n            this.listLoading = false; \n            return; \n          } \n          this.listLoading = false; \n          //NProgress.done(); \n          if (res.data.success) { \n            this.$message({ \n              message: '删除成功', \n              type: 'success' \n            }); \n \n          } else { \n            this.$message({ \n              message: res.data.msg, \n              type: 'error' \n            }); \n          } \n \n          this.getStations(); \n        }); \n      }).catch(() => { \n \n      }); \n    }, \n    //显示编辑界面 \n    handleEdit () { \n      let row = this.currentRow; \n      if (!row) { \n        this.$message({ \n          message: \"请选择要编辑的一行数据！\", \n          type: \"error\" \n        }); \n \n        return; \n      } \n      this.isAdd = false \n      this.dialogTitle = '编辑' \n      this.addFormVisible = true; \n      this.addForm = { \n      }; \n      debugger \n      this.addForm = Object.assign({}, row); \n    }, \n    //显示新增界面 \n    handleAdd () { \n      this.isAdd = true \n      this.dialogTitle = '新增' \n      this.addFormVisible = true; \n      this.addForm = { \n      }; \n    }, \n    // 更新数据 \n    SaveData (formName) { \n      this.submitDisabled = true \n \n      this.$refs.addForm.validate((valid) => { \n        if (valid) { \n          this.$confirm('确认提交吗？', '提示', {}).then(() => { \n            this.addLoading = true; \n            let para = Object.assign({}, this.addForm); \n            if (this.isAdd) {//新增 \n              addStation(para).then((res) => { \n \n                if (util.isEmt.format(res)) { \n                  this.addLoading = false; \n                  return; \n                } \n \n                if (res.data.success) { \n                  this.addLoading = false; \n                  //NProgress.done(); \n                  this.$message({ \n                    message: res.data.msg, \n                    type: 'success' \n                  }); \n                  this.$refs['addForm'].resetFields(); \n                  this.addFormVisible = false; \n                  this.getStations(); \n                } \n                else { \n                  this.addLoading = false; \n                  this.$message({ \n                    message: res.data.msg, \n                    type: 'error' \n                  }); \n                } \n \n              }); \n            } else {//编辑 \n              editStation(para).then((res) => { \n \n                if (util.isEmt.format(res)) { \n                  this.addLoading = false; \n                  return; \n                } \n                if (res.data.success) { \n                  this.addLoading = false; \n                  //NProgress.done(); \n                  this.$message({ \n                    message: res.data.msg, \n                    type: 'success' \n                  }); \n                  this.$refs['addForm'].resetFields(); \n                  this.addFormVisible = false; \n                  this.getStations(); \n                } \n                else { \n                  this.addLoading = false; \n                  this.$message({ \n                    message: res.data.msg, \n                    type: 'error' \n                  }); \n                } \n              }); \n            } \n          }); \n        } \n      }); \n    }, \n    selsChange: function (sels) { \n      this.sels = sels; \n    }, \n    //导出 \n    handleExport () { \n      this.currentPageData = this.Stations \n      this.$refs.cmToolbarExport.showPrintPage() \n    }, \n  }, \n  mounted () { \n    this.getStations(); \n \n    let routers = window.localStorage.router \n      ? JSON.parse(window.localStorage.router) \n      : []; \n    this.buttonList = getButtonList(this.$route.path, routers); \n \n  } \n} \n \n</script> \n \n<style lang=\"scss\" scoped> \n</style> \n"],"sourceRoot":"src\\views\\BasicData"}]}