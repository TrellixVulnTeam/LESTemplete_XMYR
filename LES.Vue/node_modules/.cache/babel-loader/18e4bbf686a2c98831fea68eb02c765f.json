{"remainingRequest":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js!C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\框架\\Blog.Admin-master\\src\\views\\BasicData\\MaterialManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\框架\\Blog.Admin-master\\src\\views\\BasicData\\MaterialManager.vue","mtime":1610851777437},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _Object$assign from \"C:\\\\\\u6846\\u67B6\\\\Blog.Admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from \"../../../util/date\";\nimport { getMaterialListPage, removeMaterial, editMaterial, addMaterial } from \"../../api/api\";\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\nexport default {\n  components: {\n    Toolbar: Toolbar\n  },\n  data: function data() {\n    return {\n      filters: {\n        name: \"\"\n      },\n      buttonList: [],\n      users: [],\n      statusList: [{\n        name: \"激活\",\n        value: true\n      }, {\n        name: \"禁用\",\n        value: false\n      }],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      currentRow: null,\n      addDialogFormVisible: false,\n      editFormVisible: false,\n      //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        MaterialCode: [{\n          required: true,\n          message: \"请输入物料编码\",\n          trigger: \"blur\"\n        }],\n        MaterialName: [{\n          required: true,\n          message: \"请输入物料名称\",\n          trigger: \"blur\"\n        }]\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        Creator: \"sys\",\n        LastModifier: \"sys\"\n      },\n      addFormVisible: false,\n      //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        MaterialCode: [{\n          required: true,\n          message: \"请输入物料编码\",\n          trigger: \"blur\"\n        }],\n        MaterialName: [{\n          required: true,\n          message: \"请输入物料名称\",\n          trigger: \"blur\"\n        }]\n      },\n      //新增界面数据\n      addForm: {\n        Creator: \"sys\",\n        LastModifier: \"sys\"\n      }\n    };\n  },\n  methods: {\n    selectCurrentRow: function selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    callFunction: function callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    //性别显示转换\n    formatEnabled: function formatEnabled(row, column) {\n      return row.Enabled ? \"正常\" : \"未知\";\n    },\n    formatCreateTime: function formatCreateTime(row, column) {\n      return !row.CreateTime || row.CreateTime == \"\" ? \"\" : util.formatDate.format(new Date(row.CreateTime), \"yyyy-MM-dd\");\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getList();\n    },\n    //获取用户列表\n    getList: function getList() {\n      var _this2 = this;\n\n      var _this = this;\n\n      var para = {\n        page: this.page,\n        key: this.filters.name\n      };\n      this.listLoading = true; //NProgress.start();\n\n      getMaterialListPage(para).then(function (res) {\n        _this2.total = res.data.response.dataCount;\n        _this2.users = res.data.response.data;\n        _this2.listLoading = false; //NProgress.done();\n      });\n    },\n    //删除\n    handleDel: function handleDel() {\n      var _this3 = this;\n\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n        type: \"warning\"\n      }).then(function () {\n        _this3.listLoading = true; //NProgress.start();\n\n        var para = {\n          id: row.Id\n        };\n        removeMaterial(para).then(function (res) {\n          if (util.isEmt.format(res)) {\n            _this3.listLoading = false;\n            return;\n          }\n\n          _this3.listLoading = false; //NProgress.done();\n\n          if (res.data.success) {\n            _this3.$message({\n              message: \"删除成功\",\n              type: \"success\"\n            });\n          } else {\n            _this3.$message({\n              message: res.data.msg,\n              type: \"error\"\n            });\n          }\n\n          _this3.getList();\n        });\n      }).catch(function () {});\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit() {\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.editFormVisible = true;\n      this.editForm = _Object$assign({}, row);\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: \"\",\n        Name: \"\",\n        Enabled: \"\"\n      };\n    },\n    //编辑\n    editSubmit: function editSubmit() {\n      var _this4 = this;\n\n      this.$refs.editForm.validate(function (valid) {\n        if (valid) {\n          _this4.$confirm(\"确认提交吗？\", \"提示\", {}).then(function () {\n            _this4.editLoading = true; //NProgress.start();\n\n            var para = _Object$assign({}, _this4.editForm);\n\n            para.birth = !para.birth || para.birth == \"\" ? util.formatDate.format(new Date(), \"yyyy-MM-dd\") : util.formatDate.format(new Date(para.birth), \"yyyy-MM-dd\");\n            editMaterial(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this4.editLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                _this4.editLoading = false; //NProgress.done();\n\n                _this4.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n\n                _this4.$refs[\"editForm\"].resetFields();\n\n                _this4.editFormVisible = false;\n\n                _this4.getList();\n              } else {\n                _this4.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function addSubmit() {\n      var _this5 = this;\n\n      var _this = this;\n\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this5.$confirm(\"确认提交吗？\", \"提示\", {}).then(function () {\n            _this5.addLoading = true; //NProgress.start();\n\n            var para = _Object$assign({}, _this5.addForm);\n\n            para.birth = !para.birth || para.birth == \"\" ? util.formatDate.format(new Date(), \"yyyy-MM-dd\") : util.formatDate.format(new Date(para.birth), \"yyyy-MM-dd\");\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              _this5.$message({\n                message: \"用户信息为空，先登录\",\n                type: \"error\"\n              });\n\n              _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n            }\n\n            addMaterial(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this5.addLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                _this5.addLoading = false; //NProgress.done();\n\n                _this5.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n\n                _this5.$refs[\"addForm\"].resetFields();\n\n                _this5.addFormVisible = false;\n\n                _this5.getList();\n              } else {\n                _this5.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      this.$message({\n        message: \"该功能未开放\",\n        type: \"warning\"\n      });\n    },\n    getButtonList2: function getButtonList2(routers) {\n      var _this6 = this;\n\n      var _this = this;\n\n      routers.forEach(function (element) {\n        var path = _this6.$route.path.toLowerCase();\n\n        if (element.path && element.path.toLowerCase() == path) {\n          _this.buttonList = element.children;\n          return;\n        } else if (element.children) {\n          _this.getButtonList(element.children);\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getList();\n    var routers = window.localStorage.router ? JSON.parse(window.localStorage.router) : []; //第一种写法，每个页面都需要写方法，但是可以做特性化处理\n    // this.getButtonList(routers);\n    //第二种写法，封装到 permissionRouter.js 中\n\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n};",{"version":3,"sources":["MaterialManager.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section>\n    <!--工具条-->\n    <toolbar :buttonList=\"buttonList\" @callFunction=\"callFunction\"></toolbar>\n\n    <!--列表-->\n    <el-table\n      :data=\"users\"\n      highlight-current-row\n      v-loading=\"listLoading\"\n      @current-change=\"selectCurrentRow\"\n      style=\"width: 100%;\"\n    >\n      <el-table-column type=\"index\" width=\"80\"></el-table-column>\n      <el-table-column prop=\"MaterialCode\" label=\"物料编号\" width sortable></el-table-column>\n      <el-table-column prop=\"MaterialName\" label=\"物料名称\" width sortable></el-table-column>\n      <el-table-column prop=\"CreateTime\" label=\"创建时间\" :formatter=\"formatCreateTime\" width sortable></el-table-column>\n      <el-table-column prop=\"Creator\" label=\"创建者\" width=\"\" sortable>\n      </el-table-column>\n      <!-- <el-table-column label=\"操作\" width=\"150\">\n        <template scope=\"scope\">\n          <el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>-->\n    </el-table>\n\n  \n\n    <!--编辑界面-->\n    <el-dialog\n      title=\"编辑\"\n      :visible.sync=\"editFormVisible\"\n      v-model=\"editFormVisible\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"editForm\" label-width=\"80px\" :rules=\"editFormRules\" ref=\"editForm\">\n       <el-form-item label=\"物料编号\" prop=\"Name\">\n          <el-input v-model=\"editForm.MaterialCode\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n          <el-form-item label=\"物料名称\" prop=\"Name\">\n          <el-input v-model=\"editForm.MaterialName\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!--新增界面-->\n    <el-dialog\n      title=\"新增\"\n      :visible.sync=\"addFormVisible\"\n      v-model=\"addFormVisible\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\n        <el-form-item label=\"物料编号\" prop=\"Name\">\n          <el-input v-model=\"addForm.MaterialCode\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n          <el-form-item label=\"物料名称\" prop=\"Name\">\n          <el-input v-model=\"addForm.MaterialName\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n  </section>\n</template>\n\n<script>\nimport util from \"../../../util/date\";\nimport { getMaterialListPage, removeMaterial, editMaterial, addMaterial } from \"../../api/api\";\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\n\nexport default {\n  components: { Toolbar },\n  data() {\n    return {\n      filters: {\n        name: \"\"\n      },\n      buttonList: [],\n      users: [],\n      statusList: [\n        { name: \"激活\", value: true },\n        { name: \"禁用\", value: false }\n      ],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [], //列表选中列\n      currentRow: null,\n      addDialogFormVisible: false,\n      editFormVisible: false, //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        MaterialCode: [{ required: true, message: \"请输入物料编码\", trigger: \"blur\" }],\n        MaterialName: [{ required: true, message: \"请输入物料名称\", trigger: \"blur\" }],\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n         Creator: \"sys\",\n        LastModifier: \"sys\"\n      },\n\n      addFormVisible: false, //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        MaterialCode: [{ required: true, message: \"请输入物料编码\", trigger: \"blur\" }],\n        MaterialName: [{ required: true, message: \"请输入物料名称\", trigger: \"blur\" }],\n      },\n      //新增界面数据\n      addForm: {\n        Creator: \"sys\",\n        LastModifier: \"sys\"\n      }\n    };\n  },\n  methods: {\n    selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    //性别显示转换\n    formatEnabled: function(row, column) {\n      return row.Enabled ? \"正常\" : \"未知\";\n    },\n    formatCreateTime: function(row, column) {\n      return !row.CreateTime || row.CreateTime == \"\"\n        ? \"\"\n        : util.formatDate.format(new Date(row.CreateTime), \"yyyy-MM-dd\");\n    },\n    handleCurrentChange(val) {\n      this.page = val;\n      this.getList();\n    },\n    //获取用户列表\n    getList() {\n      let _this = this;\n      let para = {\n        page: this.page,\n        key: this.filters.name\n      };\n      this.listLoading = true;\n      //NProgress.start();\n      getMaterialListPage(para).then(res => {\n        this.total = res.data.response.dataCount;\n        this.users = res.data.response.data;\n        this.listLoading = false;\n\n        //NProgress.done();\n      });\n    },\n    //删除\n    handleDel() {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n        type: \"warning\"\n      })\n        .then(() => {\n          this.listLoading = true;\n          //NProgress.start();\n          let para = { id: row.Id };\n          removeMaterial(para).then(res => {\n            if (util.isEmt.format(res)) {\n              this.listLoading = false;\n              return;\n            }\n            this.listLoading = false;\n            //NProgress.done();\n            if (res.data.success) {\n              this.$message({\n                message: \"删除成功\",\n                type: \"success\"\n              });\n            } else {\n              this.$message({\n                message: res.data.msg,\n                type: \"error\"\n              });\n            }\n\n            this.getList();\n          });\n        })\n        .catch(() => {});\n    },\n    //显示编辑界面\n    handleEdit() {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n\n      this.editFormVisible = true;\n      this.editForm = Object.assign({}, row);\n    },\n    //显示新增界面\n    handleAdd() {\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: \"\",\n        Name: \"\",\n        Enabled: \"\"\n      };\n    },\n    //编辑\n    editSubmit: function() {\n      this.$refs.editForm.validate(valid => {\n        if (valid) {\n          this.$confirm(\"确认提交吗？\", \"提示\", {}).then(() => {\n            this.editLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.editForm);\n\n            para.birth =\n              !para.birth || para.birth == \"\"\n                ? util.formatDate.format(new Date(), \"yyyy-MM-dd\")\n                : util.formatDate.format(new Date(para.birth), \"yyyy-MM-dd\");\n\n            editMaterial(para).then(res => {\n              if (util.isEmt.format(res)) {\n                this.editLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                this.editLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n                this.$refs[\"editForm\"].resetFields();\n                this.editFormVisible = false;\n                this.getList();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function() {\n      let _this = this;\n      this.$refs.addForm.validate(valid => {\n        if (valid) {\n          this.$confirm(\"确认提交吗？\", \"提示\", {}).then(() => {\n            this.addLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.addForm);\n            para.birth =\n              !para.birth || para.birth == \"\"\n                ? util.formatDate.format(new Date(), \"yyyy-MM-dd\")\n                : util.formatDate.format(new Date(para.birth), \"yyyy-MM-dd\");\n\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              this.$message({\n                message: \"用户信息为空，先登录\",\n                type: \"error\"\n              });\n              _this.$router.replace(\n                _this.$route.query.redirect ? _this.$route.query.redirect : \"/\"\n              );\n            }\n\n            addMaterial(para).then(res => {\n              if (util.isEmt.format(res)) {\n                this.addLoading = false;\n                return;\n              }\n              if (res.data.success) {\n                this.addLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n                this.$refs[\"addForm\"].resetFields();\n                this.addFormVisible = false;\n                this.getList();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    selsChange: function(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function() {\n      this.$message({\n        message: \"该功能未开放\",\n        type: \"warning\"\n      });\n    },\n    getButtonList2(routers) {\n      let _this = this;\n      routers.forEach(element => {\n        let path = this.$route.path.toLowerCase();\n        if (element.path && element.path.toLowerCase() == path) {\n          _this.buttonList = element.children;\n          return;\n        } else if (element.children) {\n          _this.getButtonList(element.children);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.getList();\n\n    let routers = window.localStorage.router\n      ? JSON.parse(window.localStorage.router)\n      : [];\n    //第一种写法，每个页面都需要写方法，但是可以做特性化处理\n    // this.getButtonList(routers);\n    \n    //第二种写法，封装到 permissionRouter.js 中\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n};\n</script>\n\n<style scoped>\n</style>\n"],"sourceRoot":"src\\views\\BasicData"}]}