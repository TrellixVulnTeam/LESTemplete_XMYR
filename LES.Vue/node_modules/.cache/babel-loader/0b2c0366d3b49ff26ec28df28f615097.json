{"remainingRequest":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js!C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\框架\\Blog.Admin-master\\src\\views\\Permission\\Assign.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\框架\\Blog.Admin-master\\src\\views\\Permission\\Assign.vue","mtime":1610332596000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _JSON$stringify from \"C:\\\\\\u6846\\u67B6\\\\Blog.Admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from '../../../util/date';\nimport { getRoleListPage, getPermissionTree, getPermissionIds as _getPermissionIds, addRolePermission } from '../../api/api';\nvar id = 1000;\nexport default {\n  data: function data() {\n    var data = [];\n    return {\n      roles: [],\n      roleid: 0,\n      data5: [],\n      btns: [],\n      assigns: [],\n      checked1: false,\n      loadingSaveStr: '保存',\n      loadingSave: false,\n      assignBtns: [],\n      defaultProps: {\n        children: 'children',\n        label: 'label',\n        btns: 'btns'\n      },\n      selectedPermissions: [],\n      currentRoleCode: \"\",\n      stores: {\n        role: {\n          data: []\n        },\n        permissionTree: {\n          data: []\n        }\n      },\n      buttonProps: {\n        type: \"default\",\n        size: \"small\"\n      },\n      selectRole: {},\n      menuData: [],\n      menuSelections: [],\n      menuLoading: false,\n      authLoading: false,\n      checkAll: false,\n      currentRoleMenus: []\n    };\n  },\n  methods: {\n    //性别显示转换\n    formatEnabled: function formatEnabled(row, column) {\n      return row.Enabled ? '正常' : '未知';\n    },\n    formatCreateTime: function formatCreateTime(row, column) {\n      return !row.CreateTime || row.CreateTime == '' ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\n    },\n    //获取角色列表\n    getRoles: function getRoles() {\n      var _this2 = this;\n\n      getRoleListPage().then(function (res) {\n        _this2.roles = res.data.response.data;\n\n        _this2.getPermissions();\n      });\n    },\n    //获取菜单树\n    getPermissions: function getPermissions() {\n      var _this3 = this;\n\n      var _this = this;\n\n      var para = {\n        needbtn: false\n      };\n      getPermissionTree(para).then(function (res) {\n        _this.loadingSave = false;\n        _this.loadingSaveStr = '保存';\n        _this3.data = res.data.response.children;\n        _this3.data5 = JSON.parse(_JSON$stringify(_this3.data));\n      });\n    },\n    //获取菜单Id，通过角色id\n    getPermissionIds: function getPermissionIds(rid) {\n      var _this4 = this;\n\n      var _this = this;\n\n      this.assigns = [];\n      this.assignBtns = [];\n      var para = {\n        rid: rid\n      };\n\n      _getPermissionIds(para).then(function (res) {\n        _this.loadingSave = false;\n        _this.loadingSaveStr = '保存';\n\n        _this4.$refs.tree.setCheckedKeys(res.data.response.permissionids);\n\n        _this4.assignBtns = res.data.response.assignbtns;\n      });\n    },\n    operate: function operate(id) {\n      this.loadingSave = true;\n      this.loadingSaveStr = '加载中...';\n      this.roleid = id;\n      this.getPermissionIds(id);\n    },\n    saveAssign: function saveAssign() {\n      var _this5 = this;\n\n      var _this = this;\n\n      this.loadingSave = true;\n      this.loadingSaveStr = '保存中...'; //console.log(this.$refs.tree.getCheckedKeys());\n      //console.log(this.assignBtns)\n\n      var pids = this.$refs.tree.getCheckedKeys();\n\n      try {\n        if (this.assignBtns.length > 0) {\n          for (var i = 0; i < this.assignBtns.length; i++) {\n            // let assginbtn = this.assignBtns[i].split(\"_\")[1];\n            var assginbtn = this.assignBtns[i];\n\n            if (assginbtn && assginbtn > 0) {\n              pids.push(assginbtn);\n            }\n          }\n        }\n      } catch (e) {}\n\n      var para = {\n        pids: pids,\n        rid: this.roleid\n      };\n\n      if (para.rid > 0 && para.pids.length > 0) {\n        addRolePermission(para).then(function (res) {\n          _this.loadingSave = false;\n          _this.loadingSaveStr = '保存';\n\n          if (res.data.success) {\n            _this5.$message({\n              message: res.data.msg,\n              type: 'success'\n            });\n\n            var _para = {\n              rid: _this5.roleid\n            };\n\n            _getPermissionIds(_para).then(function (res) {\n              _this5.$refs.tree.setCheckedKeys(res.data.response.permissionids);\n\n              _this5.assignBtns = res.data.response.assignbtns;\n\n              _this5.$message({\n                message: \"数据更新成功\",\n                type: 'success'\n              });\n            });\n          } else {\n            _this5.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n        });\n      } else {\n        this.loadingSaveStr = '保存';\n        this.loadingSave = false;\n        this.$message({\n          message: \"参数错误\",\n          type: 'error'\n        });\n      }\n    },\n    append: function append(data) {\n      var newChild = {\n        id: id++,\n        label: 'testtest',\n        children: []\n      };\n\n      if (!data.children) {\n        this.$set(data, 'children', []);\n      }\n\n      data.children.push(newChild);\n    },\n    remove: function remove(node, data) {\n      var parent = node.parent;\n      var children = parent.data.children || parent.data;\n      var index = children.findIndex(function (d) {\n        return d.id === data.id;\n      });\n      children.splice(index, 1);\n    },\n    // 获取数据\n    findTreeData: function findTreeData() {\n      var _this6 = this;\n\n      this.menuLoading = true;\n      this.$api.menu.findMenuTree().then(function (res) {\n        _this6.menuData = res.data;\n        _this6.menuLoading = false;\n      });\n    },\n    // 角色选择改变监听\n    handleRoleSelectChange: function handleRoleSelectChange(val) {\n      var _this7 = this;\n\n      if (val == null || val.val == null) {\n        return;\n      }\n\n      this.selectRole = val.val;\n      this.$api.role.findRoleMenus({\n        'roleId': val.val.id\n      }).then(function (res) {\n        _this7.currentRoleMenus = res.data;\n\n        _this7.$refs.menuTree.setCheckedNodes(res.data);\n      });\n    },\n    // 树节点选择监听\n    handleMenuCheckChange: function handleMenuCheckChange(data, check, subCheck) {\n      var _this8 = this;\n\n      if (check) {\n        // 节点选中时同步选中父节点\n        var parentId = data.parentId;\n        this.$refs.menuTree.setChecked(parentId, true, false);\n      } else {\n        // 节点取消选中时同步取消选中子节点\n        if (data.children != null) {\n          data.children.forEach(function (element) {\n            _this8.$refs.menuTree.setChecked(element.id, false, false);\n          });\n        }\n      }\n    },\n    // 递归全选\n    checkAllMenu: function checkAllMenu(menuData, allMenus) {\n      var _this9 = this;\n\n      menuData.forEach(function (menu) {\n        allMenus.push(menu);\n\n        if (menu.children) {\n          _this9.checkAllMenu(menu.children, allMenus);\n        }\n      });\n    },\n    // 角色菜单授权提交\n    submitAuthForm: function submitAuthForm() {\n      var _this10 = this;\n\n      var roleId = this.selectRole.id;\n\n      if ('admin' == this.selectRole.name) {\n        this.$message({\n          message: '超级管理员拥有所有菜单权限，不允许修改！',\n          type: 'error'\n        });\n        return;\n      }\n\n      this.authLoading = true;\n      var checkedNodes = this.$refs.menuTree.getCheckedNodes(false, true);\n      var roleMenus = [];\n\n      for (var i = 0, len = checkedNodes.length; i < len; i++) {\n        var roleMenu = {\n          roleId: roleId,\n          menuId: checkedNodes[i].id\n        };\n        roleMenus.push(roleMenu);\n      }\n\n      this.$api.role.saveRoleMenus(roleMenus).then(function (res) {\n        if (res.code == 200) {\n          _this10.$message({\n            message: '操作成功',\n            type: 'success'\n          });\n        } else {\n          _this10.$message({\n            message: '操作失败, ' + res.msg,\n            type: 'error'\n          });\n        }\n\n        _this10.authLoading = false;\n      });\n    },\n    renderContent: function renderContent(h, _ref) {\n      var node = _ref.node,\n          data = _ref.data,\n          store = _ref.store;\n      return h(\"div\", {\n        \"class\": \"column-container\"\n      }, [h(\"span\", {\n        \"style\": \"text-algin:center;margin-right:80px;\"\n      }, [data.label]), h(\"span\", {\n        \"style\": \"text-algin:center;margin-right:80px;\"\n      }, [h(\"el-tag\", {\n        \"attrs\": {\n          \"type\": data.isbtn ? 'success' : 'info',\n          \"size\": \"small\"\n        }\n      }, [!data.isbtn ? '菜单' : '按钮'])])]);\n    },\n    // 时间格式化\n    dateFormat: function dateFormat(row, column, cellValue, index) {\n      return format(row[column.property]);\n    }\n  },\n  mounted: function mounted() {\n    this.loadingSave = true;\n    this.loadingSaveStr = '加载中...';\n    this.getRoles(); // this.getPermissions();\n  }\n};",{"version":3,"sources":["Assign.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section>\n        <!--工具条-->\n        <el-col :span=\"8\" class=\"toolbar roles\">\n            <el-card class=\"box-card\">\n                <div slot=\"header\" class=\"clearfix\">\n                    <span>权限</span>\n                    <el-button @click=\"getRoles\" style=\"float: right; padding: 3px 0\" type=\"text\">刷新</el-button>\n                </div>\n                <div v-for=\"o in roles\" :key=\"o.Id\" @click=\"operate(o.Id)\" :class=\"o.Id==roleid ? 'active':''\"\n                     class=\"text item role-item\">\n                    {{o.Name }}\n                </div>\n            </el-card>\n\n        </el-col>\n        <el-col :span=\"16\" class=\"toolbar perms morechildren\">\n            <el-card class=\"box-card\">\n                <div slot=\"header\" class=\"clearfix\">\n                    <span>菜单</span>\n                    <el-button :loading=\"loadingSave\" @click=\"saveAssign\" style=\"float: right; padding: 3px 0\" type=\"text\">{{loadingSaveStr}}</el-button>\n                </div>\n                <div class=\"block\">\n                    <!--<el-tree :data=\"data5\" size=\"mini\" show-checkbox node-key=\"value\" :props=\"defaultProps\"-->\n                             <!--style=\"width: 100%;pading-top:20px;\" default-expand-all ref=\"menuTree\" :render-content=\"renderContent\"-->\n                              <!--element-loading-text=\"拼命加载中\" :check-strictly=\"true\"-->\n                             <!--@check-change=\"handleMenuCheckChange\">-->\n                    <!--</el-tree>-->\n\n\n                    <el-tree\n                            :data=\"data5\"\n                            show-checkbox\n                            node-key=\"value\"\n                            ref=\"tree\"\n                            default-expand-all\n                            :expand-on-click-node=\"true\"\n                            :check-strictly=\"true\"\n                    >\n                        <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n                        <span>{{ node.label }}</span>\n                        <span>\n                        <el-checkbox-group v-model=\"assignBtns\">\n                        <el-checkbox v-for=\"btn in data.btns\" :key=\"btn.value\"\n                                     :label=\"btn.value.toString()\">\n                                     {{btn.label}}\n                                     </el-checkbox>\n                        </el-checkbox-group>\n\n                        </span>\n                        </span>\n                    </el-tree>\n                </div>\n            </el-card>\n\n        </el-col>\n\n\n    </section>\n</template>\n\n<script>\n    import util from '../../../util/date'\n    import {getRoleListPage, getPermissionTree, getPermissionIds, addRolePermission} from '../../api/api';\n\n    let id = 1000;\n\n    export default {\n        data() {\n\n            const data = [];\n            return {\n                roles: [],\n                roleid: 0,\n                data5: [],\n                btns: [],\n                assigns: [],\n                checked1: false,\n                loadingSaveStr:'保存',\n                loadingSave:false,\n                assignBtns: [],\n                defaultProps: {\n                    children: 'children',\n                    label: 'label',\n                    btns: 'btns',\n                },\n                selectedPermissions: [],\n                currentRoleCode: \"\",\n                stores: {\n                    role: {\n                        data: []\n                    },\n                    permissionTree: {\n                        data: []\n                    }\n                },\n                buttonProps: {\n                    type: \"default\",\n                    size: \"small\"\n                }\n\n                ,\n                selectRole: {},\n                menuData: [],\n                menuSelections: [],\n                menuLoading: false,\n                authLoading: false,\n                checkAll: false,\n                currentRoleMenus: [],\n            }\n        },\n        methods: {\n            //性别显示转换\n            formatEnabled: function (row, column) {\n                return row.Enabled ? '正常' : '未知';\n            },\n            formatCreateTime: function (row, column) {\n                return (!row.CreateTime || row.CreateTime == '') ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\n            },\n            //获取角色列表\n            getRoles() {\n                getRoleListPage().then((res) => {\n                    this.roles = res.data.response.data;\n                    this.getPermissions();\n                });\n            },\n            //获取菜单树\n            getPermissions() {\n                let _this=this;\n                let para = {needbtn: false}\n                getPermissionTree(para).then((res) => {\n                    _this.loadingSave=false;\n                    _this.loadingSaveStr='保存';\n                    this.data = res.data.response.children;\n                    this.data5 = JSON.parse(JSON.stringify(this.data));\n                });\n            },\n            //获取菜单Id，通过角色id\n            getPermissionIds(rid) {\n                let _this=this;\n                this.assigns = [];\n                this.assignBtns = [];\n                let para = {rid: rid}\n                getPermissionIds(para).then((res) => {\n\n                    _this.loadingSave=false;\n                    _this.loadingSaveStr='保存';\n                    this.$refs.tree.setCheckedKeys(res.data.response.permissionids);\n                    this.assignBtns = res.data.response.assignbtns;\n\n                });\n            },\n            operate(id) {\n\n                this.loadingSave=true;\n                this.loadingSaveStr='加载中...';\n                this.roleid = id;\n                this.getPermissionIds(id);\n            },\n            saveAssign() {\n\n                let _this=this;\n                this.loadingSave=true;\n                this.loadingSaveStr='保存中...';\n                //console.log(this.$refs.tree.getCheckedKeys());\n                //console.log(this.assignBtns)\n                let pids = this.$refs.tree.getCheckedKeys();\n                try {\n                    if (this.assignBtns.length > 0) {\n                        for (let i = 0; i < this.assignBtns.length; i++) {\n                            // let assginbtn = this.assignBtns[i].split(\"_\")[1];\n                            let assginbtn = this.assignBtns[i];\n                            if (assginbtn && assginbtn > 0) {\n                                pids.push(assginbtn);\n                            }\n                        }\n                    }\n                } catch (e) {\n\n                }\n                let para = {pids: pids, rid: this.roleid}\n                if (para.rid > 0 && para.pids.length > 0) {\n                    addRolePermission(para).then((res) => {\n\n                        _this.loadingSave=false;\n                        _this.loadingSaveStr='保存';\n\n                        if (res.data.success) {\n\n                            this.$message({\n                                message: res.data.msg,\n                                type: 'success'\n                            });\n\n                            let para = {rid: this.roleid}\n                            getPermissionIds(para).then((res) => {\n\n                                this.$refs.tree.setCheckedKeys(res.data.response.permissionids);\n                                this.assignBtns = res.data.response.assignbtns;\n                                this.$message({\n                                    message: \"数据更新成功\",\n                                    type: 'success'\n                                });\n                            });\n                        } else {\n                            this.$message({\n                                message: res.data.msg,\n                                type: 'error'\n                            });\n                        }\n                    });\n                } else {\n\n                    this.loadingSaveStr='保存';\n                    this.loadingSave=false;\n                    this.$message({\n                        message: \"参数错误\",\n                        type: 'error'\n                    });\n                }\n            },\n            append(data) {\n                const newChild = {id: id++, label: 'testtest', children: []};\n                if (!data.children) {\n                    this.$set(data, 'children', []);\n                }\n                data.children.push(newChild);\n            },\n\n            remove(node, data) {\n                const parent = node.parent;\n                const children = parent.data.children || parent.data;\n                const index = children.findIndex(d => d.id === data.id);\n                children.splice(index, 1);\n            },\n            // 获取数据\n            findTreeData: function () {\n                this.menuLoading = true\n                this.$api.menu.findMenuTree().then((res) => {\n                    this.menuData = res.data\n                    this.menuLoading = false\n                })\n            },\n            // 角色选择改变监听\n            handleRoleSelectChange(val) {\n                if(val == null || val.val == null) {\n                    return\n                }\n                this.selectRole = val.val\n                this.$api.role.findRoleMenus({'roleId':val.val.id}).then((res) => {\n                    this.currentRoleMenus = res.data\n                    this.$refs.menuTree.setCheckedNodes(res.data)\n                })\n            },\n            // 树节点选择监听\n            handleMenuCheckChange(data, check, subCheck) {\n                if(check) {\n                    // 节点选中时同步选中父节点\n                    let parentId = data.parentId\n                    this.$refs.menuTree.setChecked(parentId, true, false)\n                } else {\n                    // 节点取消选中时同步取消选中子节点\n                    if(data.children != null) {\n                        data.children.forEach(element => {\n                            this.$refs.menuTree.setChecked(element.id, false, false)\n                        });\n                    }\n                }\n            },\n        // 递归全选\n        checkAllMenu(menuData, allMenus) {\n            menuData.forEach(menu => {\n                allMenus.push(menu)\n                if(menu.children) {\n                    this.checkAllMenu(menu.children, allMenus)\n                }\n            });\n        },\n        // 角色菜单授权提交\n        submitAuthForm() {\n            let roleId = this.selectRole.id\n            if('admin' == this.selectRole.name) {\n                this.$message({message: '超级管理员拥有所有菜单权限，不允许修改！', type: 'error'})\n                return\n            }\n            this.authLoading = true\n            let checkedNodes = this.$refs.menuTree.getCheckedNodes(false, true)\n            let roleMenus = []\n            for(let i=0, len=checkedNodes.length; i<len; i++) {\n                let roleMenu = { roleId:roleId, menuId:checkedNodes[i].id }\n                roleMenus.push(roleMenu)\n            }\n            this.$api.role.saveRoleMenus(roleMenus).then((res) => {\n                if(res.code == 200) {\n                    this.$message({ message: '操作成功', type: 'success' })\n                } else {\n                    this.$message({message: '操作失败, ' + res.msg, type: 'error'})\n                }\n                this.authLoading = false\n            })\n        },\n        renderContent(h, { node, data, store }) {\n            return (\n                <div class=\"column-container\">\n                <span style=\"text-algin:center;margin-right:80px;\">{data.label}</span>\n            <span style=\"text-algin:center;margin-right:80px;\">\n                <el-tag type={data.isbtn ?'success':'info'} size=\"small\">\n            {!data.isbtn ?'菜单':'按钮'}\n        </el-tag>\n            </span>\n\n            </div>);\n        },\n        // 时间格式化\n        dateFormat: function (row, column, cellValue, index){\n            return format(row[column.property])\n        }\n\n\n        },\n        mounted() {\n            this.loadingSave=true;\n            this.loadingSaveStr='加载中...';\n            this.getRoles();\n\n            // this.getPermissions();\n        }\n    }\n\n</script>\n\n<style>\n    .role-item {\n        cursor: pointer;\n        padding: 10px;\n    }\n\n    .role-item.active {\n        background: #ebf5ff;\n    }\n\n    .role-item:hover {\n        background: #ebf5ff;\n    }\n\n    .custom-tree-node {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        font-size: 14px;\n        padding-right: 8px;\n    }\n\n    .text {\n        font-size: 14px;\n    }\n\n    .clearfix:before,\n    .clearfix:after {\n        display: table;\n        content: \"\";\n    }\n\n    .clearfix:after {\n        clear: both\n    }\n\n    .box-card {\n        width: 90%;\n    }\n\n\n    .morechildren .el-checkbox{\n        margin-right: 5px !important;\n        float: left;\n    }\n    .morechildren .el-checkbox-group{\n        margin-left: 50px;\n        padding: 5px;\n    }\n    .morechildren .el-tree-node__content{\n        height: auto !important;\n    }\n</style>\n"],"sourceRoot":"src\\views\\Permission"}]}