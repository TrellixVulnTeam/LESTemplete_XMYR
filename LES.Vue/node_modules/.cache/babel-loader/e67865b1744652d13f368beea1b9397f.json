{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\Station.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\Station.vue","mtime":1612254951436},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"D:\\\\\\u6570\\u701B\\u4FE1\\u606F\\u79D1\\u6280\\\\\\u516C\\u53F8\\u9879\\u76EE\\\\\\u5E7F\\u5DDE\\u897F\\u95E8\\u5B50\\u539F\\u6750\\u6599\\u7ACB\\u4F53\\u5E93\\\\\\u4F4E\\u538B\\u7EBF\\u5708\\\\src\\\\LES.Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from '../../../util/date';\nimport { getStationListPage, removeStation, editStation, addStation, getCodeItemsBySetCode as _getCodeItemsBySetCode } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/ToolbarButton\";\nimport SearchForm from \"../../components/SearchForm\";\nimport ToolbarExport from \"../../components/ToolbarExport\";\nimport { formatDate, setformOptionsNewValue } from '../../../util/tools';\nimport { isShowOperatorButtonCommon, isNeedShowOperatorColumn } from '../../../util/common';\nexport default {\n  components: {\n    Toolbar: Toolbar,\n    SearchForm: SearchForm,\n    ToolbarExport: ToolbarExport\n  },\n  //注册子组件 \n  data: function data() {\n    return {\n      //导出组件相关 \n      exportFileName: '站点管理信息',\n      //要导出的文件名 \n      currentPageData: [],\n      //当前页面的列表数据 \n      tHeader: ['站点编号', '站点名称', '所属产线', '所属产线', '创建者', '修改者', '修改时间'],\n      //当前页面列表的表头汉字数组，导出用 \n      filterVal: ['StationCode', 'StationName', 'AllowLine', 'Remark', 'CreateBy', 'ModifyBy', 'ModifyTime'],\n      //当前页面列表的表头属性数组，导出用 \n      //搜索框相关 \n      commonSearchOptionSet: \"精准\",\n      //通用查询的默认配置,\"模糊\"或\"精准\"\n      controlStyle: {\n        //设置搜索控件的长度等样式\n        width: '400px'\n      },\n      labelWidth: \"90px\",\n      //显示Label的宽度\n      drawerSize: \"650px\",\n      //drawner宽度设置 \n      searchFormInputPlaceholder: '请输入站点编号/站点名称',\n      //要给子搜索组件传递的值\n      searchFormInputAttrs: ['StationCode', 'StationName'],\n      //要给子搜索组件传递的属性名 \n      formOptions: [{\n        label: '站点编号',\n        prop: 'StationCode',\n        element: 'el-input'\n      }, {\n        label: '站点名称',\n        prop: 'StationName',\n        element: 'el-input'\n      }, {\n        label: '所属产线',\n        prop: 'AllowLine',\n        element: 'el-select',\n        options: []\n      }, {\n        label: '备注',\n        prop: 'Remark',\n        element: 'el-input'\n      }, {\n        label: '创建者',\n        prop: 'CreateBy',\n        element: 'el-input'\n      }, {\n        label: '修改者',\n        prop: 'ModifyBy',\n        element: 'el-input'\n      }, {\n        label: '修改时间',\n        prop: 'ModifyTime',\n        element: 'el-date-picker'\n      }],\n      isShowOperatorColumn: true,\n      // 是否显示【操作】列,true显示 false不显示\n      tableHeight: window.innerHeight - 180,\n      // 控制表格的高度\n      workshopCodeItems: [],\n      //车间的码表集合\n      isAdd: false,\n      // 是否是新增 \n      dialogTitle: '',\n      filters: {\n        name: ''\n      },\n      Stations: [],\n      roles: [],\n      total: 0,\n      buttonList: [],\n      currentRow: null,\n      page: 1,\n      pageSize: 10,\n      listLoading: false,\n      sels: [],\n      //列表选中列 \n      addFormVisible: false,\n      //新增界面是否显示 \n      addLoading: false,\n      //新增界面数据 \n      addForm: {}\n    };\n  },\n  methods: {\n    //是否显示某个操作按钮\n    isShowOperatorButton: function isShowOperatorButton(flag) {\n      return isShowOperatorButtonCommon(this.isShowOperatorColumn, flag, this.buttonList);\n    },\n    // 设置索引 \n    indexMethod: function indexMethod(index) {\n      return (this.page - 1) * this.pageSize + 1 + index;\n    },\n    // 时间格式化 \n    formatterDateTime: function formatterDateTime(row, column, cellValue, index) {\n      if (cellValue === null || cellValue === '') {\n        return '';\n      }\n\n      var NewDtime = new Date(Date.parse(cellValue));\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss');\n    },\n    selectCurrentRow: function selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    callFunction: function callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getStations();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.getStations();\n    },\n\n    /** \n     * 获取请求参数 \n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据 \n     */\n    getPostParam: function getPostParam(flag) {\n      var para = _Object$assign({}, this.$refs.ChildSearchForm.getFormData());\n\n      para.page = this.page;\n      para.pageSize = this.pageSize;\n\n      if (flag === '2') {\n        // 全部导出 \n        para.page = 1;\n        para.pageSize = 10000;\n      }\n\n      return para;\n    },\n    //获取码表集列表 \n    getStations: function getStations(formValue) {\n      var _this = this;\n\n      //this.total = 0 \n      //this.Stations = null \n      var para = this.getPostParam('1');\n      this.listLoading = true;\n      getStationListPage(para).then(function (res) {\n        _this.total = res.data.response.dataCount;\n        _this.Stations = res.data.response.data;\n        _this.listLoading = false;\n      });\n    },\n    //通过代码集获取代码项集合 \n    getCodeItemsBySetCode: function getCodeItemsBySetCode() {\n      var _this2 = this;\n\n      var para = {\n        setCode: '002' // 车间码表集\n\n      };\n\n      _getCodeItemsBySetCode(para).then(function (res) {\n        _this2.workshopCodeItems = res.data.response; //给搜索框中的select控件赋值\n\n        var propValue = \"AllowLine\";\n        _this2.formOptions = setformOptionsNewValue(_this2.formOptions, propValue, _this2.workshopCodeItems);\n\n        _this2.$refs.ChildSearchForm.setNewFormOptions(_this2.formOptions);\n      });\n    },\n    //获取全部列表 \n    exportAllData: function exportAllData() {\n      var _this3 = this;\n\n      var para = this.getPostParam('2');\n      this.listLoading = true;\n      getStationListPage(para).then(function (res) {\n        var allData = res.data.response.data;\n\n        _this3.$refs.cmToolbarExport.export2Excel(allData);\n\n        _this3.listLoading = false;\n      });\n    },\n    //删除 \n    handleDel: function handleDel(selRow) {\n      var _this4 = this;\n\n      var row = {};\n\n      if (selRow && selRow != undefined) {\n        this.currentRow = selRow;\n      }\n\n      row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this4.listLoading = true;\n        var para = {\n          id: row.Id\n        };\n        removeStation(para).then(function (res) {\n          if (util.isEmt.format(res)) {\n            _this4.listLoading = false;\n            return;\n          }\n\n          _this4.listLoading = false; //NProgress.done(); \n\n          if (res.data.success) {\n            _this4.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n          } else {\n            _this4.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          _this4.getStations();\n        });\n      }).catch(function () {});\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit(selRow) {\n      var row = {};\n\n      if (selRow && selRow != undefined) {\n        this.currentRow = selRow;\n      }\n\n      row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.isAdd = false;\n      this.dialogTitle = '编辑';\n      this.addFormVisible = true;\n      this.addForm = {};\n      debugger;\n      this.addForm = _Object$assign({}, row);\n    },\n    //显示新增界面 \n    handleAdd: function handleAdd() {\n      this.isAdd = true;\n      this.dialogTitle = '新增';\n      this.addFormVisible = true;\n      this.addForm = {};\n    },\n    // 更新数据 \n    SaveData: function SaveData(formName) {\n      var _this5 = this;\n\n      this.submitDisabled = true;\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this5.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this5.addLoading = true;\n\n            var para = _Object$assign({}, _this5.addForm);\n\n            if (_this5.isAdd) {\n              //新增 \n              addStation(para).then(function (res) {\n                if (util.isEmt.format(res)) {\n                  _this5.addLoading = false;\n                  return;\n                }\n\n                if (res.data.success) {\n                  _this5.addLoading = false; //NProgress.done(); \n\n                  _this5.$message({\n                    message: res.data.msg,\n                    type: 'success'\n                  });\n\n                  _this5.$refs['addForm'].resetFields();\n\n                  _this5.addFormVisible = false;\n\n                  _this5.getStations();\n                } else {\n                  _this5.addLoading = false;\n\n                  _this5.$message({\n                    message: res.data.msg,\n                    type: 'error'\n                  });\n                }\n              });\n            } else {\n              //编辑 \n              editStation(para).then(function (res) {\n                if (util.isEmt.format(res)) {\n                  _this5.addLoading = false;\n                  return;\n                }\n\n                if (res.data.success) {\n                  _this5.addLoading = false; //NProgress.done(); \n\n                  _this5.$message({\n                    message: res.data.msg,\n                    type: 'success'\n                  });\n\n                  _this5.$refs['addForm'].resetFields();\n\n                  _this5.addFormVisible = false;\n\n                  _this5.getStations();\n                } else {\n                  _this5.addLoading = false;\n\n                  _this5.$message({\n                    message: res.data.msg,\n                    type: 'error'\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //导出 \n    handleExport: function handleExport() {\n      this.currentPageData = this.Stations;\n      this.$refs.cmToolbarExport.showPrintPage();\n    }\n  },\n  mounted: function mounted() {\n    this.getCodeItemsBySetCode();\n    this.getStations();\n    var routers = window.localStorage.router ? JSON.parse(window.localStorage.router) : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n    var isShow = isNeedShowOperatorColumn(this.buttonList); //控制是否要显示【操作】列\n\n    this.isShowOperatorColumn = isShow;\n  }\n};",{"version":3,"sources":["Station.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section>\n    <!--工具条-->\n    <el-col :span=\"24\"\n            class=\"toolbar\"\n            style=\"padding-bottom: 0px;\">\n      <el-form :inline=\"true\"\n               @submit.native.prevent>\n        <toolbar :buttonList=\"buttonList\"\n                 @callFunction=\"callFunction\">\n        </toolbar>\n        <!-- 搜索 -->\n        <SearchForm :formOptions=\"formOptions\"\n                    :commonSearchOptionSet=\"commonSearchOptionSet\"\n                    :drawerSize=\"drawerSize\"\n                    :labelWidth=\"labelWidth\"\n                    :controlStyle=\"controlStyle\"\n                    :searchFormInputPlaceholder=\"searchFormInputPlaceholder\"\n                    :searchFormInputAttrs=\"searchFormInputAttrs\"\n                    ref=\"ChildSearchForm\"\n                    @onSearch=\"getStations\" />\n      </el-form>\n    </el-col>\n\n    <!--列表-->\n    <el-table :data=\"Stations\"\n              :height=\"tableHeight\"\n              highlight-current-row\n              size=\"small\"\n              @current-change=\"selectCurrentRow\"\n              v-loading=\"listLoading\"\n              @selection-change=\"selsChange\"\n              style=\"width: 99%;\">\n      <el-table-column type=\"index\"\n                       :index=\"indexMethod\"\n                       label=\"#\"\n                       align=\"center\"\n                       width=\"50\">\n      </el-table-column>\n      <el-table-column prop=\"StationCode\"\n                       label=\"站点编号\"\n                       align=\"center\">\n      </el-table-column>\n      <el-table-column prop=\"StationName\"\n                       label=\"站点名称\"\n                       align=\"center\">\n      </el-table-column>\n      <el-table-column prop=\"AllowLineName\"\n                       label=\"所属产线\"\n                       align=\"center\">\n      </el-table-column>\n      <el-table-column prop=\"Remark\"\n                       label=\"备注\"\n                       align=\"center\">\n      </el-table-column>\n      <el-table-column prop=\"CreateBy\"\n                       label=\"创建者\"\n                       align=\"center\">\n      </el-table-column>\n      <el-table-column prop=\"CreateTime\"\n                       label=\"创建时间\"\n                       width=\"150\"\n                       align=\"center\"\n                       :formatter=\"formatterDateTime\">\n      </el-table-column>\n      <el-table-column prop=\"ModifyBy\"\n                       label=\"修改者\"\n                       align=\"center\">\n      </el-table-column>\n      <el-table-column prop=\"ModifyTime\"\n                       label=\"修改时间\"\n                       width=\"150\"\n                       align=\"center\"\n                       :formatter=\"formatterDateTime\">\n      </el-table-column>\n      <el-table-column label=\"操作\"\n                       width=\"180\"\n                       v-if=\"isShowOperatorColumn\">\n        <template scope=\"scope\">\n          <el-button size=\"small\"\n                     icon=\"el-icon-edit\"\n                     type=\"primary\"\n                     v-if=\"isShowOperatorButton('edit')\"\n                     @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button type=\"danger\"\n                     size=\"small\"\n                     icon=\"el-icon-delete\"\n                     v-if=\"isShowOperatorButton('del')\"\n                     @click=\"handleDel(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--工具条-->\n    <el-col :span=\"24\"\n            style=\"margin:10px 10px 10px 0px;\"\n            class=\"toolbar\">\n      <el-pagination @size-change=\"handleSizeChange\"\n                     @current-change=\"handleCurrentChange\"\n                     :current-page=\"page\"\n                     background\n                     :page-sizes=\"[5,10,50,100, 200, 300, 400]\"\n                     :page-size=\"pageSize\"\n                     layout=\"total, sizes, prev, pager, next, jumper\"\n                     :total=\"total\">\n      </el-pagination>\n    </el-col>\n    <!--新增/编辑界面-->\n    <el-dialog :title=\"dialogTitle\"\n               :visible.sync=\"addFormVisible\"\n               v-model=\"addFormVisible\"\n               :close-on-click-modal=\"false\">\n      <el-form :model=\"addForm\"\n               size=\"small\"\n               label-width=\"80px\"\n               ref=\"addForm\">\n        <el-form-item label=\"站点编号\"\n                      prop=\"StationCode\"\n                      :rules=\"[{ required: true, message: '站点编号不能为空'}]\">\n          <el-input v-model=\"addForm.StationCode\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"站点名称\"\n                      prop=\"StationName\"\n                      :rules=\"[{ required: true, message: '站点名称不能为空'}]\">\n          <el-input v-model=\"addForm.StationName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"所属产线\"\n                      prop=\"AllowLine\"\n                      :rules=\"[{ required: true, message: '所属产线不能为空'}]\">\n          <el-select v-model=\"addForm.AllowLine\"\n                     clearable\n                     placeholder=\"请选择\">\n            <el-option v-for=\"item in workshopCodeItems\"\n                       :key=\"item.value\"\n                       :label=\"item.label\"\n                       :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"备注\"\n                      prop=\"Remark \">\n          <el-input v-model=\"addForm.Remark\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\"\n           class=\"dialog-footer\">\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\"\n                   @click.native=\"SaveData\"\n                   :loading=\"addLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n    <!-- 导出组件 -->\n    <ToolbarExport ref=\"cmToolbarExport\"\n                   :exportFileName=\"exportFileName\"\n                   :filterVal=\"filterVal\"\n                   :currentPageData=\"currentPageData\"\n                   :tHeader=\"tHeader\" />\n  </section>\n</template> \n \n<script> \nimport util from '../../../util/date'\nimport { getStationListPage, removeStation, editStation, addStation, getCodeItemsBySetCode } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/ToolbarButton\";\nimport SearchForm from \"../../components/SearchForm\";\nimport ToolbarExport from \"../../components/ToolbarExport\";\nimport { formatDate, setformOptionsNewValue } from '../../../util/tools'\nimport { isShowOperatorButtonCommon, isNeedShowOperatorColumn } from '../../../util/common'\n\nexport default {\n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件 \n  data () {\n    return {\n      //导出组件相关 \n      exportFileName: '站点管理信息',//要导出的文件名 \n      currentPageData: [],//当前页面的列表数据 \n      tHeader: ['站点编号', '站点名称', '所属产线', '所属产线', '创建者', '修改者', '修改时间'],//当前页面列表的表头汉字数组，导出用 \n      filterVal: ['StationCode', 'StationName', 'AllowLine', 'Remark', 'CreateBy', 'ModifyBy', 'ModifyTime'],//当前页面列表的表头属性数组，导出用 \n\n      //搜索框相关 \n      commonSearchOptionSet: \"精准\",//通用查询的默认配置,\"模糊\"或\"精准\"\n      controlStyle: {//设置搜索控件的长度等样式\n        width: '400px',\n      },\n      labelWidth: \"90px\",//显示Label的宽度\n      drawerSize: \"650px\",//drawner宽度设置 \n      searchFormInputPlaceholder: '请输入站点编号/站点名称',//要给子搜索组件传递的值\n      searchFormInputAttrs: ['StationCode', 'StationName'],//要给子搜索组件传递的属性名 \n      formOptions: [\n        {\n          label: '站点编号',\n          prop: 'StationCode',\n          element: 'el-input',\n        },\n        {\n          label: '站点名称',\n          prop: 'StationName',\n          element: 'el-input',\n        },\n        {\n          label: '所属产线',\n          prop: 'AllowLine',\n          element: 'el-select',\n          options: []\n        },\n        {\n          label: '备注',\n          prop: 'Remark',\n          element: 'el-input',\n        },\n        {\n          label: '创建者',\n          prop: 'CreateBy',\n          element: 'el-input',\n        },\n        {\n          label: '修改者',\n          prop: 'ModifyBy',\n          element: 'el-input',\n        },\n        {\n          label: '修改时间',\n          prop: 'ModifyTime',\n          element: 'el-date-picker',\n        },\n      ],\n\n      isShowOperatorColumn: true,// 是否显示【操作】列,true显示 false不显示\n      tableHeight: window.innerHeight - 180, // 控制表格的高度\n\n      workshopCodeItems: [],//车间的码表集合\n\n      isAdd: false, // 是否是新增 \n      dialogTitle: '',\n\n      filters: {\n        name: ''\n      },\n      Stations: [],\n      roles: [],\n      total: 0,\n      buttonList: [],\n      currentRow: null,\n      page: 1,\n      pageSize: 10,\n      listLoading: false,\n      sels: [],//列表选中列 \n\n      addFormVisible: false,//新增界面是否显示 \n      addLoading: false,\n      //新增界面数据 \n      addForm: {\n\n      }\n\n    }\n  },\n  methods: {\n    //是否显示某个操作按钮\n    isShowOperatorButton (flag) {\n      return isShowOperatorButtonCommon(this.isShowOperatorColumn, flag, this.buttonList)\n    },\n    // 设置索引 \n    indexMethod (index) {\n      return (this.page - 1) * this.pageSize + 1 + index\n    },\n    // 时间格式化 \n    formatterDateTime (row, column, cellValue, index) {\n      if (cellValue === null || cellValue === '') {\n        return ''\n      }\n      var NewDtime = new Date(Date.parse(cellValue))\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss')\n    },\n    selectCurrentRow (val) {\n      this.currentRow = val;\n    },\n    callFunction (item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    handleCurrentChange (val) {\n      this.page = val;\n      this.getStations();\n    },\n    handleSizeChange (val) {\n      this.pageSize = val;\n      this.getStations();\n    },\n    /** \n     * 获取请求参数 \n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据 \n     */\n    getPostParam (flag) {\n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData());\n      para.page = this.page\n      para.pageSize = this.pageSize\n      if (flag === '2') { // 全部导出 \n        para.page = 1\n        para.pageSize = 10000\n      }\n      return para\n    },\n    //获取码表集列表 \n    getStations (formValue) {\n      //this.total = 0 \n      //this.Stations = null \n      let para = this.getPostParam('1');\n      this.listLoading = true;\n      getStationListPage(para).then((res) => {\n        this.total = res.data.response.dataCount;\n        this.Stations = res.data.response.data;\n        this.listLoading = false;\n      });\n    },\n    //通过代码集获取代码项集合 \n    getCodeItemsBySetCode () {\n      let para = {\n        setCode: '002' // 车间码表集\n      }\n      getCodeItemsBySetCode(para).then((res) => {\n        this.workshopCodeItems = res.data.response;\n        //给搜索框中的select控件赋值\n        let propValue = \"AllowLine\";\n        this.formOptions = setformOptionsNewValue(this.formOptions, propValue, this.workshopCodeItems);\n        this.$refs.ChildSearchForm.setNewFormOptions(this.formOptions)\n      });\n    },\n    //获取全部列表 \n    exportAllData () {\n      let para = this.getPostParam('2');\n      this.listLoading = true;\n      getStationListPage(para).then((res) => {\n        var allData = res.data.response.data;\n        this.$refs.cmToolbarExport.export2Excel(allData);\n        this.listLoading = false;\n      });\n    },\n    //删除 \n    handleDel (selRow) {\n      let row = {};\n      if (selRow && selRow != undefined) {\n        this.currentRow = selRow;\n      }\n      row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true;\n        let para = { id: row.Id };\n        removeStation(para).then((res) => {\n\n          if (util.isEmt.format(res)) {\n            this.listLoading = false;\n            return;\n          }\n          this.listLoading = false;\n          //NProgress.done(); \n          if (res.data.success) {\n            this.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n\n          } else {\n            this.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          this.getStations();\n        });\n      }).catch(() => {\n\n      });\n    },\n    //显示编辑界面\n    handleEdit (selRow) {\n      let row = {};\n      if (selRow && selRow != undefined) {\n        this.currentRow = selRow;\n      }\n      row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.isAdd = false\n      this.dialogTitle = '编辑'\n      this.addFormVisible = true;\n      this.addForm = {\n      };\n      debugger\n      this.addForm = Object.assign({}, row);\n    },\n    //显示新增界面 \n    handleAdd () {\n      this.isAdd = true\n      this.dialogTitle = '新增'\n      this.addFormVisible = true;\n      this.addForm = {\n      };\n    },\n    // 更新数据 \n    SaveData (formName) {\n      this.submitDisabled = true\n\n      this.$refs.addForm.validate((valid) => {\n        if (valid) {\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\n            this.addLoading = true;\n            let para = Object.assign({}, this.addForm);\n            if (this.isAdd) {//新增 \n              addStation(para).then((res) => {\n\n                if (util.isEmt.format(res)) {\n                  this.addLoading = false;\n                  return;\n                }\n\n                if (res.data.success) {\n                  this.addLoading = false;\n                  //NProgress.done(); \n                  this.$message({\n                    message: res.data.msg,\n                    type: 'success'\n                  });\n                  this.$refs['addForm'].resetFields();\n                  this.addFormVisible = false;\n                  this.getStations();\n                }\n                else {\n                  this.addLoading = false;\n                  this.$message({\n                    message: res.data.msg,\n                    type: 'error'\n                  });\n                }\n\n              });\n            } else {//编辑 \n              editStation(para).then((res) => {\n\n                if (util.isEmt.format(res)) {\n                  this.addLoading = false;\n                  return;\n                }\n                if (res.data.success) {\n                  this.addLoading = false;\n                  //NProgress.done(); \n                  this.$message({\n                    message: res.data.msg,\n                    type: 'success'\n                  });\n                  this.$refs['addForm'].resetFields();\n                  this.addFormVisible = false;\n                  this.getStations();\n                }\n                else {\n                  this.addLoading = false;\n                  this.$message({\n                    message: res.data.msg,\n                    type: 'error'\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    selsChange: function (sels) {\n      this.sels = sels;\n    },\n    //导出 \n    handleExport () {\n      this.currentPageData = this.Stations\n      this.$refs.cmToolbarExport.showPrintPage()\n    },\n  },\n  mounted () {\n    this.getCodeItemsBySetCode();\n    this.getStations();\n\n    let routers = window.localStorage.router\n      ? JSON.parse(window.localStorage.router)\n      : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n    let isShow = isNeedShowOperatorColumn(this.buttonList);//控制是否要显示【操作】列\n    this.isShowOperatorColumn = isShow;\n  }\n}\n\n</script> \n \n<style lang=\"scss\" scoped>\n</style> \n"],"sourceRoot":"src\\views\\BasicData"}]}