{"remainingRequest":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js!C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\框架\\Blog.Admin-master\\src\\views\\Permission\\Permission.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\框架\\Blog.Admin-master\\src\\views\\Permission\\Permission.vue","mtime":1610332596000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _Object$assign from \"C:\\\\\\u6846\\u67B6\\\\Blog.Admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from \"../../../util/date\";\nimport { getPermissionListPage, getPermissionTreeTable, removePermission, editPermission, addPermission, getPermissionTree, getModuleListPage } from \"../../api/api\";\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\nexport default {\n  components: {\n    Toolbar: Toolbar\n  },\n  data: function data() {\n    return {\n      buttonList: [],\n      currentRow: null,\n      options: [],\n      filters: {\n        Name: \"\"\n      },\n      users: [],\n      modules: [],\n      //接口api列表\n      statusList: [{\n        Name: \"激活\",\n        value: true\n      }, {\n        Name: \"禁用\",\n        value: false\n      }],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      addDialogFormVisible: false,\n      editFormVisible: false,\n      //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        Name: [{\n          required: true,\n          message: \"请输入菜单名称\",\n          trigger: \"blur\"\n        }],\n        Code: [{\n          required: true,\n          message: \"请输入路由地址\",\n          trigger: \"blur\"\n        }]\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        Mid: 0,\n        OrderSort: 0,\n        PidArr: [],\n        CreateBy: \"\",\n        Name: \"\",\n        Code: \"\",\n        Description: \"\",\n        Icon: \"\",\n        Func: \"\",\n        Enabled: true,\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      },\n      addFormVisible: false,\n      //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        Name: [{\n          required: true,\n          message: \"请输入菜单名称\",\n          trigger: \"blur\"\n        }],\n        Code: [{\n          required: true,\n          message: \"请输入路由地址\",\n          trigger: \"blur\"\n        }]\n      },\n      //新增界面数据\n      addForm: {\n        CreateBy: \"\",\n        CreateId: \"\",\n        PidArr: [],\n        Mid: 0,\n        OrderSort: 0,\n        Name: \"\",\n        Code: \"\",\n        Description: \"\",\n        Icon: \"\",\n        Func: \"\",\n        Enabled: true,\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      }\n    };\n  },\n  methods: {\n    selectCurrentRow: function selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    clkType: function clkType() {\n      this.addForm.IsButton = false;\n\n      if (this.addForm.MenuType == \"页面\") {\n        this.addForm.Code = \"\";\n      } else if (this.addForm.MenuType == \"目录\") {\n        this.addForm.Code = \"-\";\n      } else if (this.addForm.MenuType == \"按钮\") {\n        this.addForm.Code = \" \";\n        this.addForm.IsButton = true;\n      }\n    },\n    callFunction: function callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    //性别显示转换\n    formatEnabled: function formatEnabled(row, column) {\n      return row.Enabled ? \"正常\" : \"未知\";\n    },\n    formatCreateTime: function formatCreateTime(row, column) {\n      return !row.CreateTime || row.CreateTime == \"\" ? \"\" : util.formatDate.format(new Date(row.CreateTime), \"yyyy-MM-dd\");\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getPermissions();\n    },\n    load: function load(tree, treeNode, resolve) {\n      var para = {\n        page: this.page,\n        f: tree.Id,\n        key: this.filters.Name\n      };\n      getPermissionTreeTable(para).then(function (res) {\n        resolve(res.data.response);\n      });\n    },\n    //获取用户列表\n    getPermissions: function getPermissions() {\n      var _this2 = this;\n\n      var para = {\n        page: this.page,\n        key: this.filters.Name\n      };\n      this.listLoading = true; //NProgress.start();\n\n      getPermissionTreeTable(para).then(function (res) {\n        _this2.users = res.data.response;\n        _this2.listLoading = false; //NProgress.done();\n      });\n    },\n    //删除\n    handleDel: function handleDel() {\n      var _this3 = this;\n\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n        type: \"warning\"\n      }).then(function () {\n        _this3.listLoading = true; //NProgress.start();\n\n        var para = {\n          id: row.Id\n        };\n        removePermission(para).then(function (res) {\n          if (util.isEmt.format(res)) {\n            _this3.listLoading = false;\n            return;\n          }\n\n          _this3.listLoading = false; //NProgress.done();\n\n          if (res.data.success) {\n            _this3.$message({\n              message: \"删除成功\",\n              type: \"success\"\n            });\n          } else {\n            _this3.$message({\n              message: res.data.msg,\n              type: \"error\"\n            });\n          }\n\n          _this3.getPermissions();\n        });\n      }).catch(function () {});\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit() {\n      var _this4 = this;\n\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      var that = this;\n      that.editLoading = true;\n      this.editFormVisible = true;\n      this.editForm = {};\n      this.options = [];\n      var para = {\n        pid: row.Id\n      };\n      getPermissionTree(para).then(function (res) {\n        _this4.options.push(res.data.response);\n\n        that.editForm = _Object$assign({}, row);\n        that.editLoading = false;\n      });\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      var _this5 = this;\n\n      this.options = [];\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: \"\",\n        CreateId: \"\",\n        PidArr: [],\n        Name: \"\",\n        Code: \"\",\n        OrderSort: 0,\n        Description: \"\",\n        Enabled: true,\n        Icon: \"\",\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      };\n      var para = {\n        pid: 0\n      };\n      getPermissionTree(para).then(function (res) {\n        _this5.options.push(res.data.response);\n      });\n    },\n    //编辑\n    editSubmit: function editSubmit() {\n      var _this6 = this;\n\n      this.$refs.editForm.validate(function (valid) {\n        if (valid) {\n          _this6.$confirm(\"确认提交吗？\", \"提示\", {}).then(function () {\n            _this6.editLoading = true; //NProgress.start();\n\n            var para = _Object$assign({}, _this6.editForm);\n\n            para.ModifyTime = util.formatDate.format(new Date(), \"yyyy-MM-dd\");\n            para.Pid = para.PidArr.pop();\n\n            if (para.Id == para.Pid) {\n              _this6.$message({\n                message: \"警告，父节点不能是自己！\",\n                type: \"error\"\n              });\n\n              _this6.editLoading = false;\n              return;\n            }\n\n            editPermission(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this6.editLoading = false;\n                return;\n              }\n\n              _this6.editLoading = false;\n\n              if (res.data.success) {\n                _this6.editLoading = false; //NProgress.done();\n\n                _this6.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n\n                _this6.$refs[\"editForm\"].resetFields();\n\n                _this6.editFormVisible = false;\n\n                _this6.getPermissions();\n              } else {\n                _this6.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function addSubmit() {\n      var _this7 = this;\n\n      var _this = this;\n\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this7.$confirm(\"确认提交吗？\", \"提示\", {}).then(function () {\n            _this7.addLoading = true; //NProgress.start();\n\n            var para = _Object$assign({}, _this7.addForm);\n\n            para.CreateTime = util.formatDate.format(new Date(), \"yyyy-MM-dd\");\n            para.ModifyTime = para.CreateTime;\n            para.IsDeleted = false;\n            para.Pid = para.PidArr.pop();\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              _this7.$message({\n                message: \"用户信息为空，先登录\",\n                type: \"error\"\n              });\n\n              _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n            }\n\n            addPermission(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this7.addLoading = false;\n                return;\n              }\n\n              _this7.addLoading = false;\n\n              if (res.data.success) {\n                _this7.addLoading = false; //NProgress.done();\n\n                _this7.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n\n                _this7.$refs[\"addForm\"].resetFields();\n\n                _this7.addFormVisible = false;\n\n                _this7.getPermissions();\n              } else {\n                _this7.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      this.$message({\n        message: \"该功能未开放\",\n        type: \"warning\"\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this8 = this;\n\n    this.getPermissions();\n    getModuleListPage().then(function (res) {\n      _this8.modules = res.data.response.data;\n    });\n    var routers = window.localStorage.router ? JSON.parse(window.localStorage.router) : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n};",{"version":3,"sources":["Permission.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section>\n    <!--工具条-->\n    <toolbar :buttonList=\"buttonList\" @callFunction=\"callFunction\"></toolbar>\n\n    <!--列表-->\n    <el-table\n      :data=\"users\"\n      highlight-current-row\n      v-loading=\"listLoading\"\n      @selection-change=\"selsChange\"\n      @current-change=\"selectCurrentRow\"\n      row-key=\"Id\"\n      border\n      lazy\n      :load=\"load\"\n      :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n      style=\"width: 100%;\"\n    >\n      <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n      <el-table-column type=\"index\" width=\"80\"></el-table-column>\n      <el-table-column label=\"菜单/按钮\" width=\"200\" sortable>\n        <template slot-scope=\"scope\">\n          <i class=\"fa\" :class=\"scope.row.Icon\"></i>\n\n          {{scope.row.Name}}\n        </template>\n      </el-table-column>\n      <!-- <el-table-column prop=\"PnameArr\" label=\"父节点\" width=\"\" sortable>\n      </el-table-column>-->\n      <el-table-column prop=\"Code\" label=\"路由地址\" width sortable></el-table-column>\n      <el-table-column prop=\"MName\" label=\"API接口\" width sortable></el-table-column>\n      <el-table-column prop=\"OrderSort\" label=\"Sort\" width sortable></el-table-column>\n      <el-table-column prop=\"IsButton\" label=\"是否按钮\" width=\"100\" sortable>\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"!scope.row.IsButton  ? 'success' : 'danger'\"\n            disable-transitions\n          >{{!scope.row.IsButton ? \"否\":\"是\"}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"Func\" label=\"按钮事件\" width sortable></el-table-column>\n      <el-table-column prop=\"IsHide\" label=\"是否隐藏\" width=\"100\" sortable>\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"!scope.row.IsHide  ? 'success' : 'danger'\"\n            disable-transitions\n          >{{!scope.row.IsHide ? \"否\":\"是\"}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"IskeepAlive\" label=\"keepAlive\" width=\"100\" sortable>\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"!scope.row.IskeepAlive  ? 'success' : 'danger'\"\n            disable-transitions\n          >{{!scope.row.IskeepAlive ? \"否\":\"是\"}}</el-tag>\n        </template>\n      </el-table-column>\n      <!-- <el-table-column label=\"操作\" width=\"150\">\n                <template scope=\"scope\">\n                    <el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n                </template>\n      </el-table-column>-->\n    </el-table>\n\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\">\n      <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n      <el-pagination\n        layout=\"prev, pager, next\"\n        @current-change=\"handleCurrentChange\"\n        :page-size=\"50\"\n        :total=\"total\"\n        style=\"float:right;\"\n      ></el-pagination>\n    </el-col>\n\n    <!--编辑界面-->\n    <el-dialog\n      title=\"编辑\"\n      :visible.sync=\"editFormVisible\"\n      v-model=\"editFormVisible\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"editForm\" label-width=\"80px\" :rules=\"editFormRules\" ref=\"editForm\">\n        <el-form-item label=\"菜单名称\" prop=\"Name\">\n          <el-input v-model=\"editForm.Name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"路由地址\" prop=\"Code\">\n          <el-tooltip placement=\"top\">\n            <div slot=\"content\">\n              如果是目录，请填‘-’字符\n              <br />如果是按钮，请输入空格即可\n              <br />如果是外链，请带上协议，比如 https://www.baidu.com\n              <br />\n            </div>\n            <el-input v-model=\"editForm.Code\" auto-complete=\"off\"></el-input>\n          </el-tooltip>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"Description\">\n          <el-input v-model=\"editForm.Description\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Icon\" prop=\"Icon\">\n          <el-input v-model=\"editForm.Icon\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"Enabled\">\n          <el-select v-model=\"editForm.Enabled\" placeholder=\"请选择状态\">\n            <el-option\n              v-for=\"item in statusList\"\n              :key=\"item.value\"\n              :label=\"item.Name\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"排序\" prop=\"OrderSort\">\n          <el-input type=\"number\" v-model=\"editForm.OrderSort\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"IsButton\" label=\"是否按钮\" width sortable>\n          <el-switch v-model=\"editForm.IsButton\"></el-switch>\n        </el-form-item>\n        <el-form-item label=\"按钮事件\" prop=\"Func\">\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"只写方法名即可，不用带括号，比如：handleEdit\"\n            placement=\"top-start\"\n          >\n            <el-input v-model=\"editForm.Func\" auto-complete=\"off\"></el-input>\n          </el-tooltip>\n        </el-form-item>\n        <el-form-item prop=\"IsHide\" label=\"隐藏菜单\" width sortable>\n          <el-switch v-model=\"editForm.IsHide\"></el-switch>\n        </el-form-item>\n        <el-form-item prop=\"IskeepAlive\" label=\"keepAlive\" width sortable>\n          <el-switch v-model=\"editForm.IskeepAlive\"></el-switch>\n        </el-form-item>\n        <el-form-item prop=\"PidArr\" label=\"父级菜单\" width sortable>\n          <el-cascader\n            placeholder=\"请选择，支持搜索功能\"\n            style=\"width: 400px\"\n            v-model=\"editForm.PidArr\"\n            :options=\"options\"\n            filterable\n            change-on-select\n          ></el-cascader>\n        </el-form-item>\n        <el-form-item prop=\"Mid\" label=\"API接口\" width sortable>\n          <el-select style=\"width: 100%;\" v-model=\"editForm.Mid\" placeholder=\"请选择API\">\n            <el-option :key=\"0\" :value=\"0\" :label=\"'无需api'\"></el-option>\n            <el-option\n              v-for=\"item in modules\"\n              :key=\"item.Id\"\n              :value=\"item.Id\"\n              :label=\"item.LinkUrl\"\n            >\n              <span style=\"float: left\">{{ item.LinkUrl }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.Name }}</span>\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!--新增界面-->\n    <el-dialog\n      title=\"新增\"\n      :visible.sync=\"addFormVisible\"\n      v-model=\"addFormVisible\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\n        <el-form-item label=\"菜单名称\" prop=\"Name\">\n          <el-input v-model=\"addForm.Name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"菜单类型\">\n          <el-radio-group @change=\"clkType\" v-model=\"addForm.MenuType\">\n            <el-radio label=\"目录\"></el-radio>\n            <el-radio label=\"页面\"></el-radio>\n            <el-radio label=\"按钮\"></el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <el-form-item label=\"路由地址\" prop=\"Code\">\n          <el-tooltip placement=\"top\">\n            <div slot=\"content\">\n              如果是目录，请填‘-’字符\n              <br />如果是按钮，请输入空格即可\n              <br />如果是外链，请带上协议，比如 https://www.baidu.com\n              <br />\n            </div>\n            <el-input v-model=\"addForm.Code\" auto-complete=\"off\"></el-input>\n          </el-tooltip>\n\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"Description\">\n          <el-input v-model=\"addForm.Description\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"Enabled\">\n          <el-select v-model=\"addForm.Enabled\" placeholder=\"请选择状态\">\n            <el-option\n              v-for=\"item in statusList\"\n              :key=\"item.value\"\n              :label=\"item.Name\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"排序\" prop=\"OrderSort\">\n          <el-input v-model=\"addForm.OrderSort\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"IsButton\" label=\"是否按钮\" width sortable>\n          <el-switch v-model=\"addForm.IsButton\"></el-switch>\n        </el-form-item>\n        <el-form-item label=\"按钮事件\" prop=\"Func\">\n          <el-input v-model=\"addForm.Func\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"IsHide\" label=\"隐藏菜单\" width sortable>\n          <el-switch v-model=\"addForm.IsHide\"></el-switch>\n        </el-form-item>\n        <el-form-item prop=\"IskeepAlive\" label=\"keepAlive\" width sortable>\n          <el-switch v-model=\"addForm.IskeepAlive\"></el-switch>\n        </el-form-item>\n        <el-form-item prop=\"PidArr\" label=\"父级菜单\" width sortable>\n          <el-cascader\n            style=\"width: 400px\"\n            v-model=\"addForm.PidArr\"\n            :options=\"options\"\n            filterable\n            change-on-select\n          ></el-cascader>\n        </el-form-item>\n\n        <el-form-item prop=\"Mid\" label=\"API接口\" width sortable>\n          <el-select style=\"width: 100%;\" v-model=\"addForm.Mid\" placeholder=\"请选择API\">\n            <el-option :key=\"0\" :value=\"0\" :label=\"'无需api'\"></el-option>\n            <el-option\n              v-for=\"item in modules\"\n              :key=\"item.Id\"\n              :value=\"item.Id\"\n              :label=\"item.LinkUrl\"\n            >\n              <span style=\"float: left\">{{ item.LinkUrl }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.Name }}</span>\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n  </section>\n</template>\n\n<script>\nimport util from \"../../../util/date\";\nimport {\n  getPermissionListPage,\n  getPermissionTreeTable,\n  removePermission,\n  editPermission,\n  addPermission,\n  getPermissionTree,\n  getModuleListPage\n} from \"../../api/api\";\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\n\nexport default {\n  components: { Toolbar },\n  data() {\n    return {\n      buttonList: [],\n      currentRow: null,\n      options: [],\n      filters: {\n        Name: \"\"\n      },\n      users: [],\n      modules: [], //接口api列表\n      statusList: [\n        { Name: \"激活\", value: true },\n        { Name: \"禁用\", value: false }\n      ],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [], //列表选中列\n\n      addDialogFormVisible: false,\n      editFormVisible: false, //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        Name: [{ required: true, message: \"请输入菜单名称\", trigger: \"blur\" }],\n        Code: [{ required: true, message: \"请输入路由地址\", trigger: \"blur\" }]\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        Mid: 0,\n        OrderSort: 0,\n        PidArr: [],\n        CreateBy: \"\",\n        Name: \"\",\n        Code: \"\",\n        Description: \"\",\n        Icon: \"\",\n        Func: \"\",\n        Enabled: true,\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      },\n\n      addFormVisible: false, //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        Name: [{ required: true, message: \"请输入菜单名称\", trigger: \"blur\" }],\n        Code: [{ required: true, message: \"请输入路由地址\", trigger: \"blur\" }]\n      },\n      //新增界面数据\n      addForm: {\n        CreateBy: \"\",\n        CreateId: \"\",\n        PidArr: [],\n        Mid: 0,\n        OrderSort: 0,\n        Name: \"\",\n        Code: \"\",\n        Description: \"\",\n        Icon: \"\",\n        Func: \"\",\n        Enabled: true,\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      }\n    };\n  },\n  methods: {\n    selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    clkType() {\n      this.addForm.IsButton = false;\n      if (this.addForm.MenuType == \"页面\") {\n        this.addForm.Code = \"\";\n      } else if (this.addForm.MenuType == \"目录\") {\n        this.addForm.Code = \"-\";\n      } else if (this.addForm.MenuType == \"按钮\") {\n        this.addForm.Code = \" \";\n        this.addForm.IsButton = true;\n      }\n    },\n    callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    //性别显示转换\n    formatEnabled: function(row, column) {\n      return row.Enabled ? \"正常\" : \"未知\";\n    },\n    formatCreateTime: function(row, column) {\n      return !row.CreateTime || row.CreateTime == \"\"\n        ? \"\"\n        : util.formatDate.format(new Date(row.CreateTime), \"yyyy-MM-dd\");\n    },\n    handleCurrentChange(val) {\n      this.page = val;\n      this.getPermissions();\n    },\n    load(tree, treeNode, resolve) {\n      let para = {\n        page: this.page,\n        f: tree.Id,\n        key: this.filters.Name\n      };\n      getPermissionTreeTable(para).then(res => {\n        resolve(res.data.response);\n      });\n    },\n    //获取用户列表\n    getPermissions() {\n      let para = {\n        page: this.page,\n        key: this.filters.Name\n      };\n      this.listLoading = true;\n\n      //NProgress.start();\n      getPermissionTreeTable(para).then(res => {\n        this.users = res.data.response;\n        this.listLoading = false;\n        //NProgress.done();\n      });\n    },\n    //删除\n    handleDel() {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n        type: \"warning\"\n      })\n        .then(() => {\n          this.listLoading = true;\n          //NProgress.start();\n          let para = { id: row.Id };\n          removePermission(para).then(res => {\n            if (util.isEmt.format(res)) {\n              this.listLoading = false;\n              return;\n            }\n            this.listLoading = false;\n            //NProgress.done();\n            if (res.data.success) {\n              this.$message({\n                message: \"删除成功\",\n                type: \"success\"\n              });\n            } else {\n              this.$message({\n                message: res.data.msg,\n                type: \"error\"\n              });\n            }\n\n            this.getPermissions();\n          });\n        })\n        .catch(() => {});\n    },\n    //显示编辑界面\n    handleEdit() {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      let that = this;\n      that.editLoading = true;\n\n      this.editFormVisible = true;\n      this.editForm = {};\n\n      this.options = [];\n      let para = { pid: row.Id };\n      getPermissionTree(para).then(res => {\n        this.options.push(res.data.response);\n        that.editForm = Object.assign({}, row);\n        that.editLoading = false;\n      });\n    },\n    //显示新增界面\n    handleAdd() {\n      this.options = [];\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: \"\",\n        CreateId: \"\",\n        PidArr: [],\n        Name: \"\",\n        Code: \"\",\n        OrderSort: 0,\n        Description: \"\",\n        Enabled: true,\n        Icon: \"\",\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      };\n\n      let para = { pid: 0 };\n      getPermissionTree(para).then(res => {\n        this.options.push(res.data.response);\n      });\n    },\n    //编辑\n    editSubmit: function() {\n      this.$refs.editForm.validate(valid => {\n        if (valid) {\n          this.$confirm(\"确认提交吗？\", \"提示\", {}).then(() => {\n            this.editLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.editForm);\n\n            para.ModifyTime = util.formatDate.format(new Date(), \"yyyy-MM-dd\");\n\n            para.Pid = para.PidArr.pop();\n\n            if (para.Id == para.Pid) {\n              this.$message({\n                message: \"警告，父节点不能是自己！\",\n                type: \"error\"\n              });\n\n              this.editLoading = false;\n              return;\n            }\n\n            editPermission(para).then(res => {\n              if (util.isEmt.format(res)) {\n                this.editLoading = false;\n                return;\n              }\n              this.editLoading = false;\n              if (res.data.success) {\n                this.editLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n                this.$refs[\"editForm\"].resetFields();\n                this.editFormVisible = false;\n                this.getPermissions();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function() {\n      let _this = this;\n      this.$refs.addForm.validate(valid => {\n        if (valid) {\n          this.$confirm(\"确认提交吗？\", \"提示\", {}).then(() => {\n            this.addLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.addForm);\n\n            para.CreateTime = util.formatDate.format(new Date(), \"yyyy-MM-dd\");\n            para.ModifyTime = para.CreateTime;\n            para.IsDeleted = false;\n\n            para.Pid = para.PidArr.pop();\n\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              this.$message({\n                message: \"用户信息为空，先登录\",\n                type: \"error\"\n              });\n              _this.$router.replace(\n                _this.$route.query.redirect ? _this.$route.query.redirect : \"/\"\n              );\n            }\n\n            addPermission(para).then(res => {\n              if (util.isEmt.format(res)) {\n                this.addLoading = false;\n                return;\n              }\n              this.addLoading = false;\n              if (res.data.success) {\n                this.addLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n                this.$refs[\"addForm\"].resetFields();\n                this.addFormVisible = false;\n                this.getPermissions();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    selsChange: function(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function() {\n      this.$message({\n        message: \"该功能未开放\",\n        type: \"warning\"\n      });\n    }\n  },\n  mounted() {\n    this.getPermissions();\n\n    getModuleListPage().then(res => {\n      this.modules = res.data.response.data;\n    });\n\n    let routers = window.localStorage.router\n      ? JSON.parse(window.localStorage.router)\n      : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n};\n</script>\n\n<style scoped>\n</style>\n"],"sourceRoot":"src\\views\\Permission"}]}