{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\CodeSets copy.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\CodeSets copy.vue","mtime":1611550922558},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"D:\\\\\\u6570\\u701B\\u4FE1\\u606F\\u79D1\\u6280\\\\\\u516C\\u53F8\\u9879\\u76EE\\\\\\u5E7F\\u5DDE\\u897F\\u95E8\\u5B50\\u539F\\u6750\\u6599\\u7ACB\\u4F53\\u5E93\\\\\\u4F4E\\u538B\\u7EBF\\u5708\\\\src\\\\LES.Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _parseInt from \"D:\\\\\\u6570\\u701B\\u4FE1\\u606F\\u79D1\\u6280\\\\\\u516C\\u53F8\\u9879\\u76EE\\\\\\u5E7F\\u5DDE\\u897F\\u95E8\\u5B50\\u539F\\u6750\\u6599\\u7ACB\\u4F53\\u5E93\\\\\\u4F4E\\u538B\\u7EBF\\u5708\\\\src\\\\LES.Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from '../../../util/date';\nimport { getCodeSetListPage, removeCodeSet, editCodeSet, addCodeSet } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/ToolbarButton\";\nimport SearchForm from \"../../components/SearchForm\";\nimport ToolbarExport from \"../../components/ToolbarExport\";\nimport { formatDate } from '../../../util/tools';\nexport default {\n  components: {\n    Toolbar: Toolbar,\n    SearchForm: SearchForm,\n    ToolbarExport: ToolbarExport\n  },\n  //注册子组件\n  data: function data() {\n    return {\n      //导出组件相关\n      exportFileName: '码表集信息',\n      //要导出的文件名\n      currentPageData: [],\n      //当前页面的列表数据\n      tHeader: ['代码编码', '代码名称', '说明'],\n      //当前页面列表的表头汉字数组，导出用\n      filterVal: ['code', 'name', 'note'],\n      //当前页面列表的表头属性数组，导出用\n      //搜索框相关\n      drawerSize: \"450px\",\n      //drawner宽度设置\n      searchFormInputPlaceholder: '请输入代码编码/名称',\n      //要给子搜索组件传递的值\n      formOptions: [{\n        label: '代码编码',\n        prop: 'code',\n        element: 'el-input'\n      }, {\n        label: '代码名称',\n        prop: 'name',\n        element: 'el-input'\n      }, {\n        label: '说明',\n        prop: 'note',\n        element: 'el-input'\n      }],\n      tableHeight: window.innerHeight - 230,\n      // 500, // 这个值不能设置小了，设置小了，界面就不对了\n      isAdd: false,\n      // 是否是新增\n      dialogTitle: '',\n      filters: {\n        name: ''\n      },\n      CodeSets: [],\n      roles: [],\n      total: 0,\n      buttonList: [],\n      currentRow: null,\n      page: 1,\n      pageSize: 10,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      addFormVisible: false,\n      //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        uLoginName: [{\n          required: true,\n          message: '请输入登录名',\n          trigger: 'blur'\n        }],\n        uRealName: [{\n          required: true,\n          message: '请输入昵称',\n          trigger: 'blur'\n        }],\n        uLoginPWD: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        birth: [{\n          required: true,\n          message: '请填写生日',\n          trigger: 'blur'\n        }]\n      },\n      //新增界面数据\n      addForm: {\n        id: 0,\n        name: '',\n        code: '',\n        note: '',\n        delFlag: false\n      }\n    };\n  },\n  methods: {\n    // 设置索引\n    indexMethod: function indexMethod(index) {\n      return (this.page - 1) * this.pageSize + 1 + index;\n    },\n    // 时间格式化\n    formatterDateTime: function formatterDateTime(row, column, cellValue, index) {\n      if (cellValue === null || cellValue === '') {\n        return '';\n      }\n\n      var t = cellValue.slice(6, 19); // 截取字符串\n\n      var NewDtime = new Date(_parseInt(t));\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss');\n    },\n    selectCurrentRow: function selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    callFunction: function callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    //性别显示转换\n    formatSex: function formatSex(row, column) {\n      return row.sex == 1 ? '男' : row.sex == 0 ? '女' : '未知';\n    },\n    formatBirth: function formatBirth(row, column) {\n      return !row.birth || row.birth == '' ? '' : util.formatDate.format(new Date(row.birth), 'yyyy-MM-dd');\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getCodeSets();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.getCodeSets();\n    },\n\n    /**\r\n     * 获取请求参数\r\n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据\r\n     */\n    getPostParam: function getPostParam(flag) {\n      var para = _Object$assign({}, this.$refs.ChildSearchForm.getFormData());\n\n      para.page = this.page;\n      para.pageSize = this.pageSize;\n\n      if (flag === '2') {\n        // 全部导出\n        para.page = 1;\n        para.pageSize = 10000;\n      }\n\n      return para;\n    },\n    //获取用户列表\n    getCodeSets: function getCodeSets(formValue) {\n      var _this = this;\n\n      //this.total = 0\n      //this.CodeSets = null\n      var para = this.getPostParam('1');\n      this.listLoading = true;\n      getCodeSetListPage(para).then(function (res) {\n        _this.total = res.data.response.dataCount;\n        _this.CodeSets = res.data.response.data;\n        _this.listLoading = false;\n      });\n    },\n    //获取全部用户列表\n    exportAllData: function exportAllData() {\n      var _this2 = this;\n\n      var para = this.getPostParam('2');\n      this.listLoading = true;\n      getCodeSetListPage(para).then(function (res) {\n        var allData = res.data.response.data;\n\n        _this2.$refs.cmToolbarExport.export2Excel(allData);\n\n        _this2.listLoading = false;\n      });\n    },\n    //删除\n    handleDel: function handleDel() {\n      var _this3 = this;\n\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this3.listLoading = true; //NProgress.start();\n\n        var para = {\n          id: row.Id\n        };\n        debugger;\n        removeCodeSet(para).then(function (res) {\n          if (util.isEmt.format(res)) {\n            _this3.listLoading = false;\n            return;\n          }\n\n          _this3.listLoading = false; //NProgress.done();\n\n          if (res.data.success) {\n            _this3.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n          } else {\n            _this3.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          _this3.getCodeSets();\n        });\n      }).catch(function () {});\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit() {\n      var row = this.currentRow;\n\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      this.isAdd = false;\n      this.dialogTitle = '编辑';\n      this.addFormVisible = true;\n      this.addForm = {};\n      debugger;\n      this.addForm = _Object$assign({}, row);\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.isAdd = true;\n      this.dialogTitle = '新增';\n      this.addFormVisible = true;\n      this.addForm = {};\n    },\n    //编辑\n    editSubmit: function editSubmit() {\n      var _this4 = this;\n\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this4.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this4.addLoading = true;\n\n            var para = _Object$assign({}, _this4.editForm);\n\n            editCodeSet(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this4.addLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                _this4.addLoading = false; //NProgress.done();\n\n                _this4.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n\n                _this4.$refs['editForm'].resetFields();\n\n                _this4.editFormVisible = false;\n\n                _this4.getCodeSets();\n              } else {\n                _this4.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function addSubmit() {\n      var _this5 = this;\n\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this5.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this5.addLoading = true;\n\n            var para = _Object$assign({}, _this5.addForm);\n\n            debugger;\n            addCodeSet(para).then(function (res) {\n              if (util.isEmt.format(res)) {\n                _this5.addLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                _this5.addLoading = false; //NProgress.done();\n\n                _this5.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n\n                _this5.$refs['addForm'].resetFields();\n\n                _this5.addFormVisible = false;\n\n                _this5.getCodeSets();\n              } else {\n                _this5.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    // 更新数据\n    SaveData: function SaveData(formName) {\n      var _this6 = this;\n\n      this.submitDisabled = true;\n      this.$refs.addForm.validate(function (valid) {\n        if (valid) {\n          _this6.$confirm('确认提交吗？', '提示', {}).then(function () {\n            _this6.addLoading = true;\n\n            var para = _Object$assign({}, _this6.addForm);\n\n            if (_this6.isAdd) {\n              //新增\n              addCodeSet(para).then(function (res) {\n                if (util.isEmt.format(res)) {\n                  _this6.addLoading = false;\n                  return;\n                }\n\n                if (res.data.success) {\n                  _this6.addLoading = false; //NProgress.done();\n\n                  _this6.$message({\n                    message: res.data.msg,\n                    type: 'success'\n                  });\n\n                  _this6.$refs['addForm'].resetFields();\n\n                  _this6.addFormVisible = false;\n\n                  _this6.getCodeSets();\n                } else {\n                  _this6.addLoading = false;\n\n                  _this6.$message({\n                    message: res.data.msg,\n                    type: 'error'\n                  });\n                }\n              });\n            } else {\n              //编辑\n              editCodeSet(para).then(function (res) {\n                if (util.isEmt.format(res)) {\n                  _this6.addLoading = false;\n                  return;\n                }\n\n                if (res.data.success) {\n                  _this6.addLoading = false; //NProgress.done();\n\n                  _this6.$message({\n                    message: res.data.msg,\n                    type: 'success'\n                  });\n\n                  _this6.$refs['addForm'].resetFields();\n\n                  _this6.addFormVisible = false;\n\n                  _this6.getCodeSets();\n                } else {\n                  _this6.addLoading = false;\n\n                  _this6.$message({\n                    message: res.data.msg,\n                    type: 'error'\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //导出\n    handleExport: function handleExport() {\n      this.currentPageData = this.CodeSets;\n      this.$refs.cmToolbarExport.showPrintPage();\n    }\n  },\n  mounted: function mounted() {\n    this.getCodeSets();\n    var routers = window.localStorage.router ? JSON.parse(window.localStorage.router) : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n};",{"version":3,"sources":["CodeSets copy.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <section>\r\n    <!--工具条-->\r\n    <el-col :span=\"24\"\r\n            class=\"toolbar\"\r\n            style=\"padding-bottom: 0px;\">\r\n      <el-form :inline=\"true\"\r\n               @submit.native.prevent>\r\n        <toolbar :buttonList=\"buttonList\"\r\n                 @callFunction=\"callFunction\">\r\n        </toolbar>\r\n        <!-- 搜索 -->\r\n        <SearchForm :formOptions=\"formOptions\"\r\n                    :drawerSize=\"drawerSize\"\r\n                    :searchFormInputPlaceholder=\"searchFormInputPlaceholder\"\r\n                    ref=\"ChildSearchForm\"\r\n                    @onSearch=\"getCodeSets\" />\r\n      </el-form>\r\n    </el-col>\r\n\r\n    <!--列表-->\r\n    <el-table :data=\"CodeSets\"\r\n              :height=\"tableHeight\"\r\n              highlight-current-row\r\n              size=\"small\"\r\n              @current-change=\"selectCurrentRow\"\r\n              v-loading=\"listLoading\"\r\n              @selection-change=\"selsChange\"\r\n              style=\"width: 99%;\">\r\n      <el-table-column type=\"index\"\r\n                       :index=\"indexMethod\"\r\n                       label=\"#\"\r\n                       align=\"center\"\r\n                       width=\"50\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"code\"\r\n                       label=\"代码编码\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"name\"\r\n                       label=\"代码名称\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"note\"\r\n                       label=\"说明\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"delFlag\"\r\n                       label=\"状态\"\r\n                       align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag :type=\"scope.row.delFlag  ? 'danger' : 'success'\"\r\n                  disable-transitions>{{scope.row.delFlag ? \"禁用\":\"启用\"}}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"creator\"\r\n                       label=\"创建人\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"createTime\"\r\n                       label=\"创建时间\"\r\n                       width=\"160\"\r\n                       align=\"center\"\r\n                       :formatter=\"formatterDateTime\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"lastModifier\"\r\n                       label=\"修改人\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"lastModifyTime\"\r\n                       label=\"修改时间\"\r\n                       width=\"160\"\r\n                       align=\"center\"\r\n                       :formatter=\"formatterDateTime\">\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!--工具条-->\r\n    <el-col :span=\"24\"\r\n            style=\"margin:10px 10px 10px 0px;\"\r\n            class=\"toolbar\">\r\n      <el-pagination @size-change=\"handleSizeChange\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     :current-page=\"page\"\r\n                     background\r\n                     :page-sizes=\"[5,10,50,100, 200, 300, 400]\"\r\n                     :page-size=\"pageSize\"\r\n                     layout=\"total, sizes, prev, pager, next, jumper\"\r\n                     :total=\"total\">\r\n      </el-pagination>\r\n    </el-col>\r\n    <!--新增/编辑界面-->\r\n    <el-dialog :title=\"dialogTitle\"\r\n               :visible.sync=\"addFormVisible\"\r\n               v-model=\"addFormVisible\"\r\n               :close-on-click-modal=\"false\">\r\n      <el-form :model=\"addForm\"\r\n               size=\"small\"\r\n               label-width=\"80px\"\r\n               ref=\"addForm\">\r\n        <el-form-item label=\"代码编码\"\r\n                      :rules=\"[{ required: true, message: '代码编码不能为空'}]\"\r\n                      prop=\"code\">\r\n          <el-input v-model=\"addForm.code\"\r\n                    auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"代码名称\"\r\n                      :rules=\"[{ required: true, message: '代码名称不能为空'}]\"\r\n                      prop=\"name\">\r\n          <el-input v-model=\"addForm.name\"\r\n                    auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"是否禁用\"\r\n                      prop=\"delFlag\">\r\n          <el-switch v-model=\"addForm.delFlag\"></el-switch>\r\n        </el-form-item>\r\n        <el-form-item label=\"说明\"\r\n                      :rules=\"[{ required: true, message: '说明不能为空'}]\"\r\n                      prop=\"note\">\r\n          <el-input v-model=\"addForm.note\"\r\n                    auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\"\r\n           class=\"dialog-footer\">\r\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\"\r\n                   @click.native=\"SaveData\"\r\n                   :loading=\"addLoading\">提交</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!-- 导出组件 -->\r\n    <ToolbarExport ref=\"cmToolbarExport\"\r\n                   :exportFileName=\"exportFileName\"\r\n                   :filterVal=\"filterVal\"\r\n                   :currentPageData=\"currentPageData\"\r\n                   :tHeader=\"tHeader\" />\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport util from '../../../util/date'\r\nimport { getCodeSetListPage, removeCodeSet, editCodeSet, addCodeSet } from '../../api/api';\r\nimport { getButtonList } from \"../../promissionRouter\";\r\nimport Toolbar from \"../../components/ToolbarButton\";\r\nimport SearchForm from \"../../components/SearchForm\";\r\nimport ToolbarExport from \"../../components/ToolbarExport\";\r\nimport { formatDate } from '../../../util/tools'\r\n\r\n\r\nexport default {\r\n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件\r\n  data () {\r\n    return {\r\n      //导出组件相关\r\n      exportFileName: '码表集信息',//要导出的文件名\r\n      currentPageData: [],//当前页面的列表数据\r\n      tHeader: ['代码编码', '代码名称', '说明'],//当前页面列表的表头汉字数组，导出用\r\n      filterVal: ['code', 'name', 'note'],//当前页面列表的表头属性数组，导出用\r\n\r\n      //搜索框相关\r\n      drawerSize: \"450px\",//drawner宽度设置\r\n      searchFormInputPlaceholder: '请输入代码编码/名称',//要给子搜索组件传递的值\r\n      formOptions: [\r\n        {\r\n          label: '代码编码',\r\n          prop: 'code',\r\n          element: 'el-input'\r\n        },\r\n        {\r\n          label: '代码名称',\r\n          prop: 'name',\r\n          element: 'el-input'\r\n        },\r\n        {\r\n          label: '说明',\r\n          prop: 'note',\r\n          element: 'el-input'\r\n        }\r\n      ],\r\n\r\n\r\n      tableHeight: window.innerHeight - 230, // 500, // 这个值不能设置小了，设置小了，界面就不对了\r\n\r\n      isAdd: false, // 是否是新增\r\n      dialogTitle: '',\r\n\r\n      filters: {\r\n        name: ''\r\n      },\r\n      CodeSets: [],\r\n      roles: [],\r\n      total: 0,\r\n      buttonList: [],\r\n      currentRow: null,\r\n      page: 1,\r\n      pageSize: 10,\r\n      listLoading: false,\r\n      sels: [],//列表选中列\r\n\r\n      addFormVisible: false,//新增界面是否显示\r\n      addLoading: false,\r\n      addFormRules: {\r\n        uLoginName: [\r\n          { required: true, message: '请输入登录名', trigger: 'blur' }\r\n        ],\r\n        uRealName: [\r\n          { required: true, message: '请输入昵称', trigger: 'blur' }\r\n        ],\r\n        uLoginPWD: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ],\r\n        birth: [\r\n          { required: true, message: '请填写生日', trigger: 'blur' }\r\n        ]\r\n      },\r\n      //新增界面数据\r\n      addForm: {\r\n        id: 0,\r\n        name: '',\r\n        code: '',\r\n        note: '',\r\n        delFlag: false\r\n      }\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    // 设置索引\r\n    indexMethod (index) {\r\n      return (this.page - 1) * this.pageSize + 1 + index\r\n    },\r\n    // 时间格式化\r\n    formatterDateTime (row, column, cellValue, index) {\r\n      if (cellValue === null || cellValue === '') {\r\n        return ''\r\n      }\r\n      var t = cellValue.slice(6, 19) // 截取字符串\r\n      var NewDtime = new Date(parseInt(t))\r\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss')\r\n    },\r\n    selectCurrentRow (val) {\r\n      this.currentRow = val;\r\n    },\r\n    callFunction (item) {\r\n      this.filters = {\r\n        name: item.search\r\n      };\r\n      this[item.Func].apply(this, item);\r\n    },\r\n    //性别显示转换\r\n    formatSex: function (row, column) {\r\n      return row.sex == 1 ? '男' : row.sex == 0 ? '女' : '未知';\r\n    },\r\n    formatBirth: function (row, column) {\r\n      return (!row.birth || row.birth == '') ? '' : util.formatDate.format(new Date(row.birth), 'yyyy-MM-dd');\r\n    },\r\n    handleCurrentChange (val) {\r\n      this.page = val;\r\n      this.getCodeSets();\r\n    },\r\n    handleSizeChange (val) {\r\n      this.pageSize = val;\r\n      this.getCodeSets();\r\n    },\r\n    /**\r\n     * 获取请求参数\r\n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据\r\n     */\r\n    getPostParam (flag) {\r\n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData());\r\n      para.page = this.page\r\n      para.pageSize = this.pageSize\r\n      if (flag === '2') { // 全部导出\r\n        para.page = 1\r\n        para.pageSize = 10000\r\n      }\r\n      return para\r\n    },\r\n    //获取用户列表\r\n    getCodeSets (formValue) {\r\n      //this.total = 0\r\n      //this.CodeSets = null\r\n      let para = this.getPostParam('1');\r\n      this.listLoading = true;\r\n      getCodeSetListPage(para).then((res) => {\r\n        this.total = res.data.response.dataCount;\r\n        this.CodeSets = res.data.response.data;\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //获取全部用户列表\r\n    exportAllData () {\r\n      let para = this.getPostParam('2');\r\n      this.listLoading = true;\r\n      getCodeSetListPage(para).then((res) => {\r\n        var allData = res.data.response.data;\r\n        this.$refs.cmToolbarExport.export2Excel(allData);\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //删除\r\n    handleDel () {\r\n      let row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要删除的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.$confirm('确认删除该记录吗?', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.listLoading = true;\r\n        //NProgress.start();\r\n        let para = { id: row.Id };\r\n        debugger\r\n        removeCodeSet(para).then((res) => {\r\n\r\n          if (util.isEmt.format(res)) {\r\n            this.listLoading = false;\r\n            return;\r\n          }\r\n          this.listLoading = false;\r\n          //NProgress.done();\r\n          if (res.data.success) {\r\n            this.$message({\r\n              message: '删除成功',\r\n              type: 'success'\r\n            });\r\n\r\n          } else {\r\n            this.$message({\r\n              message: res.data.msg,\r\n              type: 'error'\r\n            });\r\n          }\r\n\r\n          this.getCodeSets();\r\n        });\r\n      }).catch(() => {\r\n\r\n      });\r\n    },\r\n    //显示编辑界面\r\n    handleEdit () {\r\n      let row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要编辑的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.isAdd = false\r\n      this.dialogTitle = '编辑'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n      debugger\r\n      this.addForm = Object.assign({}, row);\r\n    },\r\n    //显示新增界面\r\n    handleAdd () {\r\n      this.isAdd = true\r\n      this.dialogTitle = '新增'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n    },\r\n    //编辑\r\n    editSubmit: function () {\r\n      this.$refs.addForm.validate((valid) => {\r\n        if (valid) {\r\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n            this.addLoading = true;\r\n            let para = Object.assign({}, this.editForm);\r\n            editCodeSet(para).then((res) => {\r\n\r\n              if (util.isEmt.format(res)) {\r\n                this.addLoading = false;\r\n                return;\r\n              }\r\n              if (res.data.success) {\r\n                this.addLoading = false;\r\n                //NProgress.done();\r\n                this.$message({\r\n                  message: res.data.msg,\r\n                  type: 'success'\r\n                });\r\n                this.$refs['editForm'].resetFields();\r\n                this.editFormVisible = false;\r\n                this.getCodeSets();\r\n              } else {\r\n                this.$message({\r\n                  message: res.data.msg,\r\n                  type: 'error'\r\n                });\r\n\r\n              }\r\n            });\r\n          });\r\n        }\r\n      });\r\n    },\r\n    //新增\r\n    addSubmit: function () {\r\n      this.$refs.addForm.validate((valid) => {\r\n        if (valid) {\r\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n            this.addLoading = true;\r\n            let para = Object.assign({}, this.addForm);\r\n            debugger\r\n            addCodeSet(para).then((res) => {\r\n\r\n              if (util.isEmt.format(res)) {\r\n                this.addLoading = false;\r\n                return;\r\n              }\r\n\r\n              if (res.data.success) {\r\n                this.addLoading = false;\r\n                //NProgress.done();\r\n                this.$message({\r\n                  message: res.data.msg,\r\n                  type: 'success'\r\n                });\r\n                this.$refs['addForm'].resetFields();\r\n                this.addFormVisible = false;\r\n                this.getCodeSets();\r\n              }\r\n              else {\r\n                this.$message({\r\n                  message: res.data.msg,\r\n                  type: 'error'\r\n                });\r\n\r\n              }\r\n\r\n            });\r\n\r\n          });\r\n        }\r\n      });\r\n    },\r\n    // 更新数据\r\n    SaveData (formName) {\r\n      this.submitDisabled = true\r\n\r\n      this.$refs.addForm.validate((valid) => {\r\n        if (valid) {\r\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n            this.addLoading = true;\r\n            let para = Object.assign({}, this.addForm);\r\n            if (this.isAdd) {//新增\r\n              addCodeSet(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done();\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getCodeSets();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n\r\n              });\r\n            } else {//编辑\r\n              editCodeSet(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done();\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getCodeSets();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    selsChange: function (sels) {\r\n      this.sels = sels;\r\n    },\r\n    //导出\r\n    handleExport () {\r\n      this.currentPageData = this.CodeSets\r\n      this.$refs.cmToolbarExport.showPrintPage()\r\n    },\r\n  },\r\n  mounted () {\r\n    this.getCodeSets();\r\n\r\n    let routers = window.localStorage.router\r\n      ? JSON.parse(window.localStorage.router)\r\n      : [];\r\n    this.buttonList = getButtonList(this.$route.path, routers);\r\n\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"],"sourceRoot":"src\\views\\BasicData"}]}