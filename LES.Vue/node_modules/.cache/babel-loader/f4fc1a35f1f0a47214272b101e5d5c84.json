{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\components\\searchForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\components\\searchForm.vue","mtime":1611299818887},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport formItem from './formItem';\nimport { createUUID } from '../../util/tools';\nexport default {\n  components: {\n    formItem: formItem\n  },\n  props: {\n    //接受父组件传过来的值\n    searchFormInputPlaceholder: {\n      type: String,\n      required: true\n    },\n\n    /**\r\n     * 表单配置\r\n     * 示例：\r\n     * [{\r\n     *   label: '用户名', // label文字\r\n     *   prop: 'username', // 字段名\r\n     *   element: 'el-input', // 指定elementui组件\r\n     *   initValue: '阿黄', // 字段初始值\r\n     *   placeholder: '请输入用户名', // elementui组件属性\r\n     *   rules: [{ required: true, message: '必填项', trigger: 'blur' }], // elementui组件属性\r\n     *   events: { // elementui组件方法\r\n     *     input (val) {\r\n     *       console.log(val)\r\n     *     },\r\n     *     ...... // 可添加任意elementui组件支持的方法\r\n     *   }\r\n     *   ...... // 可添加任意elementui组件支持的属性\r\n     * }]\r\n     */\n    formOptions: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    },\n    // 提交按钮项，多个用逗号分隔（search, export, reset）\n    btnItems: {\n      type: String,\n      default: function _default() {\n        return 'search,reset';\n      }\n    },\n    buttonList: {}\n  },\n  data: function data() {\n    return {\n      drawer: false,\n      direction: 'rtl',\n      drawerSize: '800px',\n      //form对象\n      formData: {}\n    };\n  },\n  computed: {\n    newKeys: function newKeys() {\n      return this.formOptions.map(function (v) {\n        return createUUID();\n      });\n    }\n  },\n  created: function created() {\n    this.addInitValue();\n  },\n  methods: {\n    showHighFilter: function showHighFilter() {\n      this.drawer = !this.drawer;\n    },\n    // 校验\n    onValidate: function onValidate(callback) {\n      var _this = this;\n\n      this.$refs.formRef.validate(function (valid) {\n        if (valid) {\n          console.log('提交成功');\n          console.log(_this.formData);\n          callback();\n        }\n      });\n    },\n    // 搜索\n    onSearch: function onSearch() {\n      var _this2 = this;\n\n      this.onValidate(function () {\n        _this2.$emit('onSearch', _this2.formData);\n      });\n    },\n    // 导出\n    onExport: function onExport() {\n      var _this3 = this;\n\n      this.onValidate(function () {\n        _this3.$emit('onExport', _this3.formData);\n      });\n    },\n    // 重置\n    onReset: function onReset() {\n      debugger;\n      this.formData.searchVal = '';\n      this.$refs.formRef.resetFields();\n    },\n    // 添加初始值\n    addInitValue: function addInitValue() {\n      var obj = {};\n      this.formOptions.forEach(function (v) {\n        if (v.initValue !== undefined) {\n          obj[v.prop] = v.initValue;\n        }\n      });\n      this.formData = obj;\n    },\n    getFormData: function getFormData() {\n      return this.formData;\n    }\n  }\n};",{"version":3,"sources":["searchForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA,OAAA,QAAA,MAAA,YAAA;AACA,SAAA,UAAA,QAAA,kBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GADA;AAEA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,0BAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAFA;;AAMA;;;;;;;;;;;;;;;;;;;AAmBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,OAHA,sBAGA;AACA,eAAA,EAAA;AACA;AALA,KAzBA;AAgCA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,cAAA;AACA;AAJA,KAjCA;AAuCA,IAAA,UAAA,EAAA;AAvCA,GAFA;AA4CA,EAAA,IA5CA,kBA4CA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA,OAHA;AAKA;AACA,MAAA,QAAA,EAAA;AANA,KAAA;AASA,GAtDA;AAwDA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,WAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,eAAA,UAAA,EAAA;AACA,OAFA,CAAA;AAGA;AALA,GAxDA;AAgEA,EAAA,OAhEA,qBAgEA;AACA,SAAA,YAAA;AACA,GAlEA;AAoEA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,WAAA,MAAA,GAAA,CAAA,KAAA,MAAA;AACA,KAHA;AAIA;AACA,IAAA,UALA,sBAKA,QALA,EAKA;AAAA;;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA;AACA,UAAA,QAAA;AACA;AACA,OANA;AAOA,KAbA;AAcA;AACA,IAAA,QAfA,sBAeA;AAAA;;AACA,WAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,UAAA,EAAA,MAAA,CAAA,QAAA;AACA,OAFA;AAGA,KAnBA;AAoBA;AACA,IAAA,QArBA,sBAqBA;AAAA;;AACA,WAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,UAAA,EAAA,MAAA,CAAA,QAAA;AACA,OAFA;AAGA,KAzBA;AA0BA;AACA,IAAA,OA3BA,qBA2BA;AACA;AACA,WAAA,QAAA,CAAA,SAAA,GAAA,EAAA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,WAAA;AAEA,KAhCA;AAiCA;AACA,IAAA,YAlCA,0BAkCA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,WAAA,WAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,CAAA,CAAA,SAAA,KAAA,SAAA,EAAA;AACA,UAAA,GAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,SAAA;AACA;AACA,OAJA;AAKA,WAAA,QAAA,GAAA,GAAA;AACA,KA1CA;AA2CA,IAAA,WA3CA,yBA2CA;AACA,aAAA,KAAA,QAAA;AACA;AA7CA;AApEA,CAAA","sourcesContent":["/**\r\n * 搜索栏公共组件\r\n */\r\n<template>\r\n  <div class=\"search-form-box\">\r\n    <el-form :model=\"formData\"\r\n             label-width=\"80px\"\r\n             ref=\"formRef\"\r\n             :inline=\"true\">\r\n      <el-form-item>\r\n        <el-input v-model=\"formData.searchVal\"\r\n                  size=\"small\"\r\n                  :placeholder=\"searchFormInputPlaceholder\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"\">\r\n        <el-button v-if=\"btnItems.includes('search')\"\r\n                   type=\"primary\"\r\n                   class=\"btn-search\"\r\n                   icon=\"el-icon-search\"\r\n                   size=\"small\"\r\n                   @click=\"onSearch\">查询</el-button>\r\n        &nbsp;\r\n        <el-link v-if=\"btnItems.includes('reset')\"\r\n                 :underline=\"false\"\r\n                 type=\"primary\"\r\n                 class=\"btn-reset\"\r\n                 @click=\"onReset\">重置</el-link>\r\n        &nbsp;\r\n        <el-link type=\"primary\"\r\n                 @click=\"showHighFilter\"\r\n                 :underline=\"false\">高级</el-link>\r\n        <el-drawer style=\"top:160px;height:520px;\"\r\n                   :modal=\"false\"\r\n                   :withHeader=\"false\"\r\n                   :size=\"drawerSize\"\r\n                   :close-on-press-escape=\"true\"\r\n                   :show-close=\"false\"\r\n                   :visible.sync=\"drawer\"\r\n                   :direction=\"direction\">\r\n          <div class=\"popup-right\">\r\n            <div slot=\"header\"\r\n                 class=\"drawer_header\">高级查询</div>\r\n            <div class=\"drawer_main\"\r\n                 style=\"height:auto;margin:10px 5px 15px 20px;\">\r\n              <el-scrollbar :noresize=\"false\"\r\n                            :native=\"false\"\r\n                            wrap-class=\"scrollbar-wrap\">\r\n                <el-form-item v-for=\"(item, index) in formOptions\"\r\n                              :key=\"newKeys[index]\"\r\n                              :prop=\"item.prop\"\r\n                              class=\"searchFormCss\"\r\n                              style=\"height:auto;margin:10px 5px 15px 20px;\"\r\n                              :label=\"item.label ? (item.label + '：') : ''\"\r\n                              :rules=\"item.rules\">\r\n                  <formItem v-model=\"formData[item.prop]\"\r\n                            :itemOptions=\"item\" />\r\n                </el-form-item>\r\n              </el-scrollbar>\r\n            </div>\r\n            <div slot=\"footer\"\r\n                 class=\"drawer_footer\">\r\n              <el-button class=\"left\"\r\n                         type=\"text\"\r\n                         size=\"small\"\r\n                         @click=\"drawer=false\">隐藏</el-button>\r\n              <el-button class=\"right\"\r\n                         icon=\"el-icon-refresh-left\"\r\n                         size=\"small\"\r\n                         @click=\"onReset\">重置</el-button>\r\n              <el-button class=\"right\"\r\n                         type=\"primary\"\r\n                         icon=\"el-icon-search\"\r\n                         size=\"small\"\r\n                         @click=\"onSearch\">查询</el-button>\r\n            </div>\r\n          </div>\r\n        </el-drawer>\r\n      </el-form-item>\r\n\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport formItem from './formItem'\r\nimport { createUUID } from '../../util/tools'\r\n\r\nexport default {\r\n  components: { formItem },\r\n  props: {\r\n    //接受父组件传过来的值\r\n    searchFormInputPlaceholder: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    /**\r\n     * 表单配置\r\n     * 示例：\r\n     * [{\r\n     *   label: '用户名', // label文字\r\n     *   prop: 'username', // 字段名\r\n     *   element: 'el-input', // 指定elementui组件\r\n     *   initValue: '阿黄', // 字段初始值\r\n     *   placeholder: '请输入用户名', // elementui组件属性\r\n     *   rules: [{ required: true, message: '必填项', trigger: 'blur' }], // elementui组件属性\r\n     *   events: { // elementui组件方法\r\n     *     input (val) {\r\n     *       console.log(val)\r\n     *     },\r\n     *     ...... // 可添加任意elementui组件支持的方法\r\n     *   }\r\n     *   ...... // 可添加任意elementui组件支持的属性\r\n     * }]\r\n     */\r\n    formOptions: {\r\n      type: Array,\r\n      required: true,\r\n      default () {\r\n        return []\r\n      }\r\n    },\r\n    // 提交按钮项，多个用逗号分隔（search, export, reset）\r\n    btnItems: {\r\n      type: String,\r\n      default () {\r\n        return 'search,reset'\r\n      }\r\n    },\r\n    buttonList: {}\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      drawer: false,\r\n      direction: 'rtl',\r\n      drawerSize: '800px',\r\n\r\n      //form对象\r\n      formData: {\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    newKeys () {\r\n      return this.formOptions.map(v => {\r\n        return createUUID()\r\n      })\r\n    }\r\n  },\r\n\r\n  created () {\r\n    this.addInitValue()\r\n  },\r\n\r\n  methods: {\r\n    showHighFilter () {\r\n      this.drawer = !this.drawer\r\n    },\r\n    // 校验\r\n    onValidate (callback) {\r\n      this.$refs.formRef.validate(valid => {\r\n        if (valid) {\r\n          console.log('提交成功')\r\n          console.log(this.formData)\r\n          callback()\r\n        }\r\n      })\r\n    },\r\n    // 搜索\r\n    onSearch () {\r\n      this.onValidate(() => {\r\n        this.$emit('onSearch', this.formData)\r\n      })\r\n    },\r\n    // 导出\r\n    onExport () {\r\n      this.onValidate(() => {\r\n        this.$emit('onExport', this.formData)\r\n      })\r\n    },\r\n    // 重置\r\n    onReset () {\r\n      debugger\r\n      this.formData.searchVal = ''\r\n      this.$refs.formRef.resetFields()\r\n\r\n    },\r\n    // 添加初始值\r\n    addInitValue () {\r\n      const obj = {}\r\n      this.formOptions.forEach(v => {\r\n        if (v.initValue !== undefined) {\r\n          obj[v.prop] = v.initValue\r\n        }\r\n      })\r\n      this.formData = obj\r\n    },\r\n    getFormData () {\r\n      return this.formData\r\n    }\r\n  }\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n.searchFormCss {\r\n  font-weight: 700;\r\n  color: #606266;\r\n}\r\n.search-form-box {\r\n  float: right;\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n\r\n  .btn-box {\r\n    padding-top: 5px;\r\n    display: flex;\r\n\r\n    button {\r\n      height: 28px;\r\n    }\r\n  }\r\n  .el-form {\r\n    /deep/ .el-form-item__label {\r\n      padding-right: 0;\r\n    }\r\n    .el-form-item {\r\n      margin-bottom: 0;\r\n\r\n      &.is-error {\r\n        margin-bottom: 22px;\r\n      }\r\n    }\r\n    // el-input宽度\r\n    /deep/ .form-item {\r\n      > .el-input:not(.el-date-editor) {\r\n        width: 120px;\r\n      }\r\n    }\r\n    /deep/ .el-select {\r\n      width: 120px;\r\n    }\r\n    /deep/ .el-cascader {\r\n      width: 200px;\r\n    }\r\n  }\r\n}\r\n.popup-right {\r\n  text-align: left;\r\n  line-height: 1.2;\r\n  z-index: 1000;\r\n  .drawer_header {\r\n    background-color: #f6f6f6;\r\n    line-height: 1.2;\r\n    padding: 10px;\r\n    font-size: 14px;\r\n  }\r\n  .drawer_main {\r\n    background-color: #fff;\r\n    padding: 0;\r\n    max-height: 495px;\r\n    min-height: 400px;\r\n    /deep/ .el-scrollbar {\r\n      height: 395px;\r\n    }\r\n    /deep/ .scrollbar-wrap {\r\n      max-height: 410px;\r\n      overflow-x: hidden;\r\n      .el-form {\r\n        padding: 10px;\r\n        .el-form-item {\r\n          margin-bottom: 10px;\r\n          .el-date-editor .el-range-separator {\r\n            width: 25px;\r\n          }\r\n          /deep/ .operator .el-input__inner {\r\n            padding-left: 5px;\r\n            padding-right: 20px;\r\n            text-align: center;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .drawer_footer {\r\n    background-color: #f6f6f6;\r\n    padding: 10px;\r\n    overflow: hidden;\r\n    .left {\r\n      float: left;\r\n    }\r\n    .right {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n"],"sourceRoot":"src\\components"}]}