{"remainingRequest":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\框架\\Blog.Admin-master\\src\\views\\Logs\\Index.vue?vue&type=style&index=0&id=12dc3d0c&scoped=true&lang=css&","dependencies":[{"path":"C:\\框架\\Blog.Admin-master\\src\\views\\Logs\\Index.vue","mtime":1610332596000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.demo-table-expand {\n    font-size: 0;\n}\n\n.demo-table-expand label {\n    width: 90px;\n    color: #99a9bf;\n}\n\n.demo-table-expand .el-form-item {\n    margin-right: 0;\n    margin-bottom: 0;\n    width: 30%;\n}\n\n.EXC {\n    color: red;\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Index.vue","sourceRoot":"src\\views\\Logs","sourcesContent":["<template>\n    <section>\n        <div style=\"display: none1\">\n            <el-form ref=\"form\" label-width=\"80px\" @submit.prevent=\"onSubmit\"\n                     style=\"margin:20px;width:60%;min-width:600px;\">\n                <el-form-item label=\"用户名\">\n                    <el-input v-model=\"userName\"></el-input>\n                </el-form-item>\n\n                <el-form-item label=\"密码\">\n                    <el-input v-model=\"userMessage\"></el-input>\n                </el-form-item>\n            </el-form>\n            <ul v-for=\"(item, index) in messages\" v-bind:key=\"index + 'itemMessage'\">\n                <li><b>Name: </b>{{item.user}}</li>\n                <li><b>Message: </b>{{item.message}}</li>\n            </ul>\n            <el-button type=\"primary\" @click=\"submitCard\">登录</el-button>\n\n            <el-button type=\"primary\" @click=\"getLogs\">查询</el-button>\n        </div>\n\n\n        <el-table\n                :data=\"tableData\"\n                v-loading=\"listLoading\"\n                style=\"width: 100%\">\n            <el-table-column type=\"expand\">\n                <template slot-scope=\"props\">\n                    <el-form label-position=\"left\" inline class=\"demo-table-expand\">\n                        <el-form-item label=\"Datetime\">\n                            <span>{{ props.row.datetime }}</span>\n                        </el-form-item>\n                        <el-form-item label=\"Content\">\n                            <span v-html=\"props.row.content\"></span>\n                        </el-form-item>\n                    </el-form>\n                </template>\n            </el-table-column>\n            <el-table-column\n                    label=\"Datetime\"\n                    prop=\"datetime\">\n            </el-table-column>\n            <el-table-column\n                    label=\"Content\">\n                <template scope=\"scope\">\n                    <span :class=\"scope.row.logColor\"\n                          v-html=\"scope.row.content\"></span>\n                </template>\n            </el-table-column>\n            <!--<el-table-column-->\n                    <!--label=\"IP\"-->\n                    <!--prop=\"ip\">-->\n            <!--</el-table-column>-->\n        </el-table>\n    </section>\n</template>\n\n<script>\n    import util from '../../../util/date'\n    import {getLogs,BaseApiUrl} from '../../api/api';\n    import * as signalR from \"@aspnet/signalr\";\n\n    export default {\n        data() {\n            return {\n                filters: {\n                    LinkUrl: ''\n                },\n                listLoading: true,\n                tableData: [],\n                userName: \"Tom\",\n                userMessage: \"123\",\n                connection: \"\",\n                messages: [],\n                t: \"\"\n\n            }\n        },\n        methods: {\n            //性别显示转换\n            formattdDetail: function (row, column) {\n                return row.tdDetail ? row.tdDetail.substring(0, 20) : \"N/A\";\n            },\n            formatCreateTime: function (row, column) {\n                return (!row.tdCreatetime || row.tdCreatetime == '') ? '' : util.formatDate.format(new Date(row.tdCreatetime), 'yyyy-MM-dd');\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getRoles();\n            },\n            //获取用户列表\n            getRoles() {\n                let thisvue=this;\n                let para = {\n                    page: this.page,\n                    key: this.filters.LinkUrl\n                };\n                this.listLoading = true;\n\n                getLogs(para).then((res) => {\n                    // this.tableData = res.data.response;\n                    thisvue.connection.start().then(() => {\n\n                        thisvue.connection.invoke('GetLatestCount', 1).catch(function (err) {\n                            return console.error(err);\n                        });\n\n                        // transactionConnection.invoke('JoinGroup', 'ClientAccountTransaction').catch(err => console.error(err.toString()));\n\n                    });\n\n\n                });\n            },\n            submitCard: function () {\n                if (this.userName && this.userMessage) {\n                    this.connection.invoke('SendMessage', this.userName, this.userMessage).catch(function (err) {\n                        return console.error(err);\n                    });\n\n                }\n            },\n            getLogs: function () {\n                this.listLoading = true;\n                this.connection.invoke('GetLatestCount', 1).catch(function (err) {\n                    return console.error(err);\n                });\n\n            }\n\n        },\n        created: function () {\n            let thisVue = this;\n\n            thisVue.connection = new signalR.HubConnectionBuilder()\n                .withUrl(`${BaseApiUrl}/api2/chatHub`)\n                .configureLogging(signalR.LogLevel.Information)\n                .build();\n\n\n\n            thisVue.connection.on('ReceiveMessage', function (user, message) {\n                thisVue.messages.push({user, message});\n            });\n\n            thisVue.connection.on('ReceiveUpdate', function (update) {\n                console.info('update success!')\n                thisVue.listLoading = false;\n                thisVue.tableData = update;\n                window.clearInterval(this.t)\n            })\n        },\n        mounted() {\n            this.getRoles();\n\n            //  this.t =  setTimeout(() => {\n            //      this.getLogs();\n            // }, 1000);\n\n        },\n        beforeDestroy() {\n            window.clearInterval(this.t)\n            this.connection.stop();\n        }\n    }\n\n</script>\n\n<style scoped>\n    .demo-table-expand {\n        font-size: 0;\n    }\n\n    .demo-table-expand label {\n        width: 90px;\n        color: #99a9bf;\n    }\n\n    .demo-table-expand .el-form-item {\n        margin-right: 0;\n        margin-bottom: 0;\n        width: 30%;\n    }\n\n    .EXC {\n        color: red;\n    }\n</style>\n"]}]}