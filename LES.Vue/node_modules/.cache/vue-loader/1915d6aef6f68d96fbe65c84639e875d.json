{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\Permission\\Permission.vue?vue&type=template&id=6c8860e5&scoped=true&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\Permission\\Permission.vue","mtime":1612255500592},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"section\",\n    [\n      _c(\"toolbar\", {\n        attrs: { buttonList: _vm.buttonList },\n        on: { callFunction: _vm.callFunction }\n      }),\n      _c(\n        \"el-table\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.listLoading,\n              expression: \"listLoading\"\n            }\n          ],\n          staticStyle: { width: \"100%\" },\n          attrs: {\n            data: _vm.users,\n            height: _vm.tableHeight,\n            \"highlight-current-row\": \"\",\n            \"row-key\": \"Id\",\n            border: \"\",\n            lazy: \"\",\n            size: \"small\",\n            load: _vm.load,\n            \"tree-props\": { children: \"children\", hasChildren: \"hasChildren\" }\n          },\n          on: {\n            \"selection-change\": _vm.selsChange,\n            \"current-change\": _vm.selectCurrentRow\n          }\n        },\n        [\n          _c(\"el-table-column\", {\n            attrs: { type: \"index\", label: \"#\", width: \"80\" }\n          }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"菜单/按钮\", width: \"200\", sortable: \"\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"i\", { staticClass: \"fa\", class: scope.row.Icon }),\n                    _vm._v(\"\\n\\n        \" + _vm._s(scope.row.Name) + \"\\n      \")\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"Code\", label: \"路由地址\", width: \"\", sortable: \"\" }\n          }),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"MName\", label: \"API接口\", width: \"\", sortable: \"\" }\n          }),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"OrderSort\", label: \"Sort\", width: \"\", sortable: \"\" }\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"IsButton\",\n              label: \"是否按钮\",\n              width: \"100\",\n              sortable: \"\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"el-tag\",\n                      {\n                        attrs: {\n                          type: !scope.row.IsButton ? \"success\" : \"danger\",\n                          \"disable-transitions\": \"\"\n                        }\n                      },\n                      [_vm._v(_vm._s(!scope.row.IsButton ? \"否\" : \"是\"))]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"Func\", label: \"按钮事件\", width: \"\", sortable: \"\" }\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"IsHide\",\n              label: \"是否隐藏\",\n              width: \"100\",\n              sortable: \"\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"el-tag\",\n                      {\n                        attrs: {\n                          type: !scope.row.IsHide ? \"success\" : \"danger\",\n                          \"disable-transitions\": \"\"\n                        }\n                      },\n                      [_vm._v(_vm._s(!scope.row.IsHide ? \"否\" : \"是\"))]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"IskeepAlive\",\n              label: \"keepAlive\",\n              width: \"100\",\n              sortable: \"\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"el-tag\",\n                      {\n                        attrs: {\n                          type: !scope.row.IskeepAlive ? \"success\" : \"danger\",\n                          \"disable-transitions\": \"\"\n                        }\n                      },\n                      [_vm._v(_vm._s(!scope.row.IskeepAlive ? \"否\" : \"是\"))]\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"编辑\",\n            visible: _vm.editFormVisible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.editFormVisible = $event\n            }\n          },\n          model: {\n            value: _vm.editFormVisible,\n            callback: function($$v) {\n              _vm.editFormVisible = $$v\n            },\n            expression: \"editFormVisible\"\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"editForm\",\n              attrs: {\n                model: _vm.editForm,\n                \"label-width\": \"80px\",\n                rules: _vm.editFormRules\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"菜单名称\", prop: \"Name\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { \"auto-complete\": \"off\" },\n                    model: {\n                      value: _vm.editForm.Name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.editForm, \"Name\", $$v)\n                      },\n                      expression: \"editForm.Name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"路由地址\", prop: \"Code\" } },\n                [\n                  _c(\n                    \"el-tooltip\",\n                    { attrs: { placement: \"top\" } },\n                    [\n                      _c(\n                        \"div\",\n                        { attrs: { slot: \"content\" }, slot: \"content\" },\n                        [\n                          _vm._v(\n                            \"\\n            如果是目录，请填‘-’字符\\n            \"\n                          ),\n                          _c(\"br\"),\n                          _vm._v(\"如果是按钮，请输入空格即可\\n            \"),\n                          _c(\"br\"),\n                          _vm._v(\n                            \"如果是外链，请带上协议，比如 https://www.baidu.com\\n            \"\n                          ),\n                          _c(\"br\")\n                        ]\n                      ),\n                      _c(\"el-input\", {\n                        attrs: { \"auto-complete\": \"off\" },\n                        model: {\n                          value: _vm.editForm.Code,\n                          callback: function($$v) {\n                            _vm.$set(_vm.editForm, \"Code\", $$v)\n                          },\n                          expression: \"editForm.Code\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"描述\", prop: \"Description\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { \"auto-complete\": \"off\" },\n                    model: {\n                      value: _vm.editForm.Description,\n                      callback: function($$v) {\n                        _vm.$set(_vm.editForm, \"Description\", $$v)\n                      },\n                      expression: \"editForm.Description\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"Icon\", prop: \"Icon\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { \"auto-complete\": \"off\" },\n                    model: {\n                      value: _vm.editForm.Icon,\n                      callback: function($$v) {\n                        _vm.$set(_vm.editForm, \"Icon\", $$v)\n                      },\n                      expression: \"editForm.Icon\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"状态\", prop: \"Enabled\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择状态\" },\n                      model: {\n                        value: _vm.editForm.Enabled,\n                        callback: function($$v) {\n                          _vm.$set(_vm.editForm, \"Enabled\", $$v)\n                        },\n                        expression: \"editForm.Enabled\"\n                      }\n                    },\n                    _vm._l(_vm.statusList, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.Name, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"排序\", prop: \"OrderSort\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"number\", \"auto-complete\": \"off\" },\n                    model: {\n                      value: _vm.editForm.OrderSort,\n                      callback: function($$v) {\n                        _vm.$set(_vm.editForm, \"OrderSort\", $$v)\n                      },\n                      expression: \"editForm.OrderSort\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    prop: \"IsButton\",\n                    label: \"是否按钮\",\n                    width: \"\",\n                    sortable: \"\"\n                  }\n                },\n                [\n                  _c(\"el-switch\", {\n                    model: {\n                      value: _vm.editForm.IsButton,\n                      callback: function($$v) {\n                        _vm.$set(_vm.editForm, \"IsButton\", $$v)\n                      },\n                      expression: \"editForm.IsButton\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"按钮事件\", prop: \"Func\" } },\n                [\n                  _c(\n                    \"el-tooltip\",\n                    {\n                      staticClass: \"item\",\n                      attrs: {\n                        effect: \"dark\",\n                        content: \"只写方法名即可，不用带括号，比如：handleEdit\",\n                        placement: \"top-start\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            filterable: \"\",\n                            \"allow-create\": \"\",\n                            \"default-first-option\": \"\",\n                            placeholder: \"请选择按钮事件或者输入\"\n                          },\n                          model: {\n                            value: _vm.editForm.Func,\n                            callback: function($$v) {\n                              _vm.$set(_vm.editForm, \"Func\", $$v)\n                            },\n                            expression: \"editForm.Func\"\n                          }\n                        },\n                        _vm._l(_vm.funcOptions, function(item) {\n                          return _c(\n                            \"el-option\",\n                            {\n                              key: item.value,\n                              attrs: { label: item.label, value: item.value }\n                            },\n                            [\n                              _c(\"span\", { staticStyle: { float: \"left\" } }, [\n                                _vm._v(_vm._s(item.label))\n                              ]),\n                              _c(\n                                \"span\",\n                                {\n                                  staticStyle: {\n                                    float: \"right\",\n                                    color: \"#8492a6\",\n                                    \"font-size\": \"13px\"\n                                  }\n                                },\n                                [_vm._v(_vm._s(item.value))]\n                              )\n                            ]\n                          )\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    prop: \"IsHide\",\n                    label: \"隐藏菜单\",\n                    width: \"\",\n                    sortable: \"\"\n                  }\n                },\n                [\n                  _c(\"el-switch\", {\n                    model: {\n                      value: _vm.editForm.IsHide,\n                      callback: function($$v) {\n                        _vm.$set(_vm.editForm, \"IsHide\", $$v)\n                      },\n                      expression: \"editForm.IsHide\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    prop: \"IskeepAlive\",\n                    label: \"keepAlive\",\n                    width: \"\",\n                    sortable: \"\"\n                  }\n                },\n                [\n                  _c(\"el-switch\", {\n                    model: {\n                      value: _vm.editForm.IskeepAlive,\n                      callback: function($$v) {\n                        _vm.$set(_vm.editForm, \"IskeepAlive\", $$v)\n                      },\n                      expression: \"editForm.IskeepAlive\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    prop: \"PidArr\",\n                    label: \"父级菜单\",\n                    width: \"\",\n                    sortable: \"\"\n                  }\n                },\n                [\n                  _c(\"el-cascader\", {\n                    staticStyle: { width: \"400px\" },\n                    attrs: {\n                      placeholder: \"请选择，支持搜索功能\",\n                      options: _vm.options,\n                      filterable: \"\",\n                      \"change-on-select\": \"\"\n                    },\n                    model: {\n                      value: _vm.editForm.PidArr,\n                      callback: function($$v) {\n                        _vm.$set(_vm.editForm, \"PidArr\", $$v)\n                      },\n                      expression: \"editForm.PidArr\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    prop: \"Mid\",\n                    label: \"API接口\",\n                    width: \"\",\n                    sortable: \"\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      staticStyle: { width: \"100%\" },\n                      attrs: { placeholder: \"请选择API\" },\n                      model: {\n                        value: _vm.editForm.Mid,\n                        callback: function($$v) {\n                          _vm.$set(_vm.editForm, \"Mid\", $$v)\n                        },\n                        expression: \"editForm.Mid\"\n                      }\n                    },\n                    [\n                      _c(\"el-option\", {\n                        key: 0,\n                        attrs: { value: 0, label: \"无需api\" }\n                      }),\n                      _vm._l(_vm.modules, function(item) {\n                        return _c(\n                          \"el-option\",\n                          {\n                            key: item.Id,\n                            attrs: { value: item.Id, label: item.LinkUrl }\n                          },\n                          [\n                            _c(\"span\", { staticStyle: { float: \"left\" } }, [\n                              _vm._v(_vm._s(item.LinkUrl))\n                            ]),\n                            _c(\n                              \"span\",\n                              {\n                                staticStyle: {\n                                  float: \"right\",\n                                  color: \"#8492a6\",\n                                  \"font-size\": \"13px\"\n                                }\n                              },\n                              [_vm._v(_vm._s(item.Name))]\n                            )\n                          ]\n                        )\n                      })\n                    ],\n                    2\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.editFormVisible = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.editLoading },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.editSubmit($event)\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"新增\",\n            visible: _vm.addFormVisible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.addFormVisible = $event\n            }\n          },\n          model: {\n            value: _vm.addFormVisible,\n            callback: function($$v) {\n              _vm.addFormVisible = $$v\n            },\n            expression: \"addFormVisible\"\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"addForm\",\n              attrs: {\n                model: _vm.addForm,\n                \"label-width\": \"80px\",\n                rules: _vm.addFormRules\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"菜单名称\", prop: \"Name\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { \"auto-complete\": \"off\" },\n                    model: {\n                      value: _vm.addForm.Name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.addForm, \"Name\", $$v)\n                      },\n                      expression: \"addForm.Name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"菜单类型\" } },\n                [\n                  _c(\n                    \"el-radio-group\",\n                    {\n                      on: { change: _vm.clkType },\n                      model: {\n                        value: _vm.addForm.MenuType,\n                        callback: function($$v) {\n                          _vm.$set(_vm.addForm, \"MenuType\", $$v)\n                        },\n                        expression: \"addForm.MenuType\"\n                      }\n                    },\n                    [\n                      _c(\"el-radio\", { attrs: { label: \"目录\" } }),\n                      _c(\"el-radio\", { attrs: { label: \"页面\" } }),\n                      _c(\"el-radio\", { attrs: { label: \"按钮\" } })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"路由地址\", prop: \"Code\" } },\n                [\n                  _c(\n                    \"el-tooltip\",\n                    { attrs: { placement: \"top\" } },\n                    [\n                      _c(\n                        \"div\",\n                        { attrs: { slot: \"content\" }, slot: \"content\" },\n                        [\n                          _vm._v(\n                            \"\\n            如果是目录，请填‘-’字符\\n            \"\n                          ),\n                          _c(\"br\"),\n                          _vm._v(\"如果是按钮，请输入空格即可\\n            \"),\n                          _c(\"br\"),\n                          _vm._v(\n                            \"如果是外链，请带上协议，比如 https://www.baidu.com\\n            \"\n                          ),\n                          _c(\"br\")\n                        ]\n                      ),\n                      _c(\"el-input\", {\n                        attrs: { \"auto-complete\": \"off\" },\n                        model: {\n                          value: _vm.addForm.Code,\n                          callback: function($$v) {\n                            _vm.$set(_vm.addForm, \"Code\", $$v)\n                          },\n                          expression: \"addForm.Code\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"描述\", prop: \"Description\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { \"auto-complete\": \"off\" },\n                    model: {\n                      value: _vm.addForm.Description,\n                      callback: function($$v) {\n                        _vm.$set(_vm.addForm, \"Description\", $$v)\n                      },\n                      expression: \"addForm.Description\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"状态\", prop: \"Enabled\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择状态\" },\n                      model: {\n                        value: _vm.addForm.Enabled,\n                        callback: function($$v) {\n                          _vm.$set(_vm.addForm, \"Enabled\", $$v)\n                        },\n                        expression: \"addForm.Enabled\"\n                      }\n                    },\n                    _vm._l(_vm.statusList, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.value,\n                        attrs: { label: item.Name, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"排序\", prop: \"OrderSort\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { \"auto-complete\": \"off\" },\n                    model: {\n                      value: _vm.addForm.OrderSort,\n                      callback: function($$v) {\n                        _vm.$set(_vm.addForm, \"OrderSort\", $$v)\n                      },\n                      expression: \"addForm.OrderSort\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    prop: \"IsButton\",\n                    label: \"是否按钮\",\n                    width: \"\",\n                    sortable: \"\"\n                  }\n                },\n                [\n                  _c(\"el-switch\", {\n                    model: {\n                      value: _vm.addForm.IsButton,\n                      callback: function($$v) {\n                        _vm.$set(_vm.addForm, \"IsButton\", $$v)\n                      },\n                      expression: \"addForm.IsButton\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"按钮事件\", prop: \"Func\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        filterable: \"\",\n                        \"allow-create\": \"\",\n                        \"default-first-option\": \"\",\n                        placeholder: \"请选择按钮事件或者输入\"\n                      },\n                      model: {\n                        value: _vm.addForm.Func,\n                        callback: function($$v) {\n                          _vm.$set(_vm.addForm, \"Func\", $$v)\n                        },\n                        expression: \"addForm.Func\"\n                      }\n                    },\n                    _vm._l(_vm.funcOptions, function(item) {\n                      return _c(\n                        \"el-option\",\n                        {\n                          key: item.value,\n                          attrs: { label: item.label, value: item.value }\n                        },\n                        [\n                          _c(\"span\", { staticStyle: { float: \"left\" } }, [\n                            _vm._v(_vm._s(item.label))\n                          ]),\n                          _c(\n                            \"span\",\n                            {\n                              staticStyle: {\n                                float: \"right\",\n                                color: \"#8492a6\",\n                                \"font-size\": \"13px\"\n                              }\n                            },\n                            [_vm._v(_vm._s(item.value))]\n                          )\n                        ]\n                      )\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    prop: \"IsHide\",\n                    label: \"是否隐藏\",\n                    width: \"\",\n                    sortable: \"\"\n                  }\n                },\n                [\n                  _c(\"el-switch\", {\n                    model: {\n                      value: _vm.addForm.IsHide,\n                      callback: function($$v) {\n                        _vm.$set(_vm.addForm, \"IsHide\", $$v)\n                      },\n                      expression: \"addForm.IsHide\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    prop: \"IskeepAlive\",\n                    label: \"keepAlive\",\n                    width: \"\",\n                    sortable: \"\"\n                  }\n                },\n                [\n                  _c(\"el-switch\", {\n                    model: {\n                      value: _vm.addForm.IskeepAlive,\n                      callback: function($$v) {\n                        _vm.$set(_vm.addForm, \"IskeepAlive\", $$v)\n                      },\n                      expression: \"addForm.IskeepAlive\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    prop: \"PidArr\",\n                    label: \"父级菜单\",\n                    width: \"\",\n                    sortable: \"\"\n                  }\n                },\n                [\n                  _c(\"el-cascader\", {\n                    staticStyle: { width: \"400px\" },\n                    attrs: {\n                      options: _vm.options,\n                      filterable: \"\",\n                      \"change-on-select\": \"\"\n                    },\n                    model: {\n                      value: _vm.addForm.PidArr,\n                      callback: function($$v) {\n                        _vm.$set(_vm.addForm, \"PidArr\", $$v)\n                      },\n                      expression: \"addForm.PidArr\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    prop: \"Mid\",\n                    label: \"API接口\",\n                    width: \"\",\n                    sortable: \"\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      staticStyle: { width: \"100%\" },\n                      attrs: { filterable: \"\", placeholder: \"请选择API\" },\n                      model: {\n                        value: _vm.addForm.Mid,\n                        callback: function($$v) {\n                          _vm.$set(_vm.addForm, \"Mid\", $$v)\n                        },\n                        expression: \"addForm.Mid\"\n                      }\n                    },\n                    [\n                      _c(\"el-option\", {\n                        key: 0,\n                        attrs: { value: 0, label: \"无需api\" }\n                      }),\n                      _vm._l(_vm.modules, function(item) {\n                        return _c(\n                          \"el-option\",\n                          {\n                            key: item.Id,\n                            attrs: { value: item.Id, label: item.LinkUrl }\n                          },\n                          [\n                            _c(\"span\", { staticStyle: { float: \"left\" } }, [\n                              _vm._v(_vm._s(item.LinkUrl))\n                            ]),\n                            _c(\n                              \"span\",\n                              {\n                                staticStyle: {\n                                  float: \"right\",\n                                  color: \"#8492a6\",\n                                  \"font-size\": \"13px\"\n                                }\n                              },\n                              [_vm._v(_vm._s(item.Name))]\n                            )\n                          ]\n                        )\n                      })\n                    ],\n                    2\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.addFormVisible = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.addLoading },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.addSubmit($event)\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}