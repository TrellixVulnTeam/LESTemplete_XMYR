{"remainingRequest":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\框架\\Blog.Admin-master\\src\\views\\Permission\\Permission.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\框架\\Blog.Admin-master\\src\\views\\Permission\\Permission.vue","mtime":1610332596000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport util from \"../../../util/date\";\nimport {\n  getPermissionListPage,\n  getPermissionTreeTable,\n  removePermission,\n  editPermission,\n  addPermission,\n  getPermissionTree,\n  getModuleListPage\n} from \"../../api/api\";\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\n\nexport default {\n  components: { Toolbar },\n  data() {\n    return {\n      buttonList: [],\n      currentRow: null,\n      options: [],\n      filters: {\n        Name: \"\"\n      },\n      users: [],\n      modules: [], //接口api列表\n      statusList: [\n        { Name: \"激活\", value: true },\n        { Name: \"禁用\", value: false }\n      ],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [], //列表选中列\n\n      addDialogFormVisible: false,\n      editFormVisible: false, //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        Name: [{ required: true, message: \"请输入菜单名称\", trigger: \"blur\" }],\n        Code: [{ required: true, message: \"请输入路由地址\", trigger: \"blur\" }]\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        Mid: 0,\n        OrderSort: 0,\n        PidArr: [],\n        CreateBy: \"\",\n        Name: \"\",\n        Code: \"\",\n        Description: \"\",\n        Icon: \"\",\n        Func: \"\",\n        Enabled: true,\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      },\n\n      addFormVisible: false, //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        Name: [{ required: true, message: \"请输入菜单名称\", trigger: \"blur\" }],\n        Code: [{ required: true, message: \"请输入路由地址\", trigger: \"blur\" }]\n      },\n      //新增界面数据\n      addForm: {\n        CreateBy: \"\",\n        CreateId: \"\",\n        PidArr: [],\n        Mid: 0,\n        OrderSort: 0,\n        Name: \"\",\n        Code: \"\",\n        Description: \"\",\n        Icon: \"\",\n        Func: \"\",\n        Enabled: true,\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      }\n    };\n  },\n  methods: {\n    selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    clkType() {\n      this.addForm.IsButton = false;\n      if (this.addForm.MenuType == \"页面\") {\n        this.addForm.Code = \"\";\n      } else if (this.addForm.MenuType == \"目录\") {\n        this.addForm.Code = \"-\";\n      } else if (this.addForm.MenuType == \"按钮\") {\n        this.addForm.Code = \" \";\n        this.addForm.IsButton = true;\n      }\n    },\n    callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    //性别显示转换\n    formatEnabled: function(row, column) {\n      return row.Enabled ? \"正常\" : \"未知\";\n    },\n    formatCreateTime: function(row, column) {\n      return !row.CreateTime || row.CreateTime == \"\"\n        ? \"\"\n        : util.formatDate.format(new Date(row.CreateTime), \"yyyy-MM-dd\");\n    },\n    handleCurrentChange(val) {\n      this.page = val;\n      this.getPermissions();\n    },\n    load(tree, treeNode, resolve) {\n      let para = {\n        page: this.page,\n        f: tree.Id,\n        key: this.filters.Name\n      };\n      getPermissionTreeTable(para).then(res => {\n        resolve(res.data.response);\n      });\n    },\n    //获取用户列表\n    getPermissions() {\n      let para = {\n        page: this.page,\n        key: this.filters.Name\n      };\n      this.listLoading = true;\n\n      //NProgress.start();\n      getPermissionTreeTable(para).then(res => {\n        this.users = res.data.response;\n        this.listLoading = false;\n        //NProgress.done();\n      });\n    },\n    //删除\n    handleDel() {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n        type: \"warning\"\n      })\n        .then(() => {\n          this.listLoading = true;\n          //NProgress.start();\n          let para = { id: row.Id };\n          removePermission(para).then(res => {\n            if (util.isEmt.format(res)) {\n              this.listLoading = false;\n              return;\n            }\n            this.listLoading = false;\n            //NProgress.done();\n            if (res.data.success) {\n              this.$message({\n                message: \"删除成功\",\n                type: \"success\"\n              });\n            } else {\n              this.$message({\n                message: res.data.msg,\n                type: \"error\"\n              });\n            }\n\n            this.getPermissions();\n          });\n        })\n        .catch(() => {});\n    },\n    //显示编辑界面\n    handleEdit() {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      let that = this;\n      that.editLoading = true;\n\n      this.editFormVisible = true;\n      this.editForm = {};\n\n      this.options = [];\n      let para = { pid: row.Id };\n      getPermissionTree(para).then(res => {\n        this.options.push(res.data.response);\n        that.editForm = Object.assign({}, row);\n        that.editLoading = false;\n      });\n    },\n    //显示新增界面\n    handleAdd() {\n      this.options = [];\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: \"\",\n        CreateId: \"\",\n        PidArr: [],\n        Name: \"\",\n        Code: \"\",\n        OrderSort: 0,\n        Description: \"\",\n        Enabled: true,\n        Icon: \"\",\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      };\n\n      let para = { pid: 0 };\n      getPermissionTree(para).then(res => {\n        this.options.push(res.data.response);\n      });\n    },\n    //编辑\n    editSubmit: function() {\n      this.$refs.editForm.validate(valid => {\n        if (valid) {\n          this.$confirm(\"确认提交吗？\", \"提示\", {}).then(() => {\n            this.editLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.editForm);\n\n            para.ModifyTime = util.formatDate.format(new Date(), \"yyyy-MM-dd\");\n\n            para.Pid = para.PidArr.pop();\n\n            if (para.Id == para.Pid) {\n              this.$message({\n                message: \"警告，父节点不能是自己！\",\n                type: \"error\"\n              });\n\n              this.editLoading = false;\n              return;\n            }\n\n            editPermission(para).then(res => {\n              if (util.isEmt.format(res)) {\n                this.editLoading = false;\n                return;\n              }\n              this.editLoading = false;\n              if (res.data.success) {\n                this.editLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n                this.$refs[\"editForm\"].resetFields();\n                this.editFormVisible = false;\n                this.getPermissions();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function() {\n      let _this = this;\n      this.$refs.addForm.validate(valid => {\n        if (valid) {\n          this.$confirm(\"确认提交吗？\", \"提示\", {}).then(() => {\n            this.addLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.addForm);\n\n            para.CreateTime = util.formatDate.format(new Date(), \"yyyy-MM-dd\");\n            para.ModifyTime = para.CreateTime;\n            para.IsDeleted = false;\n\n            para.Pid = para.PidArr.pop();\n\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              this.$message({\n                message: \"用户信息为空，先登录\",\n                type: \"error\"\n              });\n              _this.$router.replace(\n                _this.$route.query.redirect ? _this.$route.query.redirect : \"/\"\n              );\n            }\n\n            addPermission(para).then(res => {\n              if (util.isEmt.format(res)) {\n                this.addLoading = false;\n                return;\n              }\n              this.addLoading = false;\n              if (res.data.success) {\n                this.addLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n                this.$refs[\"addForm\"].resetFields();\n                this.addFormVisible = false;\n                this.getPermissions();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    selsChange: function(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function() {\n      this.$message({\n        message: \"该功能未开放\",\n        type: \"warning\"\n      });\n    }\n  },\n  mounted() {\n    this.getPermissions();\n\n    getModuleListPage().then(res => {\n      this.modules = res.data.response.data;\n    });\n\n    let routers = window.localStorage.router\n      ? JSON.parse(window.localStorage.router)\n      : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n};\n",{"version":3,"sources":["Permission.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Permission.vue","sourceRoot":"src\\views\\Permission","sourcesContent":["<template>\n  <section>\n    <!--工具条-->\n    <toolbar :buttonList=\"buttonList\" @callFunction=\"callFunction\"></toolbar>\n\n    <!--列表-->\n    <el-table\n      :data=\"users\"\n      highlight-current-row\n      v-loading=\"listLoading\"\n      @selection-change=\"selsChange\"\n      @current-change=\"selectCurrentRow\"\n      row-key=\"Id\"\n      border\n      lazy\n      :load=\"load\"\n      :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n      style=\"width: 100%;\"\n    >\n      <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n      <el-table-column type=\"index\" width=\"80\"></el-table-column>\n      <el-table-column label=\"菜单/按钮\" width=\"200\" sortable>\n        <template slot-scope=\"scope\">\n          <i class=\"fa\" :class=\"scope.row.Icon\"></i>\n\n          {{scope.row.Name}}\n        </template>\n      </el-table-column>\n      <!-- <el-table-column prop=\"PnameArr\" label=\"父节点\" width=\"\" sortable>\n      </el-table-column>-->\n      <el-table-column prop=\"Code\" label=\"路由地址\" width sortable></el-table-column>\n      <el-table-column prop=\"MName\" label=\"API接口\" width sortable></el-table-column>\n      <el-table-column prop=\"OrderSort\" label=\"Sort\" width sortable></el-table-column>\n      <el-table-column prop=\"IsButton\" label=\"是否按钮\" width=\"100\" sortable>\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"!scope.row.IsButton  ? 'success' : 'danger'\"\n            disable-transitions\n          >{{!scope.row.IsButton ? \"否\":\"是\"}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"Func\" label=\"按钮事件\" width sortable></el-table-column>\n      <el-table-column prop=\"IsHide\" label=\"是否隐藏\" width=\"100\" sortable>\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"!scope.row.IsHide  ? 'success' : 'danger'\"\n            disable-transitions\n          >{{!scope.row.IsHide ? \"否\":\"是\"}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"IskeepAlive\" label=\"keepAlive\" width=\"100\" sortable>\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"!scope.row.IskeepAlive  ? 'success' : 'danger'\"\n            disable-transitions\n          >{{!scope.row.IskeepAlive ? \"否\":\"是\"}}</el-tag>\n        </template>\n      </el-table-column>\n      <!-- <el-table-column label=\"操作\" width=\"150\">\n                <template scope=\"scope\">\n                    <el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n                </template>\n      </el-table-column>-->\n    </el-table>\n\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\">\n      <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n      <el-pagination\n        layout=\"prev, pager, next\"\n        @current-change=\"handleCurrentChange\"\n        :page-size=\"50\"\n        :total=\"total\"\n        style=\"float:right;\"\n      ></el-pagination>\n    </el-col>\n\n    <!--编辑界面-->\n    <el-dialog\n      title=\"编辑\"\n      :visible.sync=\"editFormVisible\"\n      v-model=\"editFormVisible\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"editForm\" label-width=\"80px\" :rules=\"editFormRules\" ref=\"editForm\">\n        <el-form-item label=\"菜单名称\" prop=\"Name\">\n          <el-input v-model=\"editForm.Name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"路由地址\" prop=\"Code\">\n          <el-tooltip placement=\"top\">\n            <div slot=\"content\">\n              如果是目录，请填‘-’字符\n              <br />如果是按钮，请输入空格即可\n              <br />如果是外链，请带上协议，比如 https://www.baidu.com\n              <br />\n            </div>\n            <el-input v-model=\"editForm.Code\" auto-complete=\"off\"></el-input>\n          </el-tooltip>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"Description\">\n          <el-input v-model=\"editForm.Description\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Icon\" prop=\"Icon\">\n          <el-input v-model=\"editForm.Icon\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"Enabled\">\n          <el-select v-model=\"editForm.Enabled\" placeholder=\"请选择状态\">\n            <el-option\n              v-for=\"item in statusList\"\n              :key=\"item.value\"\n              :label=\"item.Name\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"排序\" prop=\"OrderSort\">\n          <el-input type=\"number\" v-model=\"editForm.OrderSort\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"IsButton\" label=\"是否按钮\" width sortable>\n          <el-switch v-model=\"editForm.IsButton\"></el-switch>\n        </el-form-item>\n        <el-form-item label=\"按钮事件\" prop=\"Func\">\n          <el-tooltip\n            class=\"item\"\n            effect=\"dark\"\n            content=\"只写方法名即可，不用带括号，比如：handleEdit\"\n            placement=\"top-start\"\n          >\n            <el-input v-model=\"editForm.Func\" auto-complete=\"off\"></el-input>\n          </el-tooltip>\n        </el-form-item>\n        <el-form-item prop=\"IsHide\" label=\"隐藏菜单\" width sortable>\n          <el-switch v-model=\"editForm.IsHide\"></el-switch>\n        </el-form-item>\n        <el-form-item prop=\"IskeepAlive\" label=\"keepAlive\" width sortable>\n          <el-switch v-model=\"editForm.IskeepAlive\"></el-switch>\n        </el-form-item>\n        <el-form-item prop=\"PidArr\" label=\"父级菜单\" width sortable>\n          <el-cascader\n            placeholder=\"请选择，支持搜索功能\"\n            style=\"width: 400px\"\n            v-model=\"editForm.PidArr\"\n            :options=\"options\"\n            filterable\n            change-on-select\n          ></el-cascader>\n        </el-form-item>\n        <el-form-item prop=\"Mid\" label=\"API接口\" width sortable>\n          <el-select style=\"width: 100%;\" v-model=\"editForm.Mid\" placeholder=\"请选择API\">\n            <el-option :key=\"0\" :value=\"0\" :label=\"'无需api'\"></el-option>\n            <el-option\n              v-for=\"item in modules\"\n              :key=\"item.Id\"\n              :value=\"item.Id\"\n              :label=\"item.LinkUrl\"\n            >\n              <span style=\"float: left\">{{ item.LinkUrl }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.Name }}</span>\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!--新增界面-->\n    <el-dialog\n      title=\"新增\"\n      :visible.sync=\"addFormVisible\"\n      v-model=\"addFormVisible\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\n        <el-form-item label=\"菜单名称\" prop=\"Name\">\n          <el-input v-model=\"addForm.Name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"菜单类型\">\n          <el-radio-group @change=\"clkType\" v-model=\"addForm.MenuType\">\n            <el-radio label=\"目录\"></el-radio>\n            <el-radio label=\"页面\"></el-radio>\n            <el-radio label=\"按钮\"></el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <el-form-item label=\"路由地址\" prop=\"Code\">\n          <el-tooltip placement=\"top\">\n            <div slot=\"content\">\n              如果是目录，请填‘-’字符\n              <br />如果是按钮，请输入空格即可\n              <br />如果是外链，请带上协议，比如 https://www.baidu.com\n              <br />\n            </div>\n            <el-input v-model=\"addForm.Code\" auto-complete=\"off\"></el-input>\n          </el-tooltip>\n\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"Description\">\n          <el-input v-model=\"addForm.Description\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"Enabled\">\n          <el-select v-model=\"addForm.Enabled\" placeholder=\"请选择状态\">\n            <el-option\n              v-for=\"item in statusList\"\n              :key=\"item.value\"\n              :label=\"item.Name\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"排序\" prop=\"OrderSort\">\n          <el-input v-model=\"addForm.OrderSort\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"IsButton\" label=\"是否按钮\" width sortable>\n          <el-switch v-model=\"addForm.IsButton\"></el-switch>\n        </el-form-item>\n        <el-form-item label=\"按钮事件\" prop=\"Func\">\n          <el-input v-model=\"addForm.Func\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"IsHide\" label=\"隐藏菜单\" width sortable>\n          <el-switch v-model=\"addForm.IsHide\"></el-switch>\n        </el-form-item>\n        <el-form-item prop=\"IskeepAlive\" label=\"keepAlive\" width sortable>\n          <el-switch v-model=\"addForm.IskeepAlive\"></el-switch>\n        </el-form-item>\n        <el-form-item prop=\"PidArr\" label=\"父级菜单\" width sortable>\n          <el-cascader\n            style=\"width: 400px\"\n            v-model=\"addForm.PidArr\"\n            :options=\"options\"\n            filterable\n            change-on-select\n          ></el-cascader>\n        </el-form-item>\n\n        <el-form-item prop=\"Mid\" label=\"API接口\" width sortable>\n          <el-select style=\"width: 100%;\" v-model=\"addForm.Mid\" placeholder=\"请选择API\">\n            <el-option :key=\"0\" :value=\"0\" :label=\"'无需api'\"></el-option>\n            <el-option\n              v-for=\"item in modules\"\n              :key=\"item.Id\"\n              :value=\"item.Id\"\n              :label=\"item.LinkUrl\"\n            >\n              <span style=\"float: left\">{{ item.LinkUrl }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.Name }}</span>\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n  </section>\n</template>\n\n<script>\nimport util from \"../../../util/date\";\nimport {\n  getPermissionListPage,\n  getPermissionTreeTable,\n  removePermission,\n  editPermission,\n  addPermission,\n  getPermissionTree,\n  getModuleListPage\n} from \"../../api/api\";\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\n\nexport default {\n  components: { Toolbar },\n  data() {\n    return {\n      buttonList: [],\n      currentRow: null,\n      options: [],\n      filters: {\n        Name: \"\"\n      },\n      users: [],\n      modules: [], //接口api列表\n      statusList: [\n        { Name: \"激活\", value: true },\n        { Name: \"禁用\", value: false }\n      ],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [], //列表选中列\n\n      addDialogFormVisible: false,\n      editFormVisible: false, //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        Name: [{ required: true, message: \"请输入菜单名称\", trigger: \"blur\" }],\n        Code: [{ required: true, message: \"请输入路由地址\", trigger: \"blur\" }]\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        Mid: 0,\n        OrderSort: 0,\n        PidArr: [],\n        CreateBy: \"\",\n        Name: \"\",\n        Code: \"\",\n        Description: \"\",\n        Icon: \"\",\n        Func: \"\",\n        Enabled: true,\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      },\n\n      addFormVisible: false, //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        Name: [{ required: true, message: \"请输入菜单名称\", trigger: \"blur\" }],\n        Code: [{ required: true, message: \"请输入路由地址\", trigger: \"blur\" }]\n      },\n      //新增界面数据\n      addForm: {\n        CreateBy: \"\",\n        CreateId: \"\",\n        PidArr: [],\n        Mid: 0,\n        OrderSort: 0,\n        Name: \"\",\n        Code: \"\",\n        Description: \"\",\n        Icon: \"\",\n        Func: \"\",\n        Enabled: true,\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      }\n    };\n  },\n  methods: {\n    selectCurrentRow(val) {\n      this.currentRow = val;\n    },\n    clkType() {\n      this.addForm.IsButton = false;\n      if (this.addForm.MenuType == \"页面\") {\n        this.addForm.Code = \"\";\n      } else if (this.addForm.MenuType == \"目录\") {\n        this.addForm.Code = \"-\";\n      } else if (this.addForm.MenuType == \"按钮\") {\n        this.addForm.Code = \" \";\n        this.addForm.IsButton = true;\n      }\n    },\n    callFunction(item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    //性别显示转换\n    formatEnabled: function(row, column) {\n      return row.Enabled ? \"正常\" : \"未知\";\n    },\n    formatCreateTime: function(row, column) {\n      return !row.CreateTime || row.CreateTime == \"\"\n        ? \"\"\n        : util.formatDate.format(new Date(row.CreateTime), \"yyyy-MM-dd\");\n    },\n    handleCurrentChange(val) {\n      this.page = val;\n      this.getPermissions();\n    },\n    load(tree, treeNode, resolve) {\n      let para = {\n        page: this.page,\n        f: tree.Id,\n        key: this.filters.Name\n      };\n      getPermissionTreeTable(para).then(res => {\n        resolve(res.data.response);\n      });\n    },\n    //获取用户列表\n    getPermissions() {\n      let para = {\n        page: this.page,\n        key: this.filters.Name\n      };\n      this.listLoading = true;\n\n      //NProgress.start();\n      getPermissionTreeTable(para).then(res => {\n        this.users = res.data.response;\n        this.listLoading = false;\n        //NProgress.done();\n      });\n    },\n    //删除\n    handleDel() {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n        type: \"warning\"\n      })\n        .then(() => {\n          this.listLoading = true;\n          //NProgress.start();\n          let para = { id: row.Id };\n          removePermission(para).then(res => {\n            if (util.isEmt.format(res)) {\n              this.listLoading = false;\n              return;\n            }\n            this.listLoading = false;\n            //NProgress.done();\n            if (res.data.success) {\n              this.$message({\n                message: \"删除成功\",\n                type: \"success\"\n              });\n            } else {\n              this.$message({\n                message: res.data.msg,\n                type: \"error\"\n              });\n            }\n\n            this.getPermissions();\n          });\n        })\n        .catch(() => {});\n    },\n    //显示编辑界面\n    handleEdit() {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      let that = this;\n      that.editLoading = true;\n\n      this.editFormVisible = true;\n      this.editForm = {};\n\n      this.options = [];\n      let para = { pid: row.Id };\n      getPermissionTree(para).then(res => {\n        this.options.push(res.data.response);\n        that.editForm = Object.assign({}, row);\n        that.editLoading = false;\n      });\n    },\n    //显示新增界面\n    handleAdd() {\n      this.options = [];\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: \"\",\n        CreateId: \"\",\n        PidArr: [],\n        Name: \"\",\n        Code: \"\",\n        OrderSort: 0,\n        Description: \"\",\n        Enabled: true,\n        Icon: \"\",\n        IsButton: false,\n        IsHide: false,\n        IskeepAlive: false\n      };\n\n      let para = { pid: 0 };\n      getPermissionTree(para).then(res => {\n        this.options.push(res.data.response);\n      });\n    },\n    //编辑\n    editSubmit: function() {\n      this.$refs.editForm.validate(valid => {\n        if (valid) {\n          this.$confirm(\"确认提交吗？\", \"提示\", {}).then(() => {\n            this.editLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.editForm);\n\n            para.ModifyTime = util.formatDate.format(new Date(), \"yyyy-MM-dd\");\n\n            para.Pid = para.PidArr.pop();\n\n            if (para.Id == para.Pid) {\n              this.$message({\n                message: \"警告，父节点不能是自己！\",\n                type: \"error\"\n              });\n\n              this.editLoading = false;\n              return;\n            }\n\n            editPermission(para).then(res => {\n              if (util.isEmt.format(res)) {\n                this.editLoading = false;\n                return;\n              }\n              this.editLoading = false;\n              if (res.data.success) {\n                this.editLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n                this.$refs[\"editForm\"].resetFields();\n                this.editFormVisible = false;\n                this.getPermissions();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function() {\n      let _this = this;\n      this.$refs.addForm.validate(valid => {\n        if (valid) {\n          this.$confirm(\"确认提交吗？\", \"提示\", {}).then(() => {\n            this.addLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.addForm);\n\n            para.CreateTime = util.formatDate.format(new Date(), \"yyyy-MM-dd\");\n            para.ModifyTime = para.CreateTime;\n            para.IsDeleted = false;\n\n            para.Pid = para.PidArr.pop();\n\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              this.$message({\n                message: \"用户信息为空，先登录\",\n                type: \"error\"\n              });\n              _this.$router.replace(\n                _this.$route.query.redirect ? _this.$route.query.redirect : \"/\"\n              );\n            }\n\n            addPermission(para).then(res => {\n              if (util.isEmt.format(res)) {\n                this.addLoading = false;\n                return;\n              }\n              this.addLoading = false;\n              if (res.data.success) {\n                this.addLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: \"success\"\n                });\n                this.$refs[\"addForm\"].resetFields();\n                this.addFormVisible = false;\n                this.getPermissions();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: \"error\"\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    selsChange: function(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function() {\n      this.$message({\n        message: \"该功能未开放\",\n        type: \"warning\"\n      });\n    }\n  },\n  mounted() {\n    this.getPermissions();\n\n    getModuleListPage().then(res => {\n      this.modules = res.data.response.data;\n    });\n\n    let routers = window.localStorage.router\n      ? JSON.parse(window.localStorage.router)\n      : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n};\n</script>\n\n<style scoped>\n</style>\n"]}]}