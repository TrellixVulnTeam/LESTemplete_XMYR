{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\SalverManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\SalverManager.vue","mtime":1611562285889},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport util from '../../../util/date'\r\nimport { getCodeSetListPage, removeCodeSet, editCodeSet, addCodeSet } from '../../api/api';\r\nimport { getButtonList } from \"../../promissionRouter\";\r\nimport Toolbar from \"../../components/ToolbarButton\";\r\nimport SearchForm from \"../../components/SearchForm\";\r\nimport ToolbarExport from \"../../components/ToolbarExport\";\r\nimport { formatDate } from '../../../util/tools'\r\n\r\n\r\nexport default {\r\n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件\r\n  data () {\r\n    return {\r\n      //导出组件相关\r\n      exportFileName: '码表集信息',//要导出的文件名\r\n      currentPageData: [],//当前页面的列表数据\r\n      tHeader: ['代码编码', '代码名称', '说明'],//当前页面列表的表头汉字数组，导出用\r\n      filterVal: ['code', 'name', 'note'],//当前页面列表的表头属性数组，导出用\r\n\r\n      //搜索框相关\r\n      drawerSize: \"450px\",//drawner宽度设置\r\n      searchFormInputPlaceholder: '请输入代码编码/名称',//要给子搜索组件传递的值\r\n      formOptions: [\r\n        {\r\n          label: '代码编码',\r\n          prop: 'code',\r\n          element: 'el-input'\r\n        },\r\n        {\r\n          label: '代码名称',\r\n          prop: 'name',\r\n          element: 'el-input'\r\n        },\r\n        {\r\n          label: '说明',\r\n          prop: 'note',\r\n          element: 'el-input'\r\n        }\r\n      ],\r\n\r\n\r\n      tableHeight: window.innerHeight - 230, // 500, // 这个值不能设置小了，设置小了，界面就不对了\r\n\r\n      isAdd: false, // 是否是新增\r\n      dialogTitle: '',\r\n\r\n      filters: {\r\n        name: ''\r\n      },\r\n      CodeSets: [],\r\n      roles: [],\r\n      total: 0,\r\n      buttonList: [],\r\n      currentRow: null,\r\n      page: 1,\r\n      pageSize: 10,\r\n      listLoading: false,\r\n      sels: [],//列表选中列\r\n\r\n      addFormVisible: false,//新增界面是否显示\r\n      addLoading: false,\r\n      addFormRules: {\r\n        uLoginName: [\r\n          { required: true, message: '请输入登录名', trigger: 'blur' }\r\n        ],\r\n        uRealName: [\r\n          { required: true, message: '请输入昵称', trigger: 'blur' }\r\n        ],\r\n        uLoginPWD: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ],\r\n        birth: [\r\n          { required: true, message: '请填写生日', trigger: 'blur' }\r\n        ]\r\n      },\r\n      //新增界面数据\r\n      addForm: {\r\n        id: 0,\r\n        name: '',\r\n        code: '',\r\n        note: '',\r\n        delFlag: false\r\n      }\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    // 设置索引\r\n    indexMethod (index) {\r\n      return (this.page - 1) * this.pageSize + 1 + index\r\n    },\r\n    // 时间格式化\r\n    formatterDateTime (row, column, cellValue, index) {\r\n      if (cellValue === null || cellValue === '') {\r\n        return ''\r\n      }\r\n      var t = cellValue.slice(6, 19) // 截取字符串\r\n      var NewDtime = new Date(parseInt(t))\r\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss')\r\n    },\r\n    selectCurrentRow (val) {\r\n      this.currentRow = val;\r\n    },\r\n    callFunction (item) {\r\n      this.filters = {\r\n        name: item.search\r\n      };\r\n      this[item.Func].apply(this, item);\r\n    },\r\n    //性别显示转换\r\n    formatSex: function (row, column) {\r\n      return row.sex == 1 ? '男' : row.sex == 0 ? '女' : '未知';\r\n    },\r\n    formatBirth: function (row, column) {\r\n      return (!row.birth || row.birth == '') ? '' : util.formatDate.format(new Date(row.birth), 'yyyy-MM-dd');\r\n    },\r\n    handleCurrentChange (val) {\r\n      this.page = val;\r\n      this.getCodeSets();\r\n    },\r\n    handleSizeChange (val) {\r\n      this.pageSize = val;\r\n      this.getCodeSets();\r\n    },\r\n    /**\r\n     * 获取请求参数\r\n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据\r\n     */\r\n    getPostParam (flag) {\r\n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData());\r\n      para.page = this.page\r\n      para.pageSize = this.pageSize\r\n      if (flag === '2') { // 全部导出\r\n        para.page = 1\r\n        para.pageSize = 10000\r\n      }\r\n      return para\r\n    },\r\n    //获取码表集列表\r\n    getCodeSets (formValue) {\r\n      //this.total = 0\r\n      //this.CodeSets = null\r\n      let para = this.getPostParam('1');\r\n      this.listLoading = true;\r\n      getCodeSetListPage(para).then((res) => {\r\n        this.total = res.data.response.dataCount;\r\n        this.CodeSets = res.data.response.data;\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //获取全部列表\r\n    exportAllData () {\r\n      let para = this.getPostParam('2');\r\n      this.listLoading = true;\r\n      getCodeSetListPage(para).then((res) => {\r\n        var allData = res.data.response.data;\r\n        this.$refs.cmToolbarExport.export2Excel(allData);\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //删除\r\n    handleDel () {\r\n      let row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要删除的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.$confirm('确认删除该记录吗?', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.listLoading = true;\r\n        //NProgress.start();\r\n        let para = { id: row.Id };\r\n        debugger\r\n        removeCodeSet(para).then((res) => {\r\n\r\n          if (util.isEmt.format(res)) {\r\n            this.listLoading = false;\r\n            return;\r\n          }\r\n          this.listLoading = false;\r\n          //NProgress.done();\r\n          if (res.data.success) {\r\n            this.$message({\r\n              message: '删除成功',\r\n              type: 'success'\r\n            });\r\n\r\n          } else {\r\n            this.$message({\r\n              message: res.data.msg,\r\n              type: 'error'\r\n            });\r\n          }\r\n\r\n          this.getCodeSets();\r\n        });\r\n      }).catch(() => {\r\n\r\n      });\r\n    },\r\n    //显示编辑界面\r\n    handleEdit () {\r\n      let row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要编辑的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.isAdd = false\r\n      this.dialogTitle = '编辑'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n      debugger\r\n      this.addForm = Object.assign({}, row);\r\n    },\r\n    //显示新增界面\r\n    handleAdd () {\r\n      this.isAdd = true\r\n      this.dialogTitle = '新增'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n    },\r\n    // 更新数据\r\n    SaveData (formName) {\r\n      this.submitDisabled = true\r\n\r\n      this.$refs.addForm.validate((valid) => {\r\n        if (valid) {\r\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n            this.addLoading = true;\r\n            let para = Object.assign({}, this.addForm);\r\n            if (this.isAdd) {//新增\r\n              addCodeSet(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done();\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getCodeSets();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n\r\n              });\r\n            } else {//编辑\r\n              editCodeSet(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done();\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getCodeSets();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    selsChange: function (sels) {\r\n      this.sels = sels;\r\n    },\r\n    //导出\r\n    handleExport () {\r\n      this.currentPageData = this.CodeSets\r\n      this.$refs.cmToolbarExport.showPrintPage()\r\n    },\r\n  },\r\n  mounted () {\r\n    this.getCodeSets();\r\n\r\n    let routers = window.localStorage.router\r\n      ? JSON.parse(window.localStorage.router)\r\n      : [];\r\n    this.buttonList = getButtonList(this.$route.path, routers);\r\n\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["SalverManager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"SalverManager.vue","sourceRoot":"src\\views\\BasicData","sourcesContent":["<template>\r\n  <section>\r\n    <!--工具条-->\r\n    <el-col :span=\"24\"\r\n            class=\"toolbar\"\r\n            style=\"padding-bottom: 0px;\">\r\n      <el-form :inline=\"true\"\r\n               @submit.native.prevent>\r\n        <toolbar :buttonList=\"buttonList\"\r\n                 @callFunction=\"callFunction\">\r\n        </toolbar>\r\n        <!-- 搜索 -->\r\n        <SearchForm :formOptions=\"formOptions\"\r\n                    :drawerSize=\"drawerSize\"\r\n                    :searchFormInputPlaceholder=\"searchFormInputPlaceholder\"\r\n                    ref=\"ChildSearchForm\"\r\n                    @onSearch=\"getCodeSets\" />\r\n      </el-form>\r\n    </el-col>\r\n\r\n    <!--列表-->\r\n    <el-table :data=\"CodeSets\"\r\n              :height=\"tableHeight\"\r\n              highlight-current-row\r\n              size=\"small\"\r\n              @current-change=\"selectCurrentRow\"\r\n              v-loading=\"listLoading\"\r\n              @selection-change=\"selsChange\"\r\n              style=\"width: 99%;\">\r\n      <el-table-column type=\"index\"\r\n                       :index=\"indexMethod\"\r\n                       label=\"#\"\r\n                       align=\"center\"\r\n                       width=\"50\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"code\"\r\n                       label=\"代码编码\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"name\"\r\n                       label=\"代码名称\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"note\"\r\n                       label=\"说明\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"delFlag\"\r\n                       label=\"状态\"\r\n                       align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag :type=\"scope.row.delFlag  ? 'danger' : 'success'\"\r\n                  disable-transitions>{{scope.row.delFlag ? \"禁用\":\"启用\"}}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"creator\"\r\n                       label=\"创建人\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"createTime\"\r\n                       label=\"创建时间\"\r\n                       width=\"160\"\r\n                       align=\"center\"\r\n                       :formatter=\"formatterDateTime\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"lastModifier\"\r\n                       label=\"修改人\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"lastModifyTime\"\r\n                       label=\"修改时间\"\r\n                       width=\"160\"\r\n                       align=\"center\"\r\n                       :formatter=\"formatterDateTime\">\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!--工具条-->\r\n    <el-col :span=\"24\"\r\n            style=\"margin:10px 10px 10px 0px;\"\r\n            class=\"toolbar\">\r\n      <el-pagination @size-change=\"handleSizeChange\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     :current-page=\"page\"\r\n                     background\r\n                     :page-sizes=\"[5,10,50,100, 200, 300, 400]\"\r\n                     :page-size=\"pageSize\"\r\n                     layout=\"total, sizes, prev, pager, next, jumper\"\r\n                     :total=\"total\">\r\n      </el-pagination>\r\n    </el-col>\r\n    <!--新增/编辑界面-->\r\n    <el-dialog :title=\"dialogTitle\"\r\n               :visible.sync=\"addFormVisible\"\r\n               v-model=\"addFormVisible\"\r\n               :close-on-click-modal=\"false\">\r\n      <el-form :model=\"addForm\"\r\n               size=\"small\"\r\n               label-width=\"80px\"\r\n               ref=\"addForm\">\r\n        <el-form-item label=\"代码编码\"\r\n                      :rules=\"[{ required: true, message: '代码编码不能为空'}]\"\r\n                      prop=\"code\">\r\n          <el-input v-model=\"addForm.code\"\r\n                    auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"代码名称\"\r\n                      :rules=\"[{ required: true, message: '代码名称不能为空'}]\"\r\n                      prop=\"name\">\r\n          <el-input v-model=\"addForm.name\"\r\n                    auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"是否禁用\"\r\n                      prop=\"delFlag\">\r\n          <el-switch v-model=\"addForm.delFlag\"></el-switch>\r\n        </el-form-item>\r\n        <el-form-item label=\"说明\"\r\n                      :rules=\"[{ required: true, message: '说明不能为空'}]\"\r\n                      prop=\"note\">\r\n          <el-input v-model=\"addForm.note\"\r\n                    auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\"\r\n           class=\"dialog-footer\">\r\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\"\r\n                   @click.native=\"SaveData\"\r\n                   :loading=\"addLoading\">提交</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!-- 导出组件 -->\r\n    <ToolbarExport ref=\"cmToolbarExport\"\r\n                   :exportFileName=\"exportFileName\"\r\n                   :filterVal=\"filterVal\"\r\n                   :currentPageData=\"currentPageData\"\r\n                   :tHeader=\"tHeader\" />\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport util from '../../../util/date'\r\nimport { getCodeSetListPage, removeCodeSet, editCodeSet, addCodeSet } from '../../api/api';\r\nimport { getButtonList } from \"../../promissionRouter\";\r\nimport Toolbar from \"../../components/ToolbarButton\";\r\nimport SearchForm from \"../../components/SearchForm\";\r\nimport ToolbarExport from \"../../components/ToolbarExport\";\r\nimport { formatDate } from '../../../util/tools'\r\n\r\n\r\nexport default {\r\n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件\r\n  data () {\r\n    return {\r\n      //导出组件相关\r\n      exportFileName: '码表集信息',//要导出的文件名\r\n      currentPageData: [],//当前页面的列表数据\r\n      tHeader: ['代码编码', '代码名称', '说明'],//当前页面列表的表头汉字数组，导出用\r\n      filterVal: ['code', 'name', 'note'],//当前页面列表的表头属性数组，导出用\r\n\r\n      //搜索框相关\r\n      drawerSize: \"450px\",//drawner宽度设置\r\n      searchFormInputPlaceholder: '请输入代码编码/名称',//要给子搜索组件传递的值\r\n      formOptions: [\r\n        {\r\n          label: '代码编码',\r\n          prop: 'code',\r\n          element: 'el-input'\r\n        },\r\n        {\r\n          label: '代码名称',\r\n          prop: 'name',\r\n          element: 'el-input'\r\n        },\r\n        {\r\n          label: '说明',\r\n          prop: 'note',\r\n          element: 'el-input'\r\n        }\r\n      ],\r\n\r\n\r\n      tableHeight: window.innerHeight - 230, // 500, // 这个值不能设置小了，设置小了，界面就不对了\r\n\r\n      isAdd: false, // 是否是新增\r\n      dialogTitle: '',\r\n\r\n      filters: {\r\n        name: ''\r\n      },\r\n      CodeSets: [],\r\n      roles: [],\r\n      total: 0,\r\n      buttonList: [],\r\n      currentRow: null,\r\n      page: 1,\r\n      pageSize: 10,\r\n      listLoading: false,\r\n      sels: [],//列表选中列\r\n\r\n      addFormVisible: false,//新增界面是否显示\r\n      addLoading: false,\r\n      addFormRules: {\r\n        uLoginName: [\r\n          { required: true, message: '请输入登录名', trigger: 'blur' }\r\n        ],\r\n        uRealName: [\r\n          { required: true, message: '请输入昵称', trigger: 'blur' }\r\n        ],\r\n        uLoginPWD: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ],\r\n        birth: [\r\n          { required: true, message: '请填写生日', trigger: 'blur' }\r\n        ]\r\n      },\r\n      //新增界面数据\r\n      addForm: {\r\n        id: 0,\r\n        name: '',\r\n        code: '',\r\n        note: '',\r\n        delFlag: false\r\n      }\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    // 设置索引\r\n    indexMethod (index) {\r\n      return (this.page - 1) * this.pageSize + 1 + index\r\n    },\r\n    // 时间格式化\r\n    formatterDateTime (row, column, cellValue, index) {\r\n      if (cellValue === null || cellValue === '') {\r\n        return ''\r\n      }\r\n      var t = cellValue.slice(6, 19) // 截取字符串\r\n      var NewDtime = new Date(parseInt(t))\r\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss')\r\n    },\r\n    selectCurrentRow (val) {\r\n      this.currentRow = val;\r\n    },\r\n    callFunction (item) {\r\n      this.filters = {\r\n        name: item.search\r\n      };\r\n      this[item.Func].apply(this, item);\r\n    },\r\n    //性别显示转换\r\n    formatSex: function (row, column) {\r\n      return row.sex == 1 ? '男' : row.sex == 0 ? '女' : '未知';\r\n    },\r\n    formatBirth: function (row, column) {\r\n      return (!row.birth || row.birth == '') ? '' : util.formatDate.format(new Date(row.birth), 'yyyy-MM-dd');\r\n    },\r\n    handleCurrentChange (val) {\r\n      this.page = val;\r\n      this.getCodeSets();\r\n    },\r\n    handleSizeChange (val) {\r\n      this.pageSize = val;\r\n      this.getCodeSets();\r\n    },\r\n    /**\r\n     * 获取请求参数\r\n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据\r\n     */\r\n    getPostParam (flag) {\r\n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData());\r\n      para.page = this.page\r\n      para.pageSize = this.pageSize\r\n      if (flag === '2') { // 全部导出\r\n        para.page = 1\r\n        para.pageSize = 10000\r\n      }\r\n      return para\r\n    },\r\n    //获取码表集列表\r\n    getCodeSets (formValue) {\r\n      //this.total = 0\r\n      //this.CodeSets = null\r\n      let para = this.getPostParam('1');\r\n      this.listLoading = true;\r\n      getCodeSetListPage(para).then((res) => {\r\n        this.total = res.data.response.dataCount;\r\n        this.CodeSets = res.data.response.data;\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //获取全部列表\r\n    exportAllData () {\r\n      let para = this.getPostParam('2');\r\n      this.listLoading = true;\r\n      getCodeSetListPage(para).then((res) => {\r\n        var allData = res.data.response.data;\r\n        this.$refs.cmToolbarExport.export2Excel(allData);\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //删除\r\n    handleDel () {\r\n      let row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要删除的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.$confirm('确认删除该记录吗?', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.listLoading = true;\r\n        //NProgress.start();\r\n        let para = { id: row.Id };\r\n        debugger\r\n        removeCodeSet(para).then((res) => {\r\n\r\n          if (util.isEmt.format(res)) {\r\n            this.listLoading = false;\r\n            return;\r\n          }\r\n          this.listLoading = false;\r\n          //NProgress.done();\r\n          if (res.data.success) {\r\n            this.$message({\r\n              message: '删除成功',\r\n              type: 'success'\r\n            });\r\n\r\n          } else {\r\n            this.$message({\r\n              message: res.data.msg,\r\n              type: 'error'\r\n            });\r\n          }\r\n\r\n          this.getCodeSets();\r\n        });\r\n      }).catch(() => {\r\n\r\n      });\r\n    },\r\n    //显示编辑界面\r\n    handleEdit () {\r\n      let row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要编辑的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.isAdd = false\r\n      this.dialogTitle = '编辑'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n      debugger\r\n      this.addForm = Object.assign({}, row);\r\n    },\r\n    //显示新增界面\r\n    handleAdd () {\r\n      this.isAdd = true\r\n      this.dialogTitle = '新增'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n    },\r\n    // 更新数据\r\n    SaveData (formName) {\r\n      this.submitDisabled = true\r\n\r\n      this.$refs.addForm.validate((valid) => {\r\n        if (valid) {\r\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n            this.addLoading = true;\r\n            let para = Object.assign({}, this.addForm);\r\n            if (this.isAdd) {//新增\r\n              addCodeSet(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done();\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getCodeSets();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n\r\n              });\r\n            } else {//编辑\r\n              editCodeSet(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done();\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getCodeSets();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    selsChange: function (sels) {\r\n      this.sels = sels;\r\n    },\r\n    //导出\r\n    handleExport () {\r\n      this.currentPageData = this.CodeSets\r\n      this.$refs.cmToolbarExport.showPrintPage()\r\n    },\r\n  },\r\n  mounted () {\r\n    this.getCodeSets();\r\n\r\n    let routers = window.localStorage.router\r\n      ? JSON.parse(window.localStorage.router)\r\n      : [];\r\n    this.buttonList = getButtonList(this.$route.path, routers);\r\n\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"]}]}