{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\Blog.Admin-master\\src\\views\\Wip\\History.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\Blog.Admin-master\\src\\views\\Wip\\History.vue","mtime":1610782832510},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport util from '../../../util/date'\nimport {getWipHistoryPage} from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\n\nexport default {\n    components: { Toolbar },\n    data() {\n        return {\n            buttonList: [],\n            currentRow: null,\n            filters: {\n                name: ''\n            },\n            users: [],\n            statusList: [{LinkUrl: '激活', value: true}, {LinkUrl: '禁用', value: false}],\n            total: 0,\n            page: 1,\n            listLoading: false,\n            sels: [],//列表选中列\n\n            addDialogFormVisible: false,\n            editFormVisible: false,//编辑界面是否显示\n            editLoading: false,\n            editFormRules: {\n\n                LinkUrl: [\n                    {required: true, message: '请输入接口地址', trigger: 'blur'}\n                ],\n\n            },\n            //编辑界面数据\n            editForm: {\n                Id: 0,\n                CreateBy: '',\n                LinkUrl: '',\n                Name: '',\n                Enabled: false,\n            },\n\n            addFormVisible: false,//新增界面是否显示\n            addLoading: false,\n            addFormRules: {\n\n                LinkUrl: [\n                    {required: true, message: '请输入接口地址', trigger: 'blur'}\n                ],\n\n            },\n            //新增界面数据\n            addForm: {\n                CreateBy: '',\n                CreateId: '',\n                LinkUrl: '',\n                Name: '',\n                Enabled: '',\n            }\n\n        }\n    },\n    methods: {\n        selectCurrentRow(val) {\n        this.currentRow = val;\n        },\n        callFunction(item) {\n        this.filters = {\n            name: item.search\n        };\n        this[item.Func].apply(this, item);\n        },\n        //性别显示转换\n        formatEnabled: function (row, column) {\n            return row.Enabled ? '正常' : '未知';\n        },\n        formatCreateTime: function (row, column) {\n            return (!row.CreateTime || row.CreateTime == '') ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\n        },\n        handleCurrentChange(val) {\n            this.page = val;\n            this.getWipHistory();\n        },\n        //获取列表\n        getWipHistory() {\n            debugger\n            let para = {\n                page: this.page,\n                key: this.filters.name\n            };\n            this.listLoading = true;\n\n            //NProgress.start();\n            getWipHistoryPage(para).then((res) => {\n                this.total = res.data.response.dataCount;\n                this.users = res.data.response.data;\n                this.listLoading = false;\n                //NProgress.done();\n            });\n        },\n        //删除\n        handleDel() {\n            let row = this.currentRow;\n            if (!row) {\n                this.$message({\n                message: \"请选择要删除的一行数据！\",\n                type: \"error\"\n                });\n\n                return;\n            }\n            this.$confirm('确认删除该记录吗?', '提示', {\n                type: 'warning'\n            }).then(() => {\n                this.listLoading = true;\n                //NProgress.start();\n                let para = {id: row.Id};\n                removeModule(para).then((res) => {\n\n                    if (util.isEmt.format(res)) {\n                        this.listLoading = false;\n                        return;\n                    }\n                    this.listLoading = false;\n                    //NProgress.done();\n                    if (res.data.success) {\n                        this.$message({\n                            message: '删除成功',\n                            type: 'success'\n                        });\n\n                    } else {\n                        this.$message({\n                            message: res.data.msg,\n                            type: 'error'\n                        });\n                    }\n\n                    this.getWipHistory();\n                });\n            }).catch(() => {\n\n            });\n        },\n        //显示编辑界面\n        handleEdit() {\n            let row = this.currentRow;\n            if (!row) {\n                this.$message({\n                message: \"请选择要编辑的一行数据！\",\n                type: \"error\"\n                });\n\n                return;\n            }\n            this.editFormVisible = true;\n            this.editForm = Object.assign({}, row);\n        },\n        //显示新增界面\n        handleAdd() {\n            this.addFormVisible = true;\n            this.addForm = {\n                CreateBy: '',\n                LinkUrl: '',\n                Name: '',\n                Enabled: 'true',\n            };\n        },\n        //编辑\n        editSubmit: function () {\n            this.$refs.editForm.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                        this.editLoading = true;\n                        //NProgress.start();\n                        let para = Object.assign({}, this.editForm);\n\n                        para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n\n                        editModule(para).then((res) => {\n\n                            if (util.isEmt.format(res)) {\n                                this.editLoading = false;\n                                return;\n                            }\n                            if (res.data.success) {\n                                this.editLoading = false;\n                                //NProgress.done();\n                                this.$message({\n                                    message: res.data.msg,\n                                    type: 'success'\n                                });\n                                this.$refs['editForm'].resetFields();\n                                this.editFormVisible = false;\n                                this.getWipHistory();\n                            } else {\n                                this.$message({\n                                    message: res.data.msg,\n                                    type: 'error'\n                                });\n\n                            }\n                        });\n                    });\n                }\n            });\n        },\n        //新增\n        addSubmit: function () {\n            let _this = this;\n            this.$refs.addForm.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                        this.addLoading = true;\n                        //NProgress.start();\n                        let para = Object.assign({}, this.addForm);\n\n                        para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n                        para.ModifyTime = para.CreateTime;\n                        para.IsDeleted = false;\n\n                        var user = JSON.parse(window.localStorage.user);\n\n                        if (user && user.uID > 0) {\n                            para.CreateId = user.uID;\n                            para.CreateBy = user.uRealName;\n                        } else {\n                            this.$message({\n                                message: '用户信息为空，先登录',\n                                type: 'error'\n                            });\n                            _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n                        }\n\n\n                        addModule(para).then((res) => {\n\n                            if (util.isEmt.format(res)) {\n                                this.addLoading = false;\n                                return;\n                            }\n\n                            if (res.data.success) {\n                                this.addLoading = false;\n                                //NProgress.done();\n                                this.$message({\n                                    message: res.data.msg,\n                                    type: 'success'\n                                });\n                                this.$refs['addForm'].resetFields();\n                                this.addFormVisible = false;\n                                this.getWipHistory();\n                            }\n                            else {\n                                this.$message({\n                                    message: res.data.msg,\n                                    type: 'error'\n                                });\n\n                            }\n\n                        });\n\n                    });\n                }\n            });\n        },\n        selsChange: function (sels) {\n            this.sels = sels;\n        },\n        //批量删除\n        batchRemove: function () {\n            this.$message({\n                message: '该功能未开放',\n                type: 'warning'\n            });\n        }\n    },\n    mounted() {\n        \n        this.getWipHistory();\n\n        let routers = window.localStorage.router\n        ? JSON.parse(window.localStorage.router)\n        : [];\n        this.buttonList = getButtonList(this.$route.path, routers);\n        debugger\n       \n    }\n}\n\n",{"version":3,"sources":["History.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"History.vue","sourceRoot":"src\\views\\Wip","sourcesContent":["<template>\r\n    <section>\r\n        <!--工具条-->\r\n        <toolbar :buttonList=\"buttonList\" @callFunction=\"callFunction\"></toolbar>\r\n\r\n        <!--列表-->\r\n        <el-table :data=\"users\" highlight-current-row \r\n        @current-change=\"selectCurrentRow\"\r\n        v-loading=\"listLoading\" @selection-change=\"selsChange\"\r\n                  style=\"width: 100%;\">\r\n            <el-table-column type=\"selection\" width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column type=\"index\" width=\"80\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"MaterialName\" label=\"物料名称\" width=\"\" sortable>\r\n            </el-table-column>\r\n            <el-table-column prop=\"InTime\" label=\"进炉时间\" :formatter=\"formatCreateTime\"  width=\"\" sortable>\r\n            </el-table-column>\r\n            <el-table-column prop=\"OutTime\" label=\"出炉时间\" :formatter=\"formatCreateTime\" width=\"\" sortable>\r\n            </el-table-column>\r\n            <el-table-column prop=\"Num\" label=\"数量\" width=\"\" sortable>\r\n            </el-table-column>\r\n            <el-table-column prop=\"Enabled\" label=\"状态\" width=\"\" sortable>\r\n                <template slot-scope=\"scope\">\r\n                    <el-tag\r\n                            :type=\"scope.row.Enabled  ? 'success' : 'danger'\"\r\n                            disable-transitions>{{scope.row.Enabled ? \"已出炉\":\"已出炉\"}}\r\n                    </el-tag>\r\n                </template>\r\n            </el-table-column>\r\n            <!-- <el-table-column label=\"操作\" width=\"150\">\r\n                <template scope=\"scope\">\r\n                    <el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\r\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\r\n                </template>\r\n            </el-table-column> -->\r\n        </el-table>\r\n\r\n      \r\n\r\n        <!--编辑界面-->\r\n        <el-dialog title=\"编辑\" :visible.sync=\"editFormVisible\" v-model=\"editFormVisible\" :close-on-click-modal=\"false\">\r\n            <el-form :model=\"editForm\" label-width=\"80px\" :rules=\"editFormRules\" ref=\"editForm\">\r\n                <el-form-item label=\"接口地址\" prop=\"LinkUrl\">\r\n                    <el-input v-model=\"editForm.LinkUrl\" auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"接口描述\" prop=\"Name\">\r\n                    <el-input v-model=\"editForm.Name\" auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"状态\" prop=\"Enabled\">\r\n                    <el-select v-model=\"editForm.Enabled\" placeholder=\"请选择状态\">\r\n                        <el-option v-for=\"item in statusList\" :key=\"item.value\" :label=\"item.LinkUrl\"\r\n                                   :value=\"item.value\"></el-option>\r\n\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click.native=\"editFormVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <!--新增界面-->\r\n        <el-dialog title=\"新增\" :visible.sync=\"addFormVisible\" v-model=\"addFormVisible\" :close-on-click-modal=\"false\">\r\n            <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\r\n                <el-form-item label=\"接口地址\" prop=\"LinkUrl\">\r\n                    <el-input v-model=\"addForm.LinkUrl\" auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"接口描述\" prop=\"Name\">\r\n                    <el-input v-model=\"addForm.Name\" auto-complete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"状态\" prop=\"Enabled\">\r\n                    <el-select v-model=\"addForm.Enabled\" placeholder=\"请选择状态\">\r\n                        <el-option label=\"激活\" value=\"true\"></el-option>\r\n                        <el-option label=\"禁用\" value=\"false\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click.native=\"addFormVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    import util from '../../../util/date'\r\n    import {getWipHistoryPage} from '../../api/api';\r\n    import { getButtonList } from \"../../promissionRouter\";\r\n    import Toolbar from \"../../components/Toolbar\";\r\n\r\n    export default {\r\n        components: { Toolbar },\r\n        data() {\r\n            return {\r\n                buttonList: [],\r\n                currentRow: null,\r\n                filters: {\r\n                    name: ''\r\n                },\r\n                users: [],\r\n                statusList: [{LinkUrl: '激活', value: true}, {LinkUrl: '禁用', value: false}],\r\n                total: 0,\r\n                page: 1,\r\n                listLoading: false,\r\n                sels: [],//列表选中列\r\n\r\n                addDialogFormVisible: false,\r\n                editFormVisible: false,//编辑界面是否显示\r\n                editLoading: false,\r\n                editFormRules: {\r\n\r\n                    LinkUrl: [\r\n                        {required: true, message: '请输入接口地址', trigger: 'blur'}\r\n                    ],\r\n\r\n                },\r\n                //编辑界面数据\r\n                editForm: {\r\n                    Id: 0,\r\n                    CreateBy: '',\r\n                    LinkUrl: '',\r\n                    Name: '',\r\n                    Enabled: false,\r\n                },\r\n\r\n                addFormVisible: false,//新增界面是否显示\r\n                addLoading: false,\r\n                addFormRules: {\r\n\r\n                    LinkUrl: [\r\n                        {required: true, message: '请输入接口地址', trigger: 'blur'}\r\n                    ],\r\n\r\n                },\r\n                //新增界面数据\r\n                addForm: {\r\n                    CreateBy: '',\r\n                    CreateId: '',\r\n                    LinkUrl: '',\r\n                    Name: '',\r\n                    Enabled: '',\r\n                }\r\n\r\n            }\r\n        },\r\n        methods: {\r\n            selectCurrentRow(val) {\r\n            this.currentRow = val;\r\n            },\r\n            callFunction(item) {\r\n            this.filters = {\r\n                name: item.search\r\n            };\r\n            this[item.Func].apply(this, item);\r\n            },\r\n            //性别显示转换\r\n            formatEnabled: function (row, column) {\r\n                return row.Enabled ? '正常' : '未知';\r\n            },\r\n            formatCreateTime: function (row, column) {\r\n                return (!row.CreateTime || row.CreateTime == '') ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\r\n            },\r\n            handleCurrentChange(val) {\r\n                this.page = val;\r\n                this.getWipHistory();\r\n            },\r\n            //获取列表\r\n            getWipHistory() {\r\n                debugger\r\n                let para = {\r\n                    page: this.page,\r\n                    key: this.filters.name\r\n                };\r\n                this.listLoading = true;\r\n\r\n                //NProgress.start();\r\n                getWipHistoryPage(para).then((res) => {\r\n                    this.total = res.data.response.dataCount;\r\n                    this.users = res.data.response.data;\r\n                    this.listLoading = false;\r\n                    //NProgress.done();\r\n                });\r\n            },\r\n            //删除\r\n            handleDel() {\r\n                let row = this.currentRow;\r\n                if (!row) {\r\n                    this.$message({\r\n                    message: \"请选择要删除的一行数据！\",\r\n                    type: \"error\"\r\n                    });\r\n\r\n                    return;\r\n                }\r\n                this.$confirm('确认删除该记录吗?', '提示', {\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.listLoading = true;\r\n                    //NProgress.start();\r\n                    let para = {id: row.Id};\r\n                    removeModule(para).then((res) => {\r\n\r\n                        if (util.isEmt.format(res)) {\r\n                            this.listLoading = false;\r\n                            return;\r\n                        }\r\n                        this.listLoading = false;\r\n                        //NProgress.done();\r\n                        if (res.data.success) {\r\n                            this.$message({\r\n                                message: '删除成功',\r\n                                type: 'success'\r\n                            });\r\n\r\n                        } else {\r\n                            this.$message({\r\n                                message: res.data.msg,\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n\r\n                        this.getWipHistory();\r\n                    });\r\n                }).catch(() => {\r\n\r\n                });\r\n            },\r\n            //显示编辑界面\r\n            handleEdit() {\r\n                let row = this.currentRow;\r\n                if (!row) {\r\n                    this.$message({\r\n                    message: \"请选择要编辑的一行数据！\",\r\n                    type: \"error\"\r\n                    });\r\n\r\n                    return;\r\n                }\r\n                this.editFormVisible = true;\r\n                this.editForm = Object.assign({}, row);\r\n            },\r\n            //显示新增界面\r\n            handleAdd() {\r\n                this.addFormVisible = true;\r\n                this.addForm = {\r\n                    CreateBy: '',\r\n                    LinkUrl: '',\r\n                    Name: '',\r\n                    Enabled: 'true',\r\n                };\r\n            },\r\n            //编辑\r\n            editSubmit: function () {\r\n                this.$refs.editForm.validate((valid) => {\r\n                    if (valid) {\r\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n                            this.editLoading = true;\r\n                            //NProgress.start();\r\n                            let para = Object.assign({}, this.editForm);\r\n\r\n                            para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\r\n\r\n                            editModule(para).then((res) => {\r\n\r\n                                if (util.isEmt.format(res)) {\r\n                                    this.editLoading = false;\r\n                                    return;\r\n                                }\r\n                                if (res.data.success) {\r\n                                    this.editLoading = false;\r\n                                    //NProgress.done();\r\n                                    this.$message({\r\n                                        message: res.data.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    this.$refs['editForm'].resetFields();\r\n                                    this.editFormVisible = false;\r\n                                    this.getWipHistory();\r\n                                } else {\r\n                                    this.$message({\r\n                                        message: res.data.msg,\r\n                                        type: 'error'\r\n                                    });\r\n\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n            //新增\r\n            addSubmit: function () {\r\n                let _this = this;\r\n                this.$refs.addForm.validate((valid) => {\r\n                    if (valid) {\r\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n                            this.addLoading = true;\r\n                            //NProgress.start();\r\n                            let para = Object.assign({}, this.addForm);\r\n\r\n                            para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\r\n                            para.ModifyTime = para.CreateTime;\r\n                            para.IsDeleted = false;\r\n\r\n                            var user = JSON.parse(window.localStorage.user);\r\n\r\n                            if (user && user.uID > 0) {\r\n                                para.CreateId = user.uID;\r\n                                para.CreateBy = user.uRealName;\r\n                            } else {\r\n                                this.$message({\r\n                                    message: '用户信息为空，先登录',\r\n                                    type: 'error'\r\n                                });\r\n                                _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\r\n                            }\r\n\r\n\r\n                            addModule(para).then((res) => {\r\n\r\n                                if (util.isEmt.format(res)) {\r\n                                    this.addLoading = false;\r\n                                    return;\r\n                                }\r\n\r\n                                if (res.data.success) {\r\n                                    this.addLoading = false;\r\n                                    //NProgress.done();\r\n                                    this.$message({\r\n                                        message: res.data.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    this.$refs['addForm'].resetFields();\r\n                                    this.addFormVisible = false;\r\n                                    this.getWipHistory();\r\n                                }\r\n                                else {\r\n                                    this.$message({\r\n                                        message: res.data.msg,\r\n                                        type: 'error'\r\n                                    });\r\n\r\n                                }\r\n\r\n                            });\r\n\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n            selsChange: function (sels) {\r\n                this.sels = sels;\r\n            },\r\n            //批量删除\r\n            batchRemove: function () {\r\n                this.$message({\r\n                    message: '该功能未开放',\r\n                    type: 'warning'\r\n                });\r\n            }\r\n        },\r\n        mounted() {\r\n            \r\n            this.getWipHistory();\r\n\r\n            let routers = window.localStorage.router\r\n            ? JSON.parse(window.localStorage.router)\r\n            : [];\r\n            this.buttonList = getButtonList(this.$route.path, routers);\r\n            debugger\r\n           \r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}