{"remainingRequest":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\框架\\Blog.Admin-master\\src\\views\\Permission\\Module.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\框架\\Blog.Admin-master\\src\\views\\Permission\\Module.vue","mtime":1610332596000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\框架\\Blog.Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport util from '../../../util/date'\nimport {getModuleListPage, removeModule, editModule, addModule} from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/Toolbar\";\n\nexport default {\n    components: { Toolbar },\n    data() {\n        return {\n            buttonList: [],\n            currentRow: null,\n            filters: {\n                LinkUrl: ''\n            },\n            users: [],\n            statusList: [{LinkUrl: '激活', value: true}, {LinkUrl: '禁用', value: false}],\n            total: 0,\n            page: 1,\n            listLoading: false,\n            sels: [],//列表选中列\n\n            addDialogFormVisible: false,\n            editFormVisible: false,//编辑界面是否显示\n            editLoading: false,\n            editFormRules: {\n\n                LinkUrl: [\n                    {required: true, message: '请输入接口地址', trigger: 'blur'}\n                ],\n\n            },\n            //编辑界面数据\n            editForm: {\n                Id: 0,\n                CreateBy: '',\n                LinkUrl: '',\n                Name: '',\n                Enabled: false,\n            },\n\n            addFormVisible: false,//新增界面是否显示\n            addLoading: false,\n            addFormRules: {\n\n                LinkUrl: [\n                    {required: true, message: '请输入接口地址', trigger: 'blur'}\n                ],\n\n            },\n            //新增界面数据\n            addForm: {\n                CreateBy: '',\n                CreateId: '',\n                LinkUrl: '',\n                Name: '',\n                Enabled: '',\n            }\n\n        }\n    },\n    methods: {\n        selectCurrentRow(val) {\n        this.currentRow = val;\n        },\n        callFunction(item) {\n        this.filters = {\n            name: item.search\n        };\n        this[item.Func].apply(this, item);\n        },\n        //性别显示转换\n        formatEnabled: function (row, column) {\n            return row.Enabled ? '正常' : '未知';\n        },\n        formatCreateTime: function (row, column) {\n            return (!row.CreateTime || row.CreateTime == '') ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\n        },\n        handleCurrentChange(val) {\n            this.page = val;\n            this.getModules();\n        },\n        //获取用户列表\n        getModules() {\n            let para = {\n                page: this.page,\n                key: this.filters.LinkUrl\n            };\n            this.listLoading = true;\n\n            //NProgress.start();\n            getModuleListPage(para).then((res) => {\n                this.total = res.data.response.dataCount;\n                this.users = res.data.response.data;\n                this.listLoading = false;\n                //NProgress.done();\n            });\n        },\n        //删除\n        handleDel() {\n            let row = this.currentRow;\n            if (!row) {\n                this.$message({\n                message: \"请选择要删除的一行数据！\",\n                type: \"error\"\n                });\n\n                return;\n            }\n            this.$confirm('确认删除该记录吗?', '提示', {\n                type: 'warning'\n            }).then(() => {\n                this.listLoading = true;\n                //NProgress.start();\n                let para = {id: row.Id};\n                removeModule(para).then((res) => {\n\n                    if (util.isEmt.format(res)) {\n                        this.listLoading = false;\n                        return;\n                    }\n                    this.listLoading = false;\n                    //NProgress.done();\n                    if (res.data.success) {\n                        this.$message({\n                            message: '删除成功',\n                            type: 'success'\n                        });\n\n                    } else {\n                        this.$message({\n                            message: res.data.msg,\n                            type: 'error'\n                        });\n                    }\n\n                    this.getModules();\n                });\n            }).catch(() => {\n\n            });\n        },\n        //显示编辑界面\n        handleEdit() {\n            let row = this.currentRow;\n            if (!row) {\n                this.$message({\n                message: \"请选择要编辑的一行数据！\",\n                type: \"error\"\n                });\n\n                return;\n            }\n            this.editFormVisible = true;\n            this.editForm = Object.assign({}, row);\n        },\n        //显示新增界面\n        handleAdd() {\n            this.addFormVisible = true;\n            this.addForm = {\n                CreateBy: '',\n                LinkUrl: '',\n                Name: '',\n                Enabled: 'true',\n            };\n        },\n        //编辑\n        editSubmit: function () {\n            this.$refs.editForm.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                        this.editLoading = true;\n                        //NProgress.start();\n                        let para = Object.assign({}, this.editForm);\n\n                        para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n\n                        editModule(para).then((res) => {\n\n                            if (util.isEmt.format(res)) {\n                                this.editLoading = false;\n                                return;\n                            }\n                            if (res.data.success) {\n                                this.editLoading = false;\n                                //NProgress.done();\n                                this.$message({\n                                    message: res.data.msg,\n                                    type: 'success'\n                                });\n                                this.$refs['editForm'].resetFields();\n                                this.editFormVisible = false;\n                                this.getModules();\n                            } else {\n                                this.$message({\n                                    message: res.data.msg,\n                                    type: 'error'\n                                });\n\n                            }\n                        });\n                    });\n                }\n            });\n        },\n        //新增\n        addSubmit: function () {\n            let _this = this;\n            this.$refs.addForm.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                        this.addLoading = true;\n                        //NProgress.start();\n                        let para = Object.assign({}, this.addForm);\n\n                        para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n                        para.ModifyTime = para.CreateTime;\n                        para.IsDeleted = false;\n\n                        var user = JSON.parse(window.localStorage.user);\n\n                        if (user && user.uID > 0) {\n                            para.CreateId = user.uID;\n                            para.CreateBy = user.uRealName;\n                        } else {\n                            this.$message({\n                                message: '用户信息为空，先登录',\n                                type: 'error'\n                            });\n                            _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n                        }\n\n\n                        addModule(para).then((res) => {\n\n                            if (util.isEmt.format(res)) {\n                                this.addLoading = false;\n                                return;\n                            }\n\n                            if (res.data.success) {\n                                this.addLoading = false;\n                                //NProgress.done();\n                                this.$message({\n                                    message: res.data.msg,\n                                    type: 'success'\n                                });\n                                this.$refs['addForm'].resetFields();\n                                this.addFormVisible = false;\n                                this.getModules();\n                            }\n                            else {\n                                this.$message({\n                                    message: res.data.msg,\n                                    type: 'error'\n                                });\n\n                            }\n\n                        });\n\n                    });\n                }\n            });\n        },\n        selsChange: function (sels) {\n            this.sels = sels;\n        },\n        //批量删除\n        batchRemove: function () {\n            this.$message({\n                message: '该功能未开放',\n                type: 'warning'\n            });\n        }\n    },\n    mounted() {\n        this.getModules();\n\n        let routers = window.localStorage.router\n        ? JSON.parse(window.localStorage.router)\n        : [];\n        this.buttonList = getButtonList(this.$route.path, routers);\n    }\n}\n\n",{"version":3,"sources":["Module.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Module.vue","sourceRoot":"src\\views\\Permission","sourcesContent":["<template>\n    <section>\n        <!--工具条-->\n        <toolbar :buttonList=\"buttonList\" @callFunction=\"callFunction\"></toolbar>\n\n        <!--列表-->\n        <el-table :data=\"users\" highlight-current-row \n        @current-change=\"selectCurrentRow\"\n        v-loading=\"listLoading\" @selection-change=\"selsChange\"\n                  style=\"width: 100%;\">\n            <el-table-column type=\"selection\" width=\"50\">\n            </el-table-column>\n            <el-table-column type=\"index\" width=\"80\">\n            </el-table-column>\n            <el-table-column prop=\"LinkUrl\" label=\"接口地址\" width=\"\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"Name\" label=\"描述\" width=\"300\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"CreateTime\" label=\"创建时间\" :formatter=\"formatCreateTime\" width=\"\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"CreateBy\" label=\"创建者\" width=\"\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"Enabled\" label=\"状态\" width=\"\" sortable>\n                <template slot-scope=\"scope\">\n                    <el-tag\n                            :type=\"scope.row.Enabled  ? 'success' : 'danger'\"\n                            disable-transitions>{{scope.row.Enabled ? \"正常\":\"禁用\"}}\n                    </el-tag>\n                </template>\n            </el-table-column>\n            <!-- <el-table-column label=\"操作\" width=\"150\">\n                <template scope=\"scope\">\n                    <el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n                </template>\n            </el-table-column> -->\n        </el-table>\n\n        <!--工具条-->\n        <el-col :span=\"24\" class=\"toolbar\">\n            <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n            <el-pagination layout=\"prev, pager, next\" @current-change=\"handleCurrentChange\" :page-size=\"50\"\n                           :total=\"total\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n\n        <!--编辑界面-->\n        <el-dialog title=\"编辑\" :visible.sync=\"editFormVisible\" v-model=\"editFormVisible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"editForm\" label-width=\"80px\" :rules=\"editFormRules\" ref=\"editForm\">\n                <el-form-item label=\"接口地址\" prop=\"LinkUrl\">\n                    <el-input v-model=\"editForm.LinkUrl\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"接口描述\" prop=\"Name\">\n                    <el-input v-model=\"editForm.Name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"Enabled\">\n                    <el-select v-model=\"editForm.Enabled\" placeholder=\"请选择状态\">\n                        <el-option v-for=\"item in statusList\" :key=\"item.value\" :label=\"item.LinkUrl\"\n                                   :value=\"item.value\"></el-option>\n\n                    </el-select>\n                </el-form-item>\n\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n\n        <!--新增界面-->\n        <el-dialog title=\"新增\" :visible.sync=\"addFormVisible\" v-model=\"addFormVisible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\n                <el-form-item label=\"接口地址\" prop=\"LinkUrl\">\n                    <el-input v-model=\"addForm.LinkUrl\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"接口描述\" prop=\"Name\">\n                    <el-input v-model=\"addForm.Name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"Enabled\">\n                    <el-select v-model=\"addForm.Enabled\" placeholder=\"请选择状态\">\n                        <el-option label=\"激活\" value=\"true\"></el-option>\n                        <el-option label=\"禁用\" value=\"false\"></el-option>\n                    </el-select>\n                </el-form-item>\n\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n    </section>\n</template>\n\n<script>\n    import util from '../../../util/date'\n    import {getModuleListPage, removeModule, editModule, addModule} from '../../api/api';\n    import { getButtonList } from \"../../promissionRouter\";\n    import Toolbar from \"../../components/Toolbar\";\n\n    export default {\n        components: { Toolbar },\n        data() {\n            return {\n                buttonList: [],\n                currentRow: null,\n                filters: {\n                    LinkUrl: ''\n                },\n                users: [],\n                statusList: [{LinkUrl: '激活', value: true}, {LinkUrl: '禁用', value: false}],\n                total: 0,\n                page: 1,\n                listLoading: false,\n                sels: [],//列表选中列\n\n                addDialogFormVisible: false,\n                editFormVisible: false,//编辑界面是否显示\n                editLoading: false,\n                editFormRules: {\n\n                    LinkUrl: [\n                        {required: true, message: '请输入接口地址', trigger: 'blur'}\n                    ],\n\n                },\n                //编辑界面数据\n                editForm: {\n                    Id: 0,\n                    CreateBy: '',\n                    LinkUrl: '',\n                    Name: '',\n                    Enabled: false,\n                },\n\n                addFormVisible: false,//新增界面是否显示\n                addLoading: false,\n                addFormRules: {\n\n                    LinkUrl: [\n                        {required: true, message: '请输入接口地址', trigger: 'blur'}\n                    ],\n\n                },\n                //新增界面数据\n                addForm: {\n                    CreateBy: '',\n                    CreateId: '',\n                    LinkUrl: '',\n                    Name: '',\n                    Enabled: '',\n                }\n\n            }\n        },\n        methods: {\n            selectCurrentRow(val) {\n            this.currentRow = val;\n            },\n            callFunction(item) {\n            this.filters = {\n                name: item.search\n            };\n            this[item.Func].apply(this, item);\n            },\n            //性别显示转换\n            formatEnabled: function (row, column) {\n                return row.Enabled ? '正常' : '未知';\n            },\n            formatCreateTime: function (row, column) {\n                return (!row.CreateTime || row.CreateTime == '') ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getModules();\n            },\n            //获取用户列表\n            getModules() {\n                let para = {\n                    page: this.page,\n                    key: this.filters.LinkUrl\n                };\n                this.listLoading = true;\n\n                //NProgress.start();\n                getModuleListPage(para).then((res) => {\n                    this.total = res.data.response.dataCount;\n                    this.users = res.data.response.data;\n                    this.listLoading = false;\n                    //NProgress.done();\n                });\n            },\n            //删除\n            handleDel() {\n                let row = this.currentRow;\n                if (!row) {\n                    this.$message({\n                    message: \"请选择要删除的一行数据！\",\n                    type: \"error\"\n                    });\n\n                    return;\n                }\n                this.$confirm('确认删除该记录吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let para = {id: row.Id};\n                    removeModule(para).then((res) => {\n\n                        if (util.isEmt.format(res)) {\n                            this.listLoading = false;\n                            return;\n                        }\n                        this.listLoading = false;\n                        //NProgress.done();\n                        if (res.data.success) {\n                            this.$message({\n                                message: '删除成功',\n                                type: 'success'\n                            });\n\n                        } else {\n                            this.$message({\n                                message: res.data.msg,\n                                type: 'error'\n                            });\n                        }\n\n                        this.getModules();\n                    });\n                }).catch(() => {\n\n                });\n            },\n            //显示编辑界面\n            handleEdit() {\n                let row = this.currentRow;\n                if (!row) {\n                    this.$message({\n                    message: \"请选择要编辑的一行数据！\",\n                    type: \"error\"\n                    });\n\n                    return;\n                }\n                this.editFormVisible = true;\n                this.editForm = Object.assign({}, row);\n            },\n            //显示新增界面\n            handleAdd() {\n                this.addFormVisible = true;\n                this.addForm = {\n                    CreateBy: '',\n                    LinkUrl: '',\n                    Name: '',\n                    Enabled: 'true',\n                };\n            },\n            //编辑\n            editSubmit: function () {\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            this.editLoading = true;\n                            //NProgress.start();\n                            let para = Object.assign({}, this.editForm);\n\n                            para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n\n                            editModule(para).then((res) => {\n\n                                if (util.isEmt.format(res)) {\n                                    this.editLoading = false;\n                                    return;\n                                }\n                                if (res.data.success) {\n                                    this.editLoading = false;\n                                    //NProgress.done();\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'success'\n                                    });\n                                    this.$refs['editForm'].resetFields();\n                                    this.editFormVisible = false;\n                                    this.getModules();\n                                } else {\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'error'\n                                    });\n\n                                }\n                            });\n                        });\n                    }\n                });\n            },\n            //新增\n            addSubmit: function () {\n                let _this = this;\n                this.$refs.addForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            this.addLoading = true;\n                            //NProgress.start();\n                            let para = Object.assign({}, this.addForm);\n\n                            para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n                            para.ModifyTime = para.CreateTime;\n                            para.IsDeleted = false;\n\n                            var user = JSON.parse(window.localStorage.user);\n\n                            if (user && user.uID > 0) {\n                                para.CreateId = user.uID;\n                                para.CreateBy = user.uRealName;\n                            } else {\n                                this.$message({\n                                    message: '用户信息为空，先登录',\n                                    type: 'error'\n                                });\n                                _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n                            }\n\n\n                            addModule(para).then((res) => {\n\n                                if (util.isEmt.format(res)) {\n                                    this.addLoading = false;\n                                    return;\n                                }\n\n                                if (res.data.success) {\n                                    this.addLoading = false;\n                                    //NProgress.done();\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'success'\n                                    });\n                                    this.$refs['addForm'].resetFields();\n                                    this.addFormVisible = false;\n                                    this.getModules();\n                                }\n                                else {\n                                    this.$message({\n                                        message: res.data.msg,\n                                        type: 'error'\n                                    });\n\n                                }\n\n                            });\n\n                        });\n                    }\n                });\n            },\n            selsChange: function (sels) {\n                this.sels = sels;\n            },\n            //批量删除\n            batchRemove: function () {\n                this.$message({\n                    message: '该功能未开放',\n                    type: 'warning'\n                });\n            }\n        },\n        mounted() {\n            this.getModules();\n\n            let routers = window.localStorage.router\n            ? JSON.parse(window.localStorage.router)\n            : [];\n            this.buttonList = getButtonList(this.$route.path, routers);\n        }\n    }\n\n</script>\n\n<style scoped>\n\n</style>\n"]}]}