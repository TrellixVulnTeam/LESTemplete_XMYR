{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\Permission\\Module.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\Permission\\Module.vue","mtime":1612255113521},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport util from '../../../util/date'\nimport { getModuleListPage, removeModule, editModule, addModule } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/ToolbarButton\";\nimport SearchForm from \"../../components/SearchForm\";\nimport ToolbarExport from \"../../components/ToolbarExport\";\nimport { formatDate } from '../../../util/tools'\n\nexport default {\n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件 \n  data () {\n    return {\n\n      //导出组件相关 \n      exportFileName: '角色管理信息',//要导出的文件名 \n      currentPageData: [],//当前页面的列表数据 \n      tHeader: ['接口地址', '描述'],//当前页面列表的表头汉字数组，导出用 \n      filterVal: ['LinkUrl', 'Name'],//当前页面列表的表头属性数组，导出用 \n\n      //搜索框相关 \n      ChildSearchForm: {},\n      commonSearchOptionSet: \"模糊\",//通用查询的默认配置,\"模糊\"或\"精准\"\n      controlStyle: {//设置搜索控件的长度等样式 \n        width: '200px',\n      },\n      labelWidth: \"90px\",//显示Label的宽度 \n      drawerSize: \"450px\",//drawner宽度设置 \n      searchFormInputPlaceholder: '请输入接口地址/描述',//要给子搜索组件传递的值\n      searchFormInputAttrs: ['LinkUrl', 'Name'],//要给子搜索组件传递的属性名\n      formOptions: [\n        {\n          label: '接口地址',\n          prop: 'LinkUrl',\n          element: 'el-input',\n        },\n        {\n          label: '描述',\n          prop: 'Name',\n          element: 'el-input',\n        },\n        {\n          label: '创建时间',\n          prop: 'CreateTime',\n          type: 'datetimerange',\n          element: 'el-date-picker',\n        }\n      ],\n\n\n      tableHeight: window.innerHeight - 180, // 控制表格的高度\n\n      buttonList: [],\n      currentRow: null,\n      filters: {\n        LinkUrl: ''\n      },\n      users: [],\n      statusList: [{ LinkUrl: '激活', value: true }, { LinkUrl: '禁用', value: false }],\n      total: 0,\n      page: 1,\n      pageSize: 10,\n      listLoading: false,\n      sels: [],//列表选中列\n\n      addDialogFormVisible: false,\n      editFormVisible: false,//编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n\n        LinkUrl: [\n          { required: true, message: '请输入接口地址', trigger: 'blur' }\n        ],\n\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: false,\n      },\n\n      addFormVisible: false,//新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n\n        LinkUrl: [\n          { required: true, message: '请输入接口地址', trigger: 'blur' }\n        ],\n\n      },\n      //新增界面数据\n      addForm: {\n        CreateBy: '',\n        CreateId: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: '',\n      }\n\n    }\n  },\n  methods: {\n    // 设置索引 \n    indexMethod (index) {\n      return (this.page - 1) * this.pageSize + 1 + index\n    },\n    selectCurrentRow (val) {\n      this.currentRow = val;\n    },\n    callFunction (item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    handleCurrentChange (val) {\n      this.page = val;\n      this.getModules();\n    },\n    handleSizeChange (val) {\n      this.pageSize = val;\n      this.getModules();\n    },\n    /** \n     * 获取请求参数 \n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据 \n     */\n    getPostParam (flag) {\n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData());\n      para.page = this.page\n      para.pageSize = this.pageSize\n      if (flag === '2') { // 全部导出 \n        para.page = 1\n        para.pageSize = 10000\n      }\n      return para\n    },\n    //性别显示转换\n    formatEnabled: function (row, column) {\n      return row.Enabled ? '正常' : '未知';\n    },\n    formatCreateTime: function (row, column) {\n      return (!row.CreateTime || row.CreateTime == '') ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\n    },\n    handleCurrentChange (val) {\n      this.page = val;\n      this.getModules();\n    },\n    //获取用户列表\n    getModules () {\n      let para = this.getPostParam('1');\n      this.listLoading = true;\n\n      //NProgress.start();\n      getModuleListPage(para).then((res) => {\n        this.total = res.data.response.dataCount;\n        this.users = res.data.response.data;\n        this.listLoading = false;\n        //NProgress.done();\n      });\n    },\n    //获取全部列表 \n    exportAllData () {\n      let para = this.getPostParam('2');\n      this.listLoading = true;\n      getModuleListPage(para).then((res) => {\n        var allData = res.data.response.data;\n        this.$refs.cmToolbarExport.export2Excel(allData);\n        this.listLoading = false;\n      });\n    },\n    //删除\n    handleDel () {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true;\n        //NProgress.start();\n        let para = { id: row.Id };\n        removeModule(para).then((res) => {\n\n          if (util.isEmt.format(res)) {\n            this.listLoading = false;\n            return;\n          }\n          this.listLoading = false;\n          //NProgress.done();\n          if (res.data.success) {\n            this.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n\n          } else {\n            this.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          this.getModules();\n        });\n      }).catch(() => {\n\n      });\n    },\n    //显示编辑界面\n    handleEdit () {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.editFormVisible = true;\n      this.editForm = Object.assign({}, row);\n    },\n    //显示新增界面\n    handleAdd () {\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: 'true',\n      };\n    },\n    //编辑\n    editSubmit: function () {\n      this.$refs.editForm.validate((valid) => {\n        if (valid) {\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\n            this.editLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.editForm);\n\n            para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n\n            editModule(para).then((res) => {\n\n              if (util.isEmt.format(res)) {\n                this.editLoading = false;\n                return;\n              }\n              if (res.data.success) {\n                this.editLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n                this.$refs['editForm'].resetFields();\n                this.editFormVisible = false;\n                this.getModules();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function () {\n      let _this = this;\n      this.$refs.addForm.validate((valid) => {\n        if (valid) {\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\n            this.addLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.addForm);\n\n            para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n            para.ModifyTime = para.CreateTime;\n            para.IsDeleted = false;\n\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              this.$message({\n                message: '用户信息为空，先登录',\n                type: 'error'\n              });\n              _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n            }\n\n\n            addModule(para).then((res) => {\n\n              if (util.isEmt.format(res)) {\n                this.addLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                this.addLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n                this.$refs['addForm'].resetFields();\n                this.addFormVisible = false;\n                this.getModules();\n              }\n              else {\n                this.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n\n              }\n\n            });\n\n          });\n        }\n      });\n    },\n    selsChange: function (sels) {\n      this.sels = sels;\n    }\n  },\n  mounted () {\n    this.getModules();\n\n    let routers = window.localStorage.router\n      ? JSON.parse(window.localStorage.router)\n      : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n}\n\n",{"version":3,"sources":["Module.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Module.vue","sourceRoot":"src\\views\\Permission","sourcesContent":["<template>\n  <section>\n    <!--工具条-->\n    <el-col :span=\"24\"\n            class=\"toolbar\"\n            style=\"padding-bottom: 0px;\">\n      <el-form :inline=\"true\"\n               @submit.native.prevent>\n        <toolbar :buttonList=\"buttonList\"\n                 @callFunction=\"callFunction\">\n        </toolbar>\n        <!-- 搜索 -->\n        <SearchForm :formOptions=\"formOptions\"\n                    :commonSearchOptionSet=\"commonSearchOptionSet\"\n                    :drawerSize=\"drawerSize\"\n                    :labelWidth=\"labelWidth\"\n                    :controlStyle=\"controlStyle\"\n                    :searchFormInputPlaceholder=\"searchFormInputPlaceholder\"\n                    :searchFormInputAttrs=\"searchFormInputAttrs\"\n                    ref=\"ChildSearchForm\"\n                    @onSearch=\"getModules\" />\n      </el-form>\n    </el-col>\n\n    <!--列表-->\n    <el-table :data=\"users\"\n              size=\"small\"\n              :height=\"tableHeight\"\n              highlight-current-row\n              @current-change=\"selectCurrentRow\"\n              v-loading=\"listLoading\"\n              @selection-change=\"selsChange\"\n              style=\"width: 100%;\">\n      <el-table-column type=\"index\"\n                       :index=\"indexMethod\"\n                       label=\"#\"\n                       align=\"center\"\n                       width=\"50\">\n      </el-table-column>\n      <el-table-column prop=\"LinkUrl\"\n                       label=\"接口地址\"\n                       width=\"\"\n                       sortable>\n      </el-table-column>\n      <el-table-column prop=\"Name\"\n                       label=\"描述\"\n                       width=\"300\"\n                       sortable>\n      </el-table-column>\n      <el-table-column prop=\"CreateTime\"\n                       label=\"创建时间\"\n                       :formatter=\"formatCreateTime\"\n                       width=\"\"\n                       sortable>\n      </el-table-column>\n      <el-table-column prop=\"CreateBy\"\n                       label=\"创建者\"\n                       width=\"\"\n                       sortable>\n      </el-table-column>\n      <el-table-column prop=\"Enabled\"\n                       label=\"状态\"\n                       width=\"\"\n                       sortable>\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.Enabled  ? 'success' : 'danger'\"\n                  disable-transitions>{{scope.row.Enabled ? \"正常\":\"禁用\"}}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <!-- <el-table-column label=\"操作\" width=\"150\">\n                <template scope=\"scope\">\n                    <el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n                </template>\n            </el-table-column> -->\n    </el-table>\n\n    <!--工具条-->\n    <el-col :span=\"24\"\n            style=\"margin:10px 10px 10px 0px;\"\n            class=\"toolbar\">\n      <el-pagination @size-change=\"handleSizeChange\"\n                     @current-change=\"handleCurrentChange\"\n                     :current-page=\"page\"\n                     background\n                     :page-sizes=\"[5,10,50,100, 200, 300, 400]\"\n                     :page-size=\"pageSize\"\n                     layout=\"total, sizes, prev, pager, next, jumper\"\n                     :total=\"total\">\n      </el-pagination>\n    </el-col>\n\n    <!--编辑界面-->\n    <el-dialog title=\"编辑\"\n               size=\"small\"\n               :visible.sync=\"editFormVisible\"\n               v-model=\"editFormVisible\"\n               :close-on-click-modal=\"false\">\n      <el-form :model=\"editForm\"\n               label-width=\"80px\"\n               :rules=\"editFormRules\"\n               ref=\"editForm\">\n        <el-form-item label=\"接口地址\"\n                      prop=\"LinkUrl\">\n          <el-input v-model=\"editForm.LinkUrl\"\n                    auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"接口描述\"\n                      prop=\"Name\">\n          <el-input v-model=\"editForm.Name\"\n                    auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\"\n                      prop=\"Enabled\">\n          <el-select v-model=\"editForm.Enabled\"\n                     placeholder=\"请选择状态\">\n            <el-option v-for=\"item in statusList\"\n                       :key=\"item.value\"\n                       :label=\"item.LinkUrl\"\n                       :value=\"item.value\"></el-option>\n\n          </el-select>\n        </el-form-item>\n\n      </el-form>\n      <div slot=\"footer\"\n           class=\"dialog-footer\">\n        <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\"\n                   @click.native=\"editSubmit\"\n                   :loading=\"editLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!--新增界面-->\n    <el-dialog title=\"新增\"\n               size=\"small\"\n               :visible.sync=\"addFormVisible\"\n               v-model=\"addFormVisible\"\n               :close-on-click-modal=\"false\">\n      <el-form :model=\"addForm\"\n               label-width=\"80px\"\n               :rules=\"addFormRules\"\n               ref=\"addForm\">\n        <el-form-item label=\"接口地址\"\n                      prop=\"LinkUrl\">\n          <el-input v-model=\"addForm.LinkUrl\"\n                    auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"接口描述\"\n                      prop=\"Name\">\n          <el-input v-model=\"addForm.Name\"\n                    auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\"\n                      prop=\"Enabled\">\n          <el-select v-model=\"addForm.Enabled\"\n                     placeholder=\"请选择状态\">\n            <el-option label=\"激活\"\n                       value=\"true\"></el-option>\n            <el-option label=\"禁用\"\n                       value=\"false\"></el-option>\n          </el-select>\n        </el-form-item>\n\n      </el-form>\n      <div slot=\"footer\"\n           class=\"dialog-footer\">\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\"\n                   @click.native=\"addSubmit\"\n                   :loading=\"addLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n  </section>\n</template>\n\n<script>\nimport util from '../../../util/date'\nimport { getModuleListPage, removeModule, editModule, addModule } from '../../api/api';\nimport { getButtonList } from \"../../promissionRouter\";\nimport Toolbar from \"../../components/ToolbarButton\";\nimport SearchForm from \"../../components/SearchForm\";\nimport ToolbarExport from \"../../components/ToolbarExport\";\nimport { formatDate } from '../../../util/tools'\n\nexport default {\n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件 \n  data () {\n    return {\n\n      //导出组件相关 \n      exportFileName: '角色管理信息',//要导出的文件名 \n      currentPageData: [],//当前页面的列表数据 \n      tHeader: ['接口地址', '描述'],//当前页面列表的表头汉字数组，导出用 \n      filterVal: ['LinkUrl', 'Name'],//当前页面列表的表头属性数组，导出用 \n\n      //搜索框相关 \n      ChildSearchForm: {},\n      commonSearchOptionSet: \"模糊\",//通用查询的默认配置,\"模糊\"或\"精准\"\n      controlStyle: {//设置搜索控件的长度等样式 \n        width: '200px',\n      },\n      labelWidth: \"90px\",//显示Label的宽度 \n      drawerSize: \"450px\",//drawner宽度设置 \n      searchFormInputPlaceholder: '请输入接口地址/描述',//要给子搜索组件传递的值\n      searchFormInputAttrs: ['LinkUrl', 'Name'],//要给子搜索组件传递的属性名\n      formOptions: [\n        {\n          label: '接口地址',\n          prop: 'LinkUrl',\n          element: 'el-input',\n        },\n        {\n          label: '描述',\n          prop: 'Name',\n          element: 'el-input',\n        },\n        {\n          label: '创建时间',\n          prop: 'CreateTime',\n          type: 'datetimerange',\n          element: 'el-date-picker',\n        }\n      ],\n\n\n      tableHeight: window.innerHeight - 180, // 控制表格的高度\n\n      buttonList: [],\n      currentRow: null,\n      filters: {\n        LinkUrl: ''\n      },\n      users: [],\n      statusList: [{ LinkUrl: '激活', value: true }, { LinkUrl: '禁用', value: false }],\n      total: 0,\n      page: 1,\n      pageSize: 10,\n      listLoading: false,\n      sels: [],//列表选中列\n\n      addDialogFormVisible: false,\n      editFormVisible: false,//编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n\n        LinkUrl: [\n          { required: true, message: '请输入接口地址', trigger: 'blur' }\n        ],\n\n      },\n      //编辑界面数据\n      editForm: {\n        Id: 0,\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: false,\n      },\n\n      addFormVisible: false,//新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n\n        LinkUrl: [\n          { required: true, message: '请输入接口地址', trigger: 'blur' }\n        ],\n\n      },\n      //新增界面数据\n      addForm: {\n        CreateBy: '',\n        CreateId: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: '',\n      }\n\n    }\n  },\n  methods: {\n    // 设置索引 \n    indexMethod (index) {\n      return (this.page - 1) * this.pageSize + 1 + index\n    },\n    selectCurrentRow (val) {\n      this.currentRow = val;\n    },\n    callFunction (item) {\n      this.filters = {\n        name: item.search\n      };\n      this[item.Func].apply(this, item);\n    },\n    handleCurrentChange (val) {\n      this.page = val;\n      this.getModules();\n    },\n    handleSizeChange (val) {\n      this.pageSize = val;\n      this.getModules();\n    },\n    /** \n     * 获取请求参数 \n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据 \n     */\n    getPostParam (flag) {\n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData());\n      para.page = this.page\n      para.pageSize = this.pageSize\n      if (flag === '2') { // 全部导出 \n        para.page = 1\n        para.pageSize = 10000\n      }\n      return para\n    },\n    //性别显示转换\n    formatEnabled: function (row, column) {\n      return row.Enabled ? '正常' : '未知';\n    },\n    formatCreateTime: function (row, column) {\n      return (!row.CreateTime || row.CreateTime == '') ? '' : util.formatDate.format(new Date(row.CreateTime), 'yyyy-MM-dd');\n    },\n    handleCurrentChange (val) {\n      this.page = val;\n      this.getModules();\n    },\n    //获取用户列表\n    getModules () {\n      let para = this.getPostParam('1');\n      this.listLoading = true;\n\n      //NProgress.start();\n      getModuleListPage(para).then((res) => {\n        this.total = res.data.response.dataCount;\n        this.users = res.data.response.data;\n        this.listLoading = false;\n        //NProgress.done();\n      });\n    },\n    //获取全部列表 \n    exportAllData () {\n      let para = this.getPostParam('2');\n      this.listLoading = true;\n      getModuleListPage(para).then((res) => {\n        var allData = res.data.response.data;\n        this.$refs.cmToolbarExport.export2Excel(allData);\n        this.listLoading = false;\n      });\n    },\n    //删除\n    handleDel () {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要删除的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true;\n        //NProgress.start();\n        let para = { id: row.Id };\n        removeModule(para).then((res) => {\n\n          if (util.isEmt.format(res)) {\n            this.listLoading = false;\n            return;\n          }\n          this.listLoading = false;\n          //NProgress.done();\n          if (res.data.success) {\n            this.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n\n          } else {\n            this.$message({\n              message: res.data.msg,\n              type: 'error'\n            });\n          }\n\n          this.getModules();\n        });\n      }).catch(() => {\n\n      });\n    },\n    //显示编辑界面\n    handleEdit () {\n      let row = this.currentRow;\n      if (!row) {\n        this.$message({\n          message: \"请选择要编辑的一行数据！\",\n          type: \"error\"\n        });\n\n        return;\n      }\n      this.editFormVisible = true;\n      this.editForm = Object.assign({}, row);\n    },\n    //显示新增界面\n    handleAdd () {\n      this.addFormVisible = true;\n      this.addForm = {\n        CreateBy: '',\n        LinkUrl: '',\n        Name: '',\n        Enabled: 'true',\n      };\n    },\n    //编辑\n    editSubmit: function () {\n      this.$refs.editForm.validate((valid) => {\n        if (valid) {\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\n            this.editLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.editForm);\n\n            para.ModifyTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n\n            editModule(para).then((res) => {\n\n              if (util.isEmt.format(res)) {\n                this.editLoading = false;\n                return;\n              }\n              if (res.data.success) {\n                this.editLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n                this.$refs['editForm'].resetFields();\n                this.editFormVisible = false;\n                this.getModules();\n              } else {\n                this.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function () {\n      let _this = this;\n      this.$refs.addForm.validate((valid) => {\n        if (valid) {\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\n            this.addLoading = true;\n            //NProgress.start();\n            let para = Object.assign({}, this.addForm);\n\n            para.CreateTime = util.formatDate.format(new Date(), 'yyyy-MM-dd');\n            para.ModifyTime = para.CreateTime;\n            para.IsDeleted = false;\n\n            var user = JSON.parse(window.localStorage.user);\n\n            if (user && user.uID > 0) {\n              para.CreateId = user.uID;\n              para.CreateBy = user.uRealName;\n            } else {\n              this.$message({\n                message: '用户信息为空，先登录',\n                type: 'error'\n              });\n              _this.$router.replace(_this.$route.query.redirect ? _this.$route.query.redirect : \"/\");\n            }\n\n\n            addModule(para).then((res) => {\n\n              if (util.isEmt.format(res)) {\n                this.addLoading = false;\n                return;\n              }\n\n              if (res.data.success) {\n                this.addLoading = false;\n                //NProgress.done();\n                this.$message({\n                  message: res.data.msg,\n                  type: 'success'\n                });\n                this.$refs['addForm'].resetFields();\n                this.addFormVisible = false;\n                this.getModules();\n              }\n              else {\n                this.$message({\n                  message: res.data.msg,\n                  type: 'error'\n                });\n\n              }\n\n            });\n\n          });\n        }\n      });\n    },\n    selsChange: function (sels) {\n      this.sels = sels;\n    }\n  },\n  mounted () {\n    this.getModules();\n\n    let routers = window.localStorage.router\n      ? JSON.parse(window.localStorage.router)\n      : [];\n    this.buttonList = getButtonList(this.$route.path, routers);\n  }\n}\n\n</script>\n\n<style scoped>\n</style>\n"]}]}