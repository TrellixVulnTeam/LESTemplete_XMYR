{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\components\\ToolbarExport.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\components\\ToolbarExport.vue","mtime":1611282930470},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport XLSX, { WorkSheet } from \"xlsx\";\r\nimport { getNowFormatDateForExport } from '../../util/tools'\r\nexport default {\r\n  name: \"ToolbarExport\",\r\n  data () {\r\n    return {\r\n      sonPrintDialogVisible: false\r\n    };\r\n  },\r\n  props: {\r\n    exportFileName: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    //接受父组件传值\r\n    filterVal: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    tHeader: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    currentPageData: {\r\n      type: Array,\r\n      required: true,\r\n    }\r\n  },\r\n  methods: {\r\n    showPrintPage () {\r\n      this.sonPrintDialogVisible = true\r\n    },\r\n    // 仅导出本页\r\n    exprotCurPage () {\r\n      this.export2Excel(this.currentPageData)\r\n    },\r\n    // 导出全部\r\n    exprotAll () {\r\n      this.$parent.exportAllData()\r\n    },\r\n    /** 加载方法 */\r\n    loadingToload (text) {\r\n      const loading = this.$loading({\r\n        lock: true,\r\n        text: text,\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(255, 255, 255, 0.8)',\r\n        target: document.querySelector('#mainDiv')\r\n      })\r\n      this.curLoading = loading\r\n    },\r\n    // 导出Excel表格\r\n    export2Excel (exportData) {\r\n      var text = this.exportFileName + '导出中...'\r\n      this.loadingToload(text)\r\n\r\n      require.ensure([], () => {\r\n        const { export_json_to_excel } = require('../../util/Export2Excel.js') // Export2Excel.js路径\r\n        const list = exportData // 数据源\r\n        const data = this.formatJson(this.filterVal, list) // 数据为json格式\r\n        export_json_to_excel(this.tHeader, data, this.exportFileName + '(' + getNowFormatDateForExport() + ')') // 导出表格名字\r\n        this.$notify({\r\n          title: '导出成功',\r\n          message: this.exportFileName + '导出成功',\r\n          type: 'success'\r\n        })\r\n        this.sonPrintDialogVisible = false\r\n        this.curLoading.close()\r\n      })\r\n    },\r\n    formatJson (filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]))\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["ToolbarExport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToolbarExport.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n  <el-dialog title=\"提示\"\r\n             :visible.sync=\"sonPrintDialogVisible\"\r\n             width=\"30%\"\r\n             center>\r\n    <span>请选择导出范围</span>\r\n    <span slot=\"footer\"\r\n          class=\"dialog-footer\">\r\n      <el-button type=\"primary\"\r\n                 @click=\"exprotCurPage\">仅 本 页 导 出</el-button>\r\n      <el-button type=\"success\"\r\n                 @click=\"exprotAll\">全 部 导 出</el-button>\r\n      <el-button @click=\"sonPrintDialogVisible = false\">取 消 导 出</el-button>\r\n\r\n    </span>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\nimport XLSX, { WorkSheet } from \"xlsx\";\r\nimport { getNowFormatDateForExport } from '../../util/tools'\r\nexport default {\r\n  name: \"ToolbarExport\",\r\n  data () {\r\n    return {\r\n      sonPrintDialogVisible: false\r\n    };\r\n  },\r\n  props: {\r\n    exportFileName: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    //接受父组件传值\r\n    filterVal: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    tHeader: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    currentPageData: {\r\n      type: Array,\r\n      required: true,\r\n    }\r\n  },\r\n  methods: {\r\n    showPrintPage () {\r\n      this.sonPrintDialogVisible = true\r\n    },\r\n    // 仅导出本页\r\n    exprotCurPage () {\r\n      this.export2Excel(this.currentPageData)\r\n    },\r\n    // 导出全部\r\n    exprotAll () {\r\n      this.$parent.exportAllData()\r\n    },\r\n    /** 加载方法 */\r\n    loadingToload (text) {\r\n      const loading = this.$loading({\r\n        lock: true,\r\n        text: text,\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(255, 255, 255, 0.8)',\r\n        target: document.querySelector('#mainDiv')\r\n      })\r\n      this.curLoading = loading\r\n    },\r\n    // 导出Excel表格\r\n    export2Excel (exportData) {\r\n      var text = this.exportFileName + '导出中...'\r\n      this.loadingToload(text)\r\n\r\n      require.ensure([], () => {\r\n        const { export_json_to_excel } = require('../../util/Export2Excel.js') // Export2Excel.js路径\r\n        const list = exportData // 数据源\r\n        const data = this.formatJson(this.filterVal, list) // 数据为json格式\r\n        export_json_to_excel(this.tHeader, data, this.exportFileName + '(' + getNowFormatDateForExport() + ')') // 导出表格名字\r\n        this.$notify({\r\n          title: '导出成功',\r\n          message: this.exportFileName + '导出成功',\r\n          type: 'success'\r\n        })\r\n        this.sonPrintDialogVisible = false\r\n        this.curLoading.close()\r\n      })\r\n    },\r\n    formatJson (filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]))\r\n    }\r\n  }\r\n};\r\n</script>"]}]}