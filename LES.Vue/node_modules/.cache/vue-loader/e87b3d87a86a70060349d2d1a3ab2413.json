{"remainingRequest":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\SalverManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\src\\views\\BasicData\\SalverManage.vue","mtime":1612254943521},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\数瀛信息科技\\公司项目\\广州西门子原材料立体库\\低压线圈\\src\\LES.Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n \r\nimport util from '../../../util/date'\r\nimport { getCodeItemsBySetCode, getSalverListPage, removeSalver, editSalver, addSalver } from '../../api/api';\r\nimport { getButtonList } from \"../../promissionRouter\";\r\nimport Toolbar from \"../../components/ToolbarButton\";\r\nimport SearchForm from \"../../components/SearchForm\";\r\nimport ToolbarExport from \"../../components/ToolbarExport\";\r\nimport { formatDate } from '../../../util/tools'\r\nimport { isShowOperatorButtonCommon, isNeedShowOperatorColumn } from '../../../util/common'\r\n\r\n\r\nexport default {\r\n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件 \r\n  data () {\r\n    return {\r\n      //导出组件相关 \r\n      exportFileName: '$ChinaComment$信息',//要导出的文件名 \r\n      currentPageData: [],//当前页面的列表数据 \r\n      tHeader: ['托盘编号', '托盘类型', '所属产线', '创建者ID', '创建者', '修改ID', '修改者', '修改时间'],//当前页面列表的表头汉字数组，导出用 \r\n      filterVal: ['SalverCode', 'SalverType', 'AllowLine', 'CreateId', 'CreateBy', 'ModifyId', 'ModifyBy', 'ModifyTime'],//当前页面列表的表头属性数组，导出用 \r\n\r\n      //搜索框相关 \r\n      commonSearchOptionSet: \"精准\",//通用查询的默认配置,\"模糊\"或\"精准\"\r\n      controlStyle: {//设置搜索控件的长度等样式\r\n        width: '300px',\r\n      },\r\n      labelWidth: \"90px\",//显示Label的宽度\r\n      drawerSize: \"450px\",//drawner宽度设置 \r\n      searchFormInputPlaceholder: '请输入托盘编号/托盘类型',//要给子搜索组件传递的值 \r\n      searchFormInputAttrs: ['SalverCode', 'SalverType'],//要给子搜索组件传递的属性名\r\n      formOptions: [\r\n        {\r\n          label: '托盘编号',\r\n          prop: 'SalverCode',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '托盘类型',\r\n          prop: 'SalverType',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '所属产线',\r\n          prop: 'AllowLine',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '创建者ID',\r\n          prop: 'CreateId',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '创建者',\r\n          prop: 'CreateBy',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '修改ID',\r\n          prop: 'ModifyId',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '修改者',\r\n          prop: 'ModifyBy',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '修改时间',\r\n          prop: 'ModifyTime',\r\n          element: 'el-date-picker',\r\n        },\r\n      ],\r\n\r\n      isShowOperatorColumn: true,// 是否显示【操作】列,true显示 false不显示\r\n      tableHeight: window.innerHeight - 180, // 控制表格的高度\r\n\r\n      workshopCodeItems: [],//车间的码表集合\r\n\r\n      isAdd: false, // 是否是新增 \r\n      dialogTitle: '',\r\n\r\n      filters: {\r\n        name: ''\r\n      },\r\n      Salvers: [],\r\n      roles: [],\r\n      total: 0,\r\n      buttonList: [],\r\n      currentRow: null,\r\n      page: 1,\r\n      pageSize: 10,\r\n      listLoading: false,\r\n      sels: [],//列表选中列 \r\n\r\n      addFormVisible: false,//新增界面是否显示 \r\n      addLoading: false,\r\n      //新增界面数据 \r\n      addForm: {\r\n\r\n      }\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    //是否显示某个操作按钮\r\n    isShowOperatorButton (flag) {\r\n      return isShowOperatorButtonCommon(this.isShowOperatorColumn, flag, this.buttonList)\r\n    },\r\n    //通过代码集获取代码项集合 \r\n    getCodeItemsBySetCode () {\r\n      let para = {\r\n        setCode: '002' // 车间码表集\r\n      }\r\n      getCodeItemsBySetCode(para).then((res) => {\r\n        this.workshopCodeItems = res.data.response;\r\n        //给搜索框中的select控件赋值\r\n        let propValue = \"AllowLine\";\r\n        this.formOptions = setformOptionsNewValue(this.formOptions, propValue, this.workshopCodeItems);\r\n        this.$refs.ChildSearchForm.setNewFormOptions(this.formOptions)\r\n      });\r\n    },\r\n    // 设置索引 \r\n    indexMethod (index) {\r\n      return (this.page - 1) * this.pageSize + 1 + index\r\n    },\r\n    // 时间格式化 \r\n    formatterDateTime (row, column, cellValue, index) {\r\n      if (cellValue === null || cellValue === '') {\r\n        return ''\r\n      }\r\n      var NewDtime = new Date(Date.parse(cellValue))\r\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss')\r\n    },\r\n    selectCurrentRow (val) {\r\n      this.currentRow = val;\r\n    },\r\n    callFunction (item) {\r\n      this.filters = {\r\n        name: item.search\r\n      };\r\n      this[item.Func].apply(this, item);\r\n    },\r\n    handleCurrentChange (val) {\r\n      this.page = val;\r\n      this.getSalvers();\r\n    },\r\n    handleSizeChange (val) {\r\n      this.pageSize = val;\r\n      this.getSalvers();\r\n    },\r\n    /** \r\n     * 获取请求参数 \r\n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据 \r\n     */\r\n    getPostParam (flag) {\r\n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData());\r\n      para.page = this.page\r\n      para.pageSize = this.pageSize\r\n      if (flag === '2') { // 全部导出 \r\n        para.page = 1\r\n        para.pageSize = 10000\r\n      }\r\n      return para\r\n    },\r\n    //获取码表集列表 \r\n    getSalvers (formValue) {\r\n      //this.total = 0 \r\n      //this.Salvers = null \r\n      let para = this.getPostParam('1');\r\n      this.listLoading = true;\r\n      getSalverListPage(para).then((res) => {\r\n        this.total = res.data.response.dataCount;\r\n        this.Salvers = res.data.response.data;\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //获取全部列表 \r\n    exportAllData () {\r\n      let para = this.getPostParam('2');\r\n      this.listLoading = true;\r\n      getSalverListPage(para).then((res) => {\r\n        var allData = res.data.response.data;\r\n        this.$refs.cmToolbarExport.export2Excel(allData);\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //删除 \r\n    handleDel (selRow) {\r\n      let row = {};\r\n      if (selRow && selRow != undefined) {\r\n        this.currentRow = selRow;\r\n      }\r\n      row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要删除的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.$confirm('确认删除该记录吗?', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.listLoading = true;\r\n        //NProgress.start(); \r\n        let para = { id: row.Id };\r\n        debugger\r\n        removeSalver(para).then((res) => {\r\n\r\n          if (util.isEmt.format(res)) {\r\n            this.listLoading = false;\r\n            return;\r\n          }\r\n          this.listLoading = false;\r\n          //NProgress.done(); \r\n          if (res.data.success) {\r\n            this.$message({\r\n              message: '删除成功',\r\n              type: 'success'\r\n            });\r\n\r\n          } else {\r\n            this.$message({\r\n              message: res.data.msg,\r\n              type: 'error'\r\n            });\r\n          }\r\n\r\n          this.getSalvers();\r\n        });\r\n      }).catch(() => {\r\n\r\n      });\r\n    },\r\n    //显示编辑界面\r\n    handleEdit (selRow) {\r\n      let row = {};\r\n      if (selRow && selRow != undefined) {\r\n        this.currentRow = selRow;\r\n      }\r\n      row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要编辑的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.isAdd = false\r\n      this.dialogTitle = '编辑'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n      debugger\r\n      this.addForm = Object.assign({}, row);\r\n    },\r\n    //显示新增界面 \r\n    handleAdd () {\r\n      this.isAdd = true\r\n      this.dialogTitle = '新增'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n    },\r\n    // 更新数据 \r\n    SaveData (formName) {\r\n      this.submitDisabled = true\r\n\r\n      this.$refs.addForm.validate((valid) => {\r\n        if (valid) {\r\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n            this.addLoading = true;\r\n            let para = Object.assign({}, this.addForm);\r\n            if (this.isAdd) {//新增 \r\n              addSalver(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done(); \r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getSalvers();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n\r\n              });\r\n            } else {//编辑 \r\n              editSalver(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done(); \r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getSalvers();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    selsChange: function (sels) {\r\n      this.sels = sels;\r\n    },\r\n    //导出 \r\n    handleExport () {\r\n      this.currentPageData = this.Salvers\r\n      this.$refs.cmToolbarExport.showPrintPage()\r\n    },\r\n  },\r\n  mounted () {\r\n    this.getCodeItemsBySetCode();\r\n    this.getSalvers();\r\n\r\n    let routers = window.localStorage.router\r\n      ? JSON.parse(window.localStorage.router)\r\n      : [];\r\n    this.buttonList = getButtonList(this.$route.path, routers);\r\n    let isShow = isNeedShowOperatorColumn(this.buttonList);//控制是否要显示【操作】列\r\n    this.isShowOperatorColumn = isShow;\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["SalverManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SalverManage.vue","sourceRoot":"src\\views\\BasicData","sourcesContent":["<template>\r\n  <section>\r\n    <!--工具条-->\r\n    <el-col :span=\"24\"\r\n            class=\"toolbar\"\r\n            style=\"padding-bottom: 0px;\">\r\n      <el-form :inline=\"true\"\r\n               @submit.native.prevent>\r\n        <toolbar :buttonList=\"buttonList\"\r\n                 @callFunction=\"callFunction\">\r\n        </toolbar>\r\n        <!-- 搜索 -->\r\n        <SearchForm :formOptions=\"formOptions\"\r\n                    :commonSearchOptionSet=\"commonSearchOptionSet\"\r\n                    :drawerSize=\"drawerSize\"\r\n                    :labelWidth=\"labelWidth\"\r\n                    :controlStyle=\"controlStyle\"\r\n                    :searchFormInputPlaceholder=\"searchFormInputPlaceholder\"\r\n                    :searchFormInputAttrs=\"searchFormInputAttrs\"\r\n                    ref=\"ChildSearchForm\"\r\n                    @onSearch=\"getSalvers\" />\r\n      </el-form>\r\n    </el-col>\r\n\r\n    <!--列表-->\r\n    <el-table :data=\"Salvers\"\r\n              :height=\"tableHeight\"\r\n              highlight-current-row\r\n              size=\"small\"\r\n              @current-change=\"selectCurrentRow\"\r\n              v-loading=\"listLoading\"\r\n              @selection-change=\"selsChange\"\r\n              style=\"width: 99%;\">\r\n      <el-table-column type=\"index\"\r\n                       :index=\"indexMethod\"\r\n                       label=\"#\"\r\n                       align=\"center\"\r\n                       width=\"50\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"SalverCode\"\r\n                       label=\"托盘编号\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"SalverType\"\r\n                       label=\"托盘类型\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"AllowLine\"\r\n                       label=\"所属产线\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"CreateId\"\r\n                       label=\"创建者ID\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"CreateBy\"\r\n                       label=\"创建者\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"CreateTime\"\r\n                       label=\"创建时间\"\r\n                       width=\"150\"\r\n                       align=\"center\"\r\n                       :formatter=\"formatterDateTime\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"ModifyId\"\r\n                       label=\"修改ID\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"ModifyBy\"\r\n                       label=\"修改者\"\r\n                       align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"ModifyTime\"\r\n                       label=\"修改时间\"\r\n                       width=\"150\"\r\n                       align=\"center\"\r\n                       :formatter=\"formatterDateTime\">\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\"\r\n                       width=\"180\"\r\n                       v-if=\"isShowOperatorColumn\">\r\n        <template scope=\"scope\">\r\n          <el-button size=\"small\"\r\n                     icon=\"el-icon-edit\"\r\n                     type=\"primary\"\r\n                     v-if=\"isShowOperatorButton('edit')\"\r\n                     @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n          <el-button type=\"danger\"\r\n                     size=\"small\"\r\n                     icon=\"el-icon-delete\"\r\n                     v-if=\"isShowOperatorButton('del')\"\r\n                     @click=\"handleDel(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!--工具条-->\r\n    <el-col :span=\"24\"\r\n            style=\"margin:10px 10px 10px 0px;\"\r\n            class=\"toolbar\">\r\n      <el-pagination @size-change=\"handleSizeChange\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     :current-page=\"page\"\r\n                     background\r\n                     :page-sizes=\"[5,10,50,100, 200, 300, 400]\"\r\n                     :page-size=\"pageSize\"\r\n                     layout=\"total, sizes, prev, pager, next, jumper\"\r\n                     :total=\"total\">\r\n      </el-pagination>\r\n    </el-col>\r\n    <!--新增/编辑界面-->\r\n    <el-dialog :title=\"dialogTitle\"\r\n               :visible.sync=\"addFormVisible\"\r\n               v-model=\"addFormVisible\"\r\n               :close-on-click-modal=\"false\">\r\n      <el-form :model=\"addForm\"\r\n               size=\"small\"\r\n               label-width=\"80px\"\r\n               ref=\"addForm\">\r\n        <el-form-item label=\"托盘编号\"\r\n                      prop=\"SalverCode\"\r\n                      :rules=\"[{ required: true, message: '托盘编号不能为空'}]\">\r\n          <el-input v-model=\"addForm.SalverCode\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"托盘类型\"\r\n                      prop=\"SalverType\"\r\n                      :rules=\"[{ required: true, message: '托盘类型不能为空'}]\">\r\n          <el-input v-model=\"addForm.SalverType\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"所属产线\"\r\n                      prop=\"AllowLine\"\r\n                      :rules=\"[{ required: true, message: '所属产线不能为空'}]\">\r\n          <el-select v-model=\"addForm.AllowLine\"\r\n                     clearable\r\n                     placeholder=\"请选择\">\r\n            <el-option v-for=\"item in workshopCodeItems\"\r\n                       :key=\"item.value\"\r\n                       :label=\"item.label\"\r\n                       :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\"\r\n           class=\"dialog-footer\">\r\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\"\r\n                   @click.native=\"SaveData\"\r\n                   :loading=\"addLoading\">提交</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!-- 导出组件 -->\r\n    <ToolbarExport ref=\"cmToolbarExport\"\r\n                   :exportFileName=\"exportFileName\"\r\n                   :filterVal=\"filterVal\"\r\n                   :currentPageData=\"currentPageData\"\r\n                   :tHeader=\"tHeader\" />\r\n  </section>\r\n</template> \r\n \r\n<script> \r\nimport util from '../../../util/date'\r\nimport { getCodeItemsBySetCode, getSalverListPage, removeSalver, editSalver, addSalver } from '../../api/api';\r\nimport { getButtonList } from \"../../promissionRouter\";\r\nimport Toolbar from \"../../components/ToolbarButton\";\r\nimport SearchForm from \"../../components/SearchForm\";\r\nimport ToolbarExport from \"../../components/ToolbarExport\";\r\nimport { formatDate } from '../../../util/tools'\r\nimport { isShowOperatorButtonCommon, isNeedShowOperatorColumn } from '../../../util/common'\r\n\r\n\r\nexport default {\r\n  components: { Toolbar, SearchForm, ToolbarExport },//注册子组件 \r\n  data () {\r\n    return {\r\n      //导出组件相关 \r\n      exportFileName: '$ChinaComment$信息',//要导出的文件名 \r\n      currentPageData: [],//当前页面的列表数据 \r\n      tHeader: ['托盘编号', '托盘类型', '所属产线', '创建者ID', '创建者', '修改ID', '修改者', '修改时间'],//当前页面列表的表头汉字数组，导出用 \r\n      filterVal: ['SalverCode', 'SalverType', 'AllowLine', 'CreateId', 'CreateBy', 'ModifyId', 'ModifyBy', 'ModifyTime'],//当前页面列表的表头属性数组，导出用 \r\n\r\n      //搜索框相关 \r\n      commonSearchOptionSet: \"精准\",//通用查询的默认配置,\"模糊\"或\"精准\"\r\n      controlStyle: {//设置搜索控件的长度等样式\r\n        width: '300px',\r\n      },\r\n      labelWidth: \"90px\",//显示Label的宽度\r\n      drawerSize: \"450px\",//drawner宽度设置 \r\n      searchFormInputPlaceholder: '请输入托盘编号/托盘类型',//要给子搜索组件传递的值 \r\n      searchFormInputAttrs: ['SalverCode', 'SalverType'],//要给子搜索组件传递的属性名\r\n      formOptions: [\r\n        {\r\n          label: '托盘编号',\r\n          prop: 'SalverCode',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '托盘类型',\r\n          prop: 'SalverType',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '所属产线',\r\n          prop: 'AllowLine',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '创建者ID',\r\n          prop: 'CreateId',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '创建者',\r\n          prop: 'CreateBy',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '修改ID',\r\n          prop: 'ModifyId',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '修改者',\r\n          prop: 'ModifyBy',\r\n          element: 'el-input',\r\n        },\r\n        {\r\n          label: '修改时间',\r\n          prop: 'ModifyTime',\r\n          element: 'el-date-picker',\r\n        },\r\n      ],\r\n\r\n      isShowOperatorColumn: true,// 是否显示【操作】列,true显示 false不显示\r\n      tableHeight: window.innerHeight - 180, // 控制表格的高度\r\n\r\n      workshopCodeItems: [],//车间的码表集合\r\n\r\n      isAdd: false, // 是否是新增 \r\n      dialogTitle: '',\r\n\r\n      filters: {\r\n        name: ''\r\n      },\r\n      Salvers: [],\r\n      roles: [],\r\n      total: 0,\r\n      buttonList: [],\r\n      currentRow: null,\r\n      page: 1,\r\n      pageSize: 10,\r\n      listLoading: false,\r\n      sels: [],//列表选中列 \r\n\r\n      addFormVisible: false,//新增界面是否显示 \r\n      addLoading: false,\r\n      //新增界面数据 \r\n      addForm: {\r\n\r\n      }\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    //是否显示某个操作按钮\r\n    isShowOperatorButton (flag) {\r\n      return isShowOperatorButtonCommon(this.isShowOperatorColumn, flag, this.buttonList)\r\n    },\r\n    //通过代码集获取代码项集合 \r\n    getCodeItemsBySetCode () {\r\n      let para = {\r\n        setCode: '002' // 车间码表集\r\n      }\r\n      getCodeItemsBySetCode(para).then((res) => {\r\n        this.workshopCodeItems = res.data.response;\r\n        //给搜索框中的select控件赋值\r\n        let propValue = \"AllowLine\";\r\n        this.formOptions = setformOptionsNewValue(this.formOptions, propValue, this.workshopCodeItems);\r\n        this.$refs.ChildSearchForm.setNewFormOptions(this.formOptions)\r\n      });\r\n    },\r\n    // 设置索引 \r\n    indexMethod (index) {\r\n      return (this.page - 1) * this.pageSize + 1 + index\r\n    },\r\n    // 时间格式化 \r\n    formatterDateTime (row, column, cellValue, index) {\r\n      if (cellValue === null || cellValue === '') {\r\n        return ''\r\n      }\r\n      var NewDtime = new Date(Date.parse(cellValue))\r\n      return formatDate(NewDtime, 'yyyy-MM-dd hh:mm:ss')\r\n    },\r\n    selectCurrentRow (val) {\r\n      this.currentRow = val;\r\n    },\r\n    callFunction (item) {\r\n      this.filters = {\r\n        name: item.search\r\n      };\r\n      this[item.Func].apply(this, item);\r\n    },\r\n    handleCurrentChange (val) {\r\n      this.page = val;\r\n      this.getSalvers();\r\n    },\r\n    handleSizeChange (val) {\r\n      this.pageSize = val;\r\n      this.getSalvers();\r\n    },\r\n    /** \r\n     * 获取请求参数 \r\n     * flag:标记，1代表普通分页查询，2代表不分页，获取全部数据 \r\n     */\r\n    getPostParam (flag) {\r\n      let para = Object.assign({}, this.$refs.ChildSearchForm.getFormData());\r\n      para.page = this.page\r\n      para.pageSize = this.pageSize\r\n      if (flag === '2') { // 全部导出 \r\n        para.page = 1\r\n        para.pageSize = 10000\r\n      }\r\n      return para\r\n    },\r\n    //获取码表集列表 \r\n    getSalvers (formValue) {\r\n      //this.total = 0 \r\n      //this.Salvers = null \r\n      let para = this.getPostParam('1');\r\n      this.listLoading = true;\r\n      getSalverListPage(para).then((res) => {\r\n        this.total = res.data.response.dataCount;\r\n        this.Salvers = res.data.response.data;\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //获取全部列表 \r\n    exportAllData () {\r\n      let para = this.getPostParam('2');\r\n      this.listLoading = true;\r\n      getSalverListPage(para).then((res) => {\r\n        var allData = res.data.response.data;\r\n        this.$refs.cmToolbarExport.export2Excel(allData);\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    //删除 \r\n    handleDel (selRow) {\r\n      let row = {};\r\n      if (selRow && selRow != undefined) {\r\n        this.currentRow = selRow;\r\n      }\r\n      row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要删除的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.$confirm('确认删除该记录吗?', '提示', {\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.listLoading = true;\r\n        //NProgress.start(); \r\n        let para = { id: row.Id };\r\n        debugger\r\n        removeSalver(para).then((res) => {\r\n\r\n          if (util.isEmt.format(res)) {\r\n            this.listLoading = false;\r\n            return;\r\n          }\r\n          this.listLoading = false;\r\n          //NProgress.done(); \r\n          if (res.data.success) {\r\n            this.$message({\r\n              message: '删除成功',\r\n              type: 'success'\r\n            });\r\n\r\n          } else {\r\n            this.$message({\r\n              message: res.data.msg,\r\n              type: 'error'\r\n            });\r\n          }\r\n\r\n          this.getSalvers();\r\n        });\r\n      }).catch(() => {\r\n\r\n      });\r\n    },\r\n    //显示编辑界面\r\n    handleEdit (selRow) {\r\n      let row = {};\r\n      if (selRow && selRow != undefined) {\r\n        this.currentRow = selRow;\r\n      }\r\n      row = this.currentRow;\r\n      if (!row) {\r\n        this.$message({\r\n          message: \"请选择要编辑的一行数据！\",\r\n          type: \"error\"\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.isAdd = false\r\n      this.dialogTitle = '编辑'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n      debugger\r\n      this.addForm = Object.assign({}, row);\r\n    },\r\n    //显示新增界面 \r\n    handleAdd () {\r\n      this.isAdd = true\r\n      this.dialogTitle = '新增'\r\n      this.addFormVisible = true;\r\n      this.addForm = {\r\n      };\r\n    },\r\n    // 更新数据 \r\n    SaveData (formName) {\r\n      this.submitDisabled = true\r\n\r\n      this.$refs.addForm.validate((valid) => {\r\n        if (valid) {\r\n          this.$confirm('确认提交吗？', '提示', {}).then(() => {\r\n            this.addLoading = true;\r\n            let para = Object.assign({}, this.addForm);\r\n            if (this.isAdd) {//新增 \r\n              addSalver(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done(); \r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getSalvers();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n\r\n              });\r\n            } else {//编辑 \r\n              editSalver(para).then((res) => {\r\n\r\n                if (util.isEmt.format(res)) {\r\n                  this.addLoading = false;\r\n                  return;\r\n                }\r\n                if (res.data.success) {\r\n                  this.addLoading = false;\r\n                  //NProgress.done(); \r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'success'\r\n                  });\r\n                  this.$refs['addForm'].resetFields();\r\n                  this.addFormVisible = false;\r\n                  this.getSalvers();\r\n                }\r\n                else {\r\n                  this.addLoading = false;\r\n                  this.$message({\r\n                    message: res.data.msg,\r\n                    type: 'error'\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    selsChange: function (sels) {\r\n      this.sels = sels;\r\n    },\r\n    //导出 \r\n    handleExport () {\r\n      this.currentPageData = this.Salvers\r\n      this.$refs.cmToolbarExport.showPrintPage()\r\n    },\r\n  },\r\n  mounted () {\r\n    this.getCodeItemsBySetCode();\r\n    this.getSalvers();\r\n\r\n    let routers = window.localStorage.router\r\n      ? JSON.parse(window.localStorage.router)\r\n      : [];\r\n    this.buttonList = getButtonList(this.$route.path, routers);\r\n    let isShow = isNeedShowOperatorColumn(this.buttonList);//控制是否要显示【操作】列\r\n    this.isShowOperatorColumn = isShow;\r\n  }\r\n}\r\n\r\n</script> \r\n \r\n<style lang=\"scss\" scoped>\r\n</style> \r\n"]}]}